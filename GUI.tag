<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ConfigHelper.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Config/</path>
    <filename>_config_helper_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_CONFIG_VALUE_DEFAULT</name>
      <anchorfile>_config_helper_8h.html</anchorfile>
      <anchor>a6afab2970f18bc56d7ba95ba05294452</anchor>
      <arglist>(type, name, defaultValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_CONFIG_VALUE</name>
      <anchorfile>_config_helper_8h.html</anchorfile>
      <anchor>a0a23ecfbd91f61659e294db612d09c99</anchor>
      <arglist>(type, name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Converters.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_converters_8cpp</filename>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">Converters.h</includes>
  </compound>
  <compound kind="file">
    <name>Converters.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_converters_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common//RTTR.h</includes>
    <class kind="class">Convert</class>
    <member kind="function">
      <type>std::enable_if&lt; !std::is_enum&lt; std::wstring &gt;::value, std::string &gt;::type</type>
      <name>Convert::ToString&lt; std::wstring &gt;</name>
      <anchorfile>_converters_8h.html</anchorfile>
      <anchor>a1b23e01a11affa20f147bba5e37736f3</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; !std::is_enum&lt; std::wstring &gt;::value, std::wstring &gt;::type</type>
      <name>Convert::FromString&lt; std::wstring &gt;</name>
      <anchorfile>_converters_8h.html</anchorfile>
      <anchor>a131f043ef14ec40d421594fc38a0fbb9</anchor>
      <arglist>(const std::string &amp;value, const std::wstring &amp;defaultValue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EngineObject.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_engine_object_8cpp</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/Serialization.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_engine_object_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EngineObject.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_engine_object_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">EngineObject</class>
  </compound>
  <compound kind="file">
    <name>MemoryChunk.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_memory_chunk_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common//TypesDefinitions.h</includes>
    <class kind="class">MemoryChunk</class>
  </compound>
  <compound kind="file">
    <name>MemoryLeaks.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_memory_leaks_8h</filename>
  </compound>
  <compound kind="file">
    <name>Semaphore.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_semaphore_8cpp</filename>
    <includes id="_semaphore_8h" name="Semaphore.h" local="yes" imported="no">Semaphore.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>Semaphore.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_semaphore_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">sw::Semaphore</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>SpinLock.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_spin_lock_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">Common/TypesDefinitions.h</includes>
    <class kind="class">SpinLock</class>
  </compound>
  <compound kind="file">
    <name>SpinLockedQueue.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_spin_locked_queue_8h</filename>
    <includes id="_spin_lock_8h" name="SpinLock.h" local="yes" imported="no">SpinLock.h</includes>
    <class kind="class">SpinLockedQueue</class>
  </compound>
  <compound kind="file">
    <name>ThreadsBarrier.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_threads_barrier_8cpp</filename>
    <includes id="_threads_barrier_8h" name="ThreadsBarrier.h" local="yes" imported="no">ThreadsBarrier.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ThreadsBarrier.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_threads_barrier_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">sw::ThreadsBarrier</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ThreadsLatch.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_threads_latch_8cpp</filename>
    <includes id="_threads_latch_8h" name="ThreadsLatch.h" local="yes" imported="no">ThreadsLatch.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ThreadsLatch.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Multithreading/</path>
    <filename>_threads_latch_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">sw::ThreadsLatch</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>Nullable.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_nullable_8h</filename>
    <class kind="struct">Nullable</class>
    <member kind="define">
      <type>#define</type>
      <name>ReturnIfInvalid</name>
      <anchorfile>_nullable_8h.html</anchorfile>
      <anchor>a72d1e89602bdaf63159e737d6c23eb23</anchor>
      <arglist>(nullable)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NullableInit</name>
      <anchorfile>_nullable_8h.html</anchorfile>
      <anchor>ad11eef810004db23fc8e129b9f102629</anchor>
      <arglist></arglist>
      <enumvalue file="_nullable_8h.html" anchor="ad11eef810004db23fc8e129b9f102629a3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectDeleter.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_object_deleter_8h</filename>
    <class kind="class">ResourceContainer</class>
    <class kind="class">ObjectDeleterKey</class>
    <class kind="class">ObjectDeleter</class>
  </compound>
  <compound kind="file">
    <name>ICollection.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Properties/Containers/</path>
    <filename>_i_collection_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_i_enable_property_8h" name="IEnableProperty.h" local="yes" imported="no">swCommonLib/Common/Properties/IEnableProperty.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <class kind="class">ICollection</class>
  </compound>
  <compound kind="file">
    <name>IEnableProperty.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Properties/</path>
    <filename>_i_enable_property_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">RTTR.h</includes>
    <includes id="_property_8h" name="Property.h" local="yes" imported="no">swCommonLib/Common/Properties/Property.h</includes>
    <class kind="class">IEnableProperty</class>
  </compound>
  <compound kind="file">
    <name>Properties.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Properties/</path>
    <filename>_properties_8cpp</filename>
    <includes id="_properties_8h" name="Properties.h" local="yes" imported="no">Properties.h</includes>
    <member kind="function">
      <type>rttr::property</type>
      <name>GetPropertyInternal</name>
      <anchorfile>_properties_8cpp.html</anchorfile>
      <anchor>a5fdfbf6341d8918dce0d5ebfd9e12d90</anchor>
      <arglist>(TypeID ownerType, Size startOffset, Size endOffset, const std::string &amp;propertyPath)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Properties.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Properties/</path>
    <filename>_properties_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <class kind="class">Properties</class>
  </compound>
  <compound kind="file">
    <name>Property.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/Properties/</path>
    <filename>_property_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <class kind="class">IProperty</class>
    <class kind="class">Property</class>
  </compound>
  <compound kind="file">
    <name>RTTR.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_r_t_t_r_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common//TypesDefinitions.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BIND_AS_PTR</name>
      <anchorfile>_r_t_t_r_8h.html</anchorfile>
      <anchor>a130673ae416858a48544f856cb66d621</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>rttr::type</type>
      <name>TypeID</name>
      <anchorfile>_r_t_t_r_8h.html</anchorfile>
      <anchor>a5139cd88b85068977b977ddba7804e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MetaDataType</name>
      <anchorfile>_r_t_t_r_8h.html</anchorfile>
      <anchor>a6760f423085f8a63374b1e2db102a6d1</anchor>
      <arglist></arglist>
      <enumvalue file="_r_t_t_r_8h.html" anchor="a6760f423085f8a63374b1e2db102a6d1a3adbdb3ac060038aa0e6e6c138ef9873">Category</enumvalue>
      <enumvalue file="_r_t_t_r_8h.html" anchor="a6760f423085f8a63374b1e2db102a6d1a32a7aaf47c67e07f529ea3feea00dec9">Serialize</enumvalue>
      <enumvalue file="_r_t_t_r_8h.html" anchor="a6760f423085f8a63374b1e2db102a6d1aec458ad4a0c960c698b2bb54726e4e2b">AllowInSaveFile</enumvalue>
      <enumvalue file="_r_t_t_r_8h.html" anchor="a6760f423085f8a63374b1e2db102a6d1a28d276cefbc49fa972184081b8090c5b">ShowInEditor</enumvalue>
      <enumvalue file="_r_t_t_r_8h.html" anchor="a6760f423085f8a63374b1e2db102a6d1a865f62e2f976f8cd28d4b83db8dd9604">EditorName</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Traits.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_traits_8h</filename>
  </compound>
  <compound kind="file">
    <name>TypesDefinitions.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_types_definitions_8h</filename>
    <namespace>rttr</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a30a9e33981a35cdd5ac16b4752a53fb0</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_UPTR_TYPE</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a09791a545ab356fd0ee020bf4db9dc60</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a7c97732a8631e715a7df38c95425a13f</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>ab63b580a3009996dcb1d317bc9695979</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLASS_TESTER</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>aa210f77c711f5ffff6b0e9e291b8d6ba</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a2c27cdee5b2c3f7d083dc8c452fd09ee</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>int8</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>aa79c2d3de4fcd200458c406f40b2ae64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a33a5e996e7a90acefb8b1c0bea47e365</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>aa0d0fdc87fd135ef2bedb030901cdb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>ac2a9e79eb120216f855626495b7bd18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>ab7903878916593daecbeb95b98115ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>acbd4acd0d29e2d6c43104827f77d9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a7cde0074dfd288f2d70c0e035dacb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>abc0f5bc07737e498f287334775dff2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>af9ecec2d692138fab9167164a457cbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ptrdiff_t</type>
      <name>PtrOffset</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>aaec6894e869ce3a47b86d5e72d6372bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>TimeType</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a21ffdd7605351021d0900bda9ec71458</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>rttr::type</type>
      <name>ActorType</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a74e25769395d138fc1243f8ff3a31747</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PtrType &gt;</type>
      <name>UPtr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>ab5a03e633212a5d7774a9e9da4230d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PtrType &gt;</type>
      <name>Ptr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>aceca26d9102a567bd00438680369628a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; PtrType &gt;</type>
      <name>OPtr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a241c5a5859b4bbf5ccef226cef528e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; PtrType &gt;</type>
      <name>MakePtr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a5d295d2c5cc196e36841fefa20231603</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; PtrType &gt;</type>
      <name>MakeUPtr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a2843e38194a059f0ef7cf030683051e7</anchor>
      <arglist>(Args...args)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; PtrType &gt;</type>
      <name>MakeOPtr</name>
      <anchorfile>_types_definitions_8h.html</anchorfile>
      <anchor>a4bb7ecf031a9fe574b3d3b0d4acd00f7</anchor>
      <arglist>(Args...args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UPtr.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_u_ptr_8h</filename>
    <class kind="class">UPtr</class>
  </compound>
  <compound kind="file">
    <name>Version.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Common/</path>
    <filename>_version_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="struct">Version</class>
  </compound>
  <compound kind="file">
    <name>Attribute.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_attribute_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_attribute_repr_8h" name="AttributeRepr.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/AttributeRepr.h</includes>
    <includes id="_attribute_8h" name="Attribute.h" local="yes" imported="no">Attribute.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>Attribute.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_attribute_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_attribute_types_8h" name="AttributeTypes.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attributes/AttributeTypes.h</includes>
    <class kind="class">sw::Attribute</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a53954e05b88f460878d8767c039b097b</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AttributeTypes.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Attributes/</path>
    <filename>_attribute_types_8h</filename>
    <class kind="struct">sw::DataPack</class>
    <class kind="struct">sw::DataUPack</class>
    <namespace>sw</namespace>
    <member kind="typedef">
      <type>uint64</type>
      <name>AttributeType</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a74c7a1a6eb31cb38d260b379f57bfff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8</type>
      <name>DataUnderlayingType</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a691f5dca71a2a4ebe3ae85ab2f845478</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DataUnderlayingType *</type>
      <name>DataPtr</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a15da8d708fcdbd287901fe7fe4f8453b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; DataUnderlayingType[] &gt;</type>
      <name>DataUPtr</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a27c34a388d34976a960c9141623f81f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AttributeTypeBuiltIn</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a238bca1bec3c3621527f0b15dec6bac3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChunkNameAttrib.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Attributes/</path>
    <filename>_chunk_name_attrib_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_chunk_name_attrib_8h" name="ChunkNameAttrib.h" local="yes" imported="no">ChunkNameAttrib.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ChunkNameAttrib.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Attributes/</path>
    <filename>_chunk_name_attrib_8h</filename>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">IAttribute.h</includes>
    <class kind="class">sw::ChunkNameAttrib</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>IAttribute.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Attributes/</path>
    <filename>_i_attribute_8h</filename>
    <includes id="_attribute_header_8h" name="AttributeHeader.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Headers/AttributeHeader.h</includes>
    <class kind="class">sw::IAttribute</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a1cb82c5028e2918c92a9cc0640e680a2</anchor>
      <arglist>(IAttribute)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Chunk.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_chunk_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_chunk_8h" name="Chunk.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Chunk.h</includes>
    <includes id="_chunk_repr_8h" name="ChunkRepr.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/ChunkRepr.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>Chunk.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_chunk_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_attribute_8h" name="Attribute.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attribute.h</includes>
    <includes id="_attribute_types_8h" name="AttributeTypes.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attributes/AttributeTypes.h</includes>
    <class kind="class">sw::Chunk</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a13ef887f97ab5330f13df860a131350c</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HCF.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_h_c_f_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">HCF.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>HCF.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_h_c_f_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">swCommonLib/System/Path.h</includes>
    <includes id="_i_attribute_8h" name="IAttribute.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attributes/IAttribute.h</includes>
    <includes id="_impl_h_c_f_8h" name="ImplHCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/ImplHCF.h</includes>
    <includes id="_chunk_8h" name="Chunk.h" local="yes" imported="no">Chunk.h</includes>
    <includes id="_attribute_8h" name="Attribute.h" local="yes" imported="no">Attribute.h</includes>
    <includes id="_h_c_f_8inl" name="HCF.inl" local="yes" imported="no">HCF.inl</includes>
    <class kind="class">sw::HCF</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type>sw::AttributeType</type>
      <name>GetAttributeTypeID</name>
      <anchorfile>_h_c_f_8h.html</anchorfile>
      <anchor>a713491e22da88d551258891262c2d995</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HCF.inl</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>_h_c_f_8inl</filename>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">HCF.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>AttributeHeader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Headers/</path>
    <filename>_attribute_header_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_attribute_types_8h" name="AttributeTypes.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attributes/AttributeTypes.h</includes>
    <class kind="struct">sw::AttributeHeader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ChunkHeader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Headers/</path>
    <filename>_chunk_header_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="struct">sw::ChunkHeader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>FileHeader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Headers/</path>
    <filename>_file_header_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_version_8h" name="Version.h" local="yes" imported="no">swCommonLib/Common/Version.h</includes>
    <class kind="struct">sw::FileHeader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>AttributeRepr.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_attribute_repr_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_impl_h_c_f_8h" name="ImplHCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/ImplHCF.h</includes>
    <includes id="_attribute_repr_8h" name="AttributeRepr.h" local="yes" imported="no">AttributeRepr.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>AttributeRepr.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_attribute_repr_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_attribute_header_8h" name="AttributeHeader.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Headers/AttributeHeader.h</includes>
    <class kind="class">sw::AttributeRepr</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a53954e05b88f460878d8767c039b097b</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a44a1a9afaf4dfe89c988c5cf8dd7745c</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChunkRepr.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_chunk_repr_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_impl_h_c_f_8h" name="ImplHCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/ImplHCF.h</includes>
    <includes id="_chunk_repr_8h" name="ChunkRepr.h" local="yes" imported="no">ChunkRepr.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>ChunkRepr.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_chunk_repr_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_chunk_header_8h" name="ChunkHeader.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Headers/ChunkHeader.h</includes>
    <includes id="_chunk_8h" name="Chunk.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Chunk.h</includes>
    <includes id="_attribute_repr_8h" name="AttributeRepr.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Internal/AttributeRepr.h</includes>
    <includes id="_attribute_8h" name="Attribute.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attribute.h</includes>
    <class kind="class">sw::ChunkRepr</class>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a13ef887f97ab5330f13df860a131350c</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a37d2ef8b5cef4f51c9a4f65fd9ec483d</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImplHCF.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_impl_h_c_f_8cpp</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/stdafx.h</includes>
    <includes id="_impl_h_c_f_8h" name="ImplHCF.h" local="yes" imported="no">ImplHCF.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type>const Version</type>
      <name>currentVersion</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a91f6eb91bcdcf336dff3daa0d3938dea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImplHCF.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/Internal/</path>
    <filename>_impl_h_c_f_8h</filename>
    <includes id="_chunk_repr_8h" name="ChunkRepr.h" local="yes" imported="no">ChunkRepr.h</includes>
    <includes id="_attribute_repr_8h" name="AttributeRepr.h" local="yes" imported="no">AttributeRepr.h</includes>
    <includes id="_chunk_8h" name="Chunk.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Chunk.h</includes>
    <includes id="_attribute_8h" name="Attribute.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Attribute.h</includes>
    <includes id="_file_header_8h" name="FileHeader.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/Headers/FileHeader.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">swCommonLib/System/Path.h</includes>
    <class kind="class">sw::ImplHCF</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>Animation.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Animation/</path>
    <filename>_animation_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_i_animation_8h" name="IAnimation.h" local="yes" imported="no">IAnimation.h</includes>
    <includes id="_anim_evaluator_8h" name="AnimEvaluator.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Animation/AnimEvaluator.h</includes>
    <includes id="_direct_propertyh_8h" name="DirectPropertyh.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/DirectPropertyh.h</includes>
    <includes id="_property_path_8h" name="PropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/PropertyPath.h</includes>
    <includes id="_string_property_path_8h" name="StringPropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/StringPropertyPath.h</includes>
    <includes id="_animation_8inl" name="Animation.inl" local="yes" imported="no">Animation.inl</includes>
    <class kind="class">AnimationTyped</class>
    <class kind="class">AnimationImpl</class>
    <member kind="typedef">
      <type>AnimationImpl&lt; float, StringPropertyPath&lt; float &gt; &gt;</type>
      <name>FloatAnimationStrPath</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>a641b91dc1b711c4280e04b4942f38e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimationImpl&lt; float, PropertyPath&lt; float &gt; &gt;</type>
      <name>FloatAnimationPropPath</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>abcbcca29b87a20fa24ceca28be6a3296</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimationImpl&lt; float, DirectProperty&lt; float &gt; &gt;</type>
      <name>FloatAnimationDirect</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>ad64615ec8fe27f18cf129053a49cbf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimationImpl&lt; float, AddressType&lt; float &gt; &gt;</type>
      <name>FloatAnimation</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>a3a7cbed5bcb6477fd3d9816a2209dfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimationImpl&lt; double, AddressType&lt; double &gt; &gt;</type>
      <name>DoubleAnimation</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>ab4848ed4562e63e1b1aa3d8156606e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AnimationImpl&lt; uint32, AddressType&lt; uint32 &gt; &gt;</type>
      <name>UIn32Animation</name>
      <anchorfile>_animation_8h.html</anchorfile>
      <anchor>ae2a4e81ea945064754f842db4032723b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Animation.inl</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Animation/</path>
    <filename>_animation_8inl</filename>
    <includes id="_animation_8h" name="Animation.h" local="yes" imported="no">Animation.h</includes>
  </compound>
  <compound kind="file">
    <name>AnimationSet.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Animation/</path>
    <filename>_animation_set_8h</filename>
    <class kind="class">AnimationSet</class>
  </compound>
  <compound kind="file">
    <name>AnimEvaluator.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Animation/</path>
    <filename>_anim_evaluator_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_key_set_8h" name="KeySet.h" local="yes" imported="no">swCommonLib/ParameterAnimation/KeySet.h</includes>
    <includes id="_timeline_base_8h" name="TimelineBase.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Timelines/TimelineBase.h</includes>
    <class kind="class">AnimEvaluator</class>
  </compound>
  <compound kind="file">
    <name>IAnimation.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Animation/</path>
    <filename>_i_animation_8h</filename>
    <class kind="class">IAnimation</class>
  </compound>
  <compound kind="file">
    <name>CosinusInterpolator.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_cosinus_interpolator_8h</filename>
    <includes id="_i_interpolator_8h" name="IInterpolator.h" local="yes" imported="no">IInterpolator.h</includes>
    <class kind="class">CosinusInterpolator</class>
    <member kind="define">
      <type>#define</type>
      <name>_USE_MATH_DEFINES</name>
      <anchorfile>_cosinus_interpolator_8h.html</anchorfile>
      <anchor>a525335710b53cb064ca56b936120431e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultInterpolators.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_default_interpolators_8cpp</filename>
    <includes id="_default_interpolators_8h" name="DefaultInterpolators.h" local="yes" imported="no">DefaultInterpolators.h</includes>
    <includes id="_default_interpolators_8inl" name="DefaultInterpolators.inl" local="yes" imported="no">DefaultInterpolators.inl</includes>
    <includes id="_linear_interpolator_8h" name="LinearInterpolator.h" local="yes" imported="no">LinearInterpolator.h</includes>
    <includes id="_discrete_interpolator_8h" name="DiscreteInterpolator.h" local="yes" imported="no">DiscreteInterpolator.h</includes>
    <includes id="_cosinus_interpolator_8h" name="CosinusInterpolator.h" local="yes" imported="no">CosinusInterpolator.h</includes>
    <namespace>DefaultInterpolators</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>_default_interpolators_8cpp.html</anchorfile>
      <anchor>a659e75660aaa400b1da1ee89f600a750</anchor>
      <arglist>(type, Function)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aae83bc3f9e950a0315df58fc17ff471f</anchor>
      <arglist>(float, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a80ab718a1f663a0066f05540628faee7</anchor>
      <arglist>(double, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>acdbcbf144fb0757c34c2c57e7ee2aa1f</anchor>
      <arglist>(char, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a91b32d31b50f8505b7b3a35fad685761</anchor>
      <arglist>(uint8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab2551beb7aed1a517ba7ac7e1d55a453</anchor>
      <arglist>(int8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9016c47d2cf57c2a044f9a0aa5f7fb4b</anchor>
      <arglist>(uint16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad224d87b7fcf6303cd7896575ea913da</anchor>
      <arglist>(int16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abd3d1ba4a0d882c461b5963e2cb86a4e</anchor>
      <arglist>(uint32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a7fb5697320b9fd2f12ebec54f76eaa3a</anchor>
      <arglist>(int32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a17320381b7f6cad338e381d7b0f0f313</anchor>
      <arglist>(uint64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a10732237aece1966447861e62a958310</anchor>
      <arglist>(int64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a87c4a1b622a219696755324e9245abd5</anchor>
      <arglist>(float, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a070f8b1d289a720c6dfef3fa07e06dae</anchor>
      <arglist>(double, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a8cc0801caaf767219dda96091d1b34dc</anchor>
      <arglist>(char, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a40da4ff844a496851ace64ff88f0aedd</anchor>
      <arglist>(uint8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abd0486854a82d7b8fde77d493db58f19</anchor>
      <arglist>(int8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a8dde0cc7aacd68ce748790321682e0e6</anchor>
      <arglist>(uint16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a41653e27499aab6eef52dc5753c0d57c</anchor>
      <arglist>(int16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab6fabf962565ac81574a7c01b161baff</anchor>
      <arglist>(uint32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abecd2b32486d4e8b5d44f0a0657c15cf</anchor>
      <arglist>(int32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abf28cbdf850243871983f34a518edf74</anchor>
      <arglist>(uint64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad42840784d6812fbf3a3e135cb02aaac</anchor>
      <arglist>(int64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab563a556fd662edba8aab045d4877549</anchor>
      <arglist>(bool, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa28083b12694faacac1f2adb73361150</anchor>
      <arglist>(float, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad92ee4b0ae634058dab3a0787d1985da</anchor>
      <arglist>(double, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9dfd775caf4a3113601aa72d1ae85adc</anchor>
      <arglist>(char, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a884b65e9197ac18b7519c53f484384b6</anchor>
      <arglist>(uint8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a93ebdbc0b319596c6be35478e009e565</anchor>
      <arglist>(int8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9edfdd2b1a33166a88b943f59dec1cf7</anchor>
      <arglist>(uint16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9e362ffdb41fd8a0904241f2eb715baa</anchor>
      <arglist>(int16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa1c00c43ca48690f09cba8590709b713</anchor>
      <arglist>(uint32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a7d2168a219d67741c6a4537bc71fd5c6</anchor>
      <arglist>(int32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a0aa06dc78322691e14959c7ea523fbfc</anchor>
      <arglist>(uint64, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab80e27e1dea141a7de566c9545d10408</anchor>
      <arglist>(int64, CreateCosinus)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultInterpolators.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_default_interpolators_8h</filename>
    <includes id="_i_interpolator_8h" name="IInterpolator.h" local="yes" imported="no">IInterpolator.h</includes>
    <includes id="_key_8h" name="Key.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Key.h</includes>
    <class kind="struct">DefaultInterpolators::is_param_animation_enabled</class>
    <namespace>DefaultInterpolators</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>_default_interpolators_8h.html</anchorfile>
      <anchor>ab1e1f0790c194d93445c637047fb003f</anchor>
      <arglist>(type, Function)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateLinear</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a0773c82153ae209187d9ac8796d423cd</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateDiscrete</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>adc658d9d279be309cdd12e6a918345f0</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateCosinus</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2e8277e40a5385f78a2f15ba4cc080bd</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>af89eb7aeb3c2a585494f03ea831bf1b4</anchor>
      <arglist>(InterpolatorType type, const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_floating_point&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2ecd3cdca6bc458640a9b35c5ff4deca</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_integral&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a11e60a0b2a5a4963875a702ceb3930f6</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; bool &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aabdcec82f2083ff343044993443f3b7e</anchor>
      <arglist>(const Key&lt; bool &gt; &amp;leftKey, const Key&lt; bool &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; bool &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; bool &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_enum&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a288abfa06bd7c97b5bd470b6e1c5e5e4</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_same&lt; KeyType, std::basic_string&lt; typename KeyType::value_type &gt; &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2aa50f86f4da5f9967e60aaa312b8474</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; is_param_animation_enabled&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a25df89eaf7caa7daa31134f999a12535</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa73c9f8871a40aee656843273fcecaa6</anchor>
      <arglist>(float, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4739fc573de75567bbf95de67739305f</anchor>
      <arglist>(double, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa04efb94ca7d4d03e9451e106e23a384</anchor>
      <arglist>(char, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a27e9ed6798d5e6061b9c252073450452</anchor>
      <arglist>(uint8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a271ed9b562378404d0390f22f2adf4fa</anchor>
      <arglist>(int8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a26f676d8a4a21aa411681ec9c8beda27</anchor>
      <arglist>(uint16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa7146d24bfd61cd03d84507ea4faa749</anchor>
      <arglist>(int16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a268dec27021d31daafc2bfe1ee2385c3</anchor>
      <arglist>(uint32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aba1c233eefa436e300d7c1eff5c2bac1</anchor>
      <arglist>(int32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4e92902637c3c5d7ef1b5800fc0c1531</anchor>
      <arglist>(uint64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a14073ecbbbe011ee444d51276e04e6dc</anchor>
      <arglist>(int64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a1982f1bc14b1a72562e94e7305a91f4b</anchor>
      <arglist>(float, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a097ec233f7e34064b92937f25b032caa</anchor>
      <arglist>(double, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad99e32c19e2667edda61ed608f1cc15f</anchor>
      <arglist>(char, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>afb024ed731c2d9eaa6eb58e467ba2915</anchor>
      <arglist>(uint8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ac11500cb0c83024ec536b11fd9ac77ff</anchor>
      <arglist>(int8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a61a283b6ce58b3a1ee95a9df2a350705</anchor>
      <arglist>(uint16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4a7394453175f80b0004cee86c395fed</anchor>
      <arglist>(int16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab505cb87301a0e86ae8f97c6c3ffea1e</anchor>
      <arglist>(uint32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4f7a6e08a97ee02481b7da66a313267f</anchor>
      <arglist>(int32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>af1531f2f65ca4326e9bf79b1ac0239b3</anchor>
      <arglist>(uint64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab45ecc5a5f18456b7bcc2dd2e8441bf8</anchor>
      <arglist>(int64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a3a2f0bad9ac1e148b07f60025b5cd17f</anchor>
      <arglist>(bool, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aca148d079182ec4e88104e969063d9ba</anchor>
      <arglist>(std::wstring, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a83e30c301cfba6b8e63583797fd876b8</anchor>
      <arglist>(std::string, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a07da040bf42473f6e47c30c82a2051d1</anchor>
      <arglist>(float, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a19c11db5ee0a2a34b65f377306ef26c9</anchor>
      <arglist>(double, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2ae9afbc03f06996c3df0800a686b49d</anchor>
      <arglist>(char, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad12eba905b7cfde42785b46c022f2046</anchor>
      <arglist>(uint8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a226e39390f89c7b88ad95acfec902bdf</anchor>
      <arglist>(int8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a89d839b8f4ad416e2dc28b63286bc24f</anchor>
      <arglist>(uint16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9dfb6b5ecd69ab798606b3c80e9c0ad8</anchor>
      <arglist>(int16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a3412110bdf0b6e233d086d630273bf1f</anchor>
      <arglist>(uint32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a42df302592194f963337f5e27b1cc421</anchor>
      <arglist>(int32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad570aad04e923af95052d4e10c421794</anchor>
      <arglist>(uint64, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad75e37d1aa5c74ee838e1ddb64a77a13</anchor>
      <arglist>(int64, CreateCosinus)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultInterpolators.inl</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_default_interpolators_8inl</filename>
    <includes id="_default_interpolators_8h" name="DefaultInterpolators.h" local="yes" imported="no">DefaultInterpolators.h</includes>
    <includes id="_linear_interpolator_8h" name="LinearInterpolator.h" local="yes" imported="no">LinearInterpolator.h</includes>
    <includes id="_discrete_interpolator_8h" name="DiscreteInterpolator.h" local="yes" imported="no">DiscreteInterpolator.h</includes>
    <includes id="_cosinus_interpolator_8h" name="CosinusInterpolator.h" local="yes" imported="no">CosinusInterpolator.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ENABLE_PARAMETER_ANIMATION</name>
      <anchorfile>_default_interpolators_8inl.html</anchorfile>
      <anchor>aebf94ae89601f84d3fcbc0c81cae565a</anchor>
      <arglist>(type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DiscreteInterpolator.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_discrete_interpolator_8h</filename>
    <includes id="_i_interpolator_8h" name="IInterpolator.h" local="yes" imported="no">IInterpolator.h</includes>
    <class kind="class">DiscreteInterpolator</class>
  </compound>
  <compound kind="file">
    <name>IInterpolator.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_i_interpolator_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="struct">Key</class>
    <class kind="class">IInterpolator</class>
    <class kind="class">DummyInterpolator</class>
    <member kind="enumeration">
      <type></type>
      <name>InterpolatorType</name>
      <anchorfile>_i_interpolator_8h.html</anchorfile>
      <anchor>a9ce10f4fc5626eddc6b23bd4bf5c68f4</anchor>
      <arglist></arglist>
      <enumvalue file="_i_interpolator_8h.html" anchor="a9ce10f4fc5626eddc6b23bd4bf5c68f4a4984667940802dedc139aa7a430a6553">Discrete</enumvalue>
      <enumvalue file="_i_interpolator_8h.html" anchor="a9ce10f4fc5626eddc6b23bd4bf5c68f4a32a843da6ea40ab3b17a3421ccdf671b">Linear</enumvalue>
      <enumvalue file="_i_interpolator_8h.html" anchor="a9ce10f4fc5626eddc6b23bd4bf5c68f4a40d094cb3919d9f6fe5d2858e46486d4">Cosinus</enumvalue>
      <enumvalue file="_i_interpolator_8h.html" anchor="a9ce10f4fc5626eddc6b23bd4bf5c68f4a31aa08a905ffdb74542a88cb7320c69d">Bezier</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>LinearInterpolator.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Interpolators/</path>
    <filename>_linear_interpolator_8h</filename>
    <includes id="_i_interpolator_8h" name="IInterpolator.h" local="yes" imported="no">IInterpolator.h</includes>
    <class kind="class">LinearInterpolator</class>
  </compound>
  <compound kind="file">
    <name>Key.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/</path>
    <filename>_key_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="struct">Key</class>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>_key_8h.html</anchorfile>
      <anchor>aef643b3b9eadb70278ca60163230a05b</anchor>
      <arglist>(const Key&lt; ValueType &gt; &amp;first, const Key&lt; ValueType &gt; &amp;second)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeySet.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/</path>
    <filename>_key_set_8h</filename>
    <includes id="_key_8h" name="Key.h" local="yes" imported="no">Key.h</includes>
    <includes id="_i_interpolator_8h" name="IInterpolator.h" local="yes" imported="no">Interpolators/IInterpolator.h</includes>
    <includes id="_default_interpolators_8h" name="DefaultInterpolators.h" local="yes" imported="no">Interpolators/DefaultInterpolators.h</includes>
    <class kind="struct">KeySet</class>
    <member kind="function">
      <type>UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CastConst</name>
      <anchorfile>_key_set_8h.html</anchorfile>
      <anchor>ad146cbe79c5165eb16470b38e8aba030</anchor>
      <arglist>(UPtr&lt; InterpolatorType&lt; KeyType &gt; &gt; &amp;interpolator)</arglist>
    </member>
    <member kind="variable">
      <type>const TimeType</type>
      <name>epsilon</name>
      <anchorfile>_key_set_8h.html</anchorfile>
      <anchor>a4f6edf69659ae637cce9c20746b2a821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DirectPropertyh.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Parameters/</path>
    <filename>_direct_propertyh_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_properties_8h" name="Properties.h" local="yes" imported="no">swCommonLib/Common/Properties/Properties.h</includes>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/Serialization.h</includes>
    <class kind="class">DirectProperty</class>
  </compound>
  <compound kind="file">
    <name>PropertyPath.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Parameters/</path>
    <filename>_property_path_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_properties_8h" name="Properties.h" local="yes" imported="no">swCommonLib/Common/Properties/Properties.h</includes>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/Serialization.h</includes>
    <class kind="class">PropertyPath</class>
  </compound>
  <compound kind="file">
    <name>StringPropertyPath.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Parameters/</path>
    <filename>_string_property_path_8h</filename>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/Serialization.h</includes>
    <class kind="class">StringPropertyPath</class>
  </compound>
  <compound kind="file">
    <name>RelativeTimeline.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Timelines/</path>
    <filename>_relative_timeline_8cpp</filename>
    <includes id="_relative_timeline_8h" name="RelativeTimeline.h" local="yes" imported="no">RelativeTimeline.h</includes>
  </compound>
  <compound kind="file">
    <name>RelativeTimeline.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Timelines/</path>
    <filename>_relative_timeline_8h</filename>
    <includes id="_timeline_base_8h" name="TimelineBase.h" local="yes" imported="no">TimelineBase.h</includes>
    <includes id="_timeline_types_8h" name="TimelineTypes.h" local="yes" imported="no">TimelineTypes.h</includes>
    <class kind="class">RelativeTimeline</class>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>_relative_timeline_8h.html</anchorfile>
      <anchor>a5bc7bad62d4a56eac59fc6c997727c88</anchor>
      <arglist>(RelativeTimeline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>_relative_timeline_8h.html</anchorfile>
      <anchor>af8988584a490b5eebee596453cf6a1c7</anchor>
      <arglist>(RelativeTimeline)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TimelineBase.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Timelines/</path>
    <filename>_timeline_base_8cpp</filename>
    <includes id="_timeline_base_8h" name="TimelineBase.h" local="yes" imported="no">TimelineBase.h</includes>
  </compound>
  <compound kind="file">
    <name>TimelineBase.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Timelines/</path>
    <filename>_timeline_base_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_timeline_types_8h" name="TimelineTypes.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Timelines/TimelineTypes.h</includes>
    <class kind="class">TimelineBase</class>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>_timeline_base_8h.html</anchorfile>
      <anchor>a096c01e8485de7925b21013e15f2505a</anchor>
      <arglist>(TimelineBase)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>_timeline_base_8h.html</anchorfile>
      <anchor>a66f292fdc669d0e0489b2626fce1b0ec</anchor>
      <arglist>(TimelineBase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TimelineTypes.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/ParameterAnimation/Timelines/</path>
    <filename>_timeline_types_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>_timeline_types_8h.html</anchorfile>
      <anchor>a5f8eca2987d1d4eafe249d423f29166c</anchor>
      <arglist></arglist>
      <enumvalue file="_timeline_types_8h.html" anchor="a5f8eca2987d1d4eafe249d423f29166ca08825280e3f8137556325061ba67ff8c">Clamp</enumvalue>
      <enumvalue file="_timeline_types_8h.html" anchor="a5f8eca2987d1d4eafe249d423f29166ca2403def5083f02105e7802b3b315681e">Mirror</enumvalue>
      <enumvalue file="_timeline_types_8h.html" anchor="a5f8eca2987d1d4eafe249d423f29166ca7020426cfb0a204051be4b3053d2acc8">Repeat</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>all_16.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>all__16_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>all__16_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_10.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>classes__10_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>classes__10_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_11.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>classes__11_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>classes__11_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>classes__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>classes__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_f.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>classes__f_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>classes__f_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>files__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>files__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_10.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__10_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__10_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_11.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__11_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__11_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_12.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__12_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__12_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_13.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__13_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__13_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_14.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__14_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__14_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_f.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>functions__f_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>functions__f_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>groups__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>groups__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>namespaces_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>namespaces__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>namespaces__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>typedefs_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>typedefs__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>typedefs__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>typedefs_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>typedefs__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>typedefs__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Deserializer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/</path>
    <filename>_deserializer_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_serialization_context_8h" name="SerializationContext.h" local="yes" imported="no">swCommonLib/Serialization/SerializationContext.h</includes>
    <class kind="class">IDeserializer</class>
    <member kind="enumeration">
      <type></type>
      <name>ParsingMode</name>
      <anchorfile>_deserializer_8h.html</anchorfile>
      <anchor>ac1f1e0a72eb3bb133c13c1aedc837223</anchor>
      <arglist></arglist>
      <enumvalue file="_deserializer_8h.html" anchor="ac1f1e0a72eb3bb133c13c1aedc837223a8e3c037e1c30163e6eed314cdf14cb6d">ParseInsitu</enumvalue>
      <enumvalue file="_deserializer_8h.html" anchor="ac1f1e0a72eb3bb133c13c1aedc837223aeb63427d5b96b23422d5e974c21b025e">AllocStrings</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>EngineSerializationContext.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>_engine_serialization_context_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_serialization_context_8h" name="SerializationContext.h" local="yes" imported="no">swCommonLib/Serialization/SerializationContext.h</includes>
    <class kind="struct">EngineSerializationContext</class>
  </compound>
  <compound kind="file">
    <name>Serialization.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>_serialization_8cpp</filename>
    <includes id="sw_common_lib_2_serialization_2_property_serialization_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/stdafx.h</includes>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">Serialization.h</includes>
    <member kind="function">
      <type>void</type>
      <name>Serialization::SerializeProperty&lt; DirectX::XMFLOAT3 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a1a0cda08ddd93fc78715023c9d754eb1</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::SerializeProperty&lt; DirectX::XMFLOAT2 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a72eb08e85c5a715a6917b03d86c8e425</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::SerializeProperty&lt; DirectX::XMFLOAT4 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a410069c539b6a06835b530b5d5cf2069</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::SerializeProperty&lt; std::wstring &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>af99eb1591bf52ca3a2fa63cdf4eae978</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::DeserializeProperty&lt; DirectX::XMFLOAT3 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>af01c6e439bfbf568b6c344a7a3342381</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::DeserializeProperty&lt; DirectX::XMFLOAT2 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a5034ba6d2a14a02a11104b3935877fc5</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::DeserializeProperty&lt; DirectX::XMFLOAT4 * &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a75a2fbafaf8b92642a90103f3f6d1a90</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Serialization::DeserializeProperty&lt; std::wstring &gt;</name>
      <anchorfile>_serialization_8cpp.html</anchorfile>
      <anchor>a6cc4cd47803dbba5333f17ccb92bb129</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Serialization.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>_serialization_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_serializer_8h" name="Serializer.h" local="yes" imported="no">swCommonLib/Serialization/Serializer.h</includes>
    <includes id="_deserializer_8h" name="Deserializer.h" local="yes" imported="no">swCommonLib/Serialization/Deserializer.h</includes>
    <includes id="_engine_serialization_context_8h" name="EngineSerializationContext.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/EngineSerializationContext.h</includes>
    <includes id="_serialization_8inl" name="Serialization.inl" local="yes" imported="no">Serialization.inl</includes>
    <class kind="class">Serialization</class>
  </compound>
  <compound kind="file">
    <name>Serialization.inl</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>_serialization_8inl</filename>
    <includes id="_serialization_8h" name="Serialization.h" local="yes" imported="no">Serialization.h</includes>
    <member kind="function">
      <type>Type</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a31704a4f8e5e207dffc6ec9f10957d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>ae77a5d2c78e95fffff7769f56b658a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a3ffc55fd121b728012680f12a0ba1f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a3de2397a480b75b3a903615dea8529b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a47fc76c05765886337b851cbfe9b18ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a4da2e4e2048f350abff9c8121065bc5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a8edf0a8794147fdff2efa0e1d733dfa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a29b502e8cbf56322e92a8fd566d297b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a5932668c4c87abef5f1dc0ec6b4f3090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a4637099a4cb53b442b260d62f5b59099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectX::XMFLOAT2</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a14e8f1644f042ffba2ac9855826813f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectX::XMFLOAT3</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a91dff6bb8df7048bf4a57dfbc41805ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectX::XMFLOAT4</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>a922431a9223407473c44f576e64737bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EngineObject *</type>
      <name>TypeDefaultValue</name>
      <anchorfile>_serialization_8inl.html</anchorfile>
      <anchor>ab81263d162d8c351108ace892e310623</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SerializationContext.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/</path>
    <filename>_serialization_context_8h</filename>
    <class kind="struct">SerializationContext</class>
  </compound>
  <compound kind="file">
    <name>Serializer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/</path>
    <filename>_serializer_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_serialization_context_8h" name="SerializationContext.h" local="yes" imported="no">swCommonLib/Serialization/SerializationContext.h</includes>
    <class kind="class">ISerializer</class>
    <member kind="enumeration">
      <type></type>
      <name>WritingMode</name>
      <anchorfile>group___serialization.html</anchorfile>
      <anchor>ga46d11c2d08142ef2d32761c04d1aaa26</anchor>
      <arglist></arglist>
      <enumvalue file="group___serialization.html" anchor="gga46d11c2d08142ef2d32761c04d1aaa26a4051f1312e691dc1d55f4006dfa59bb4">Sparing</enumvalue>
      <enumvalue file="group___serialization.html" anchor="gga46d11c2d08142ef2d32761c04d1aaa26a4b8123df4e2b3456270c11394adf7607">Readable</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Deserializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerJson/</path>
    <filename>_serializer_json_2_deserializer_8cpp</filename>
    <includes id="_deserializer_8h" name="Deserializer.h" local="yes" imported="no">swCommonLib/Serialization/Deserializer.h</includes>
    <includes id="_error_codes_8h" name="ErrorCodes.h" local="yes" imported="no">ErrorCodes.h</includes>
    <class kind="struct">DeserializerImpl</class>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_HAS_STDSTRING</name>
      <anchorfile>_serializer_json_2_deserializer_8cpp.html</anchorfile>
      <anchor>a2f2eef0ee4477f3fe5874703a66e997f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PushArrayObjectName</name>
      <anchorfile>_serializer_json_2_deserializer_8cpp.html</anchorfile>
      <anchor>a00f2fa5448c07239f2fe896109111f47</anchor>
      <arglist>(DeserializerImpl *impl, rapidjson::Value *object)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Deserializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerXML/</path>
    <filename>_serializer_x_m_l_2_deserializer_8cpp</filename>
    <includes id="_deserializer_8h" name="Deserializer.h" local="yes" imported="no">swCommonLib/Serialization/Deserializer.h</includes>
    <class kind="struct">DeserializerImpl</class>
  </compound>
  <compound kind="file">
    <name>ErrorCodes.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerJson/</path>
    <filename>_error_codes_8cpp</filename>
    <member kind="function">
      <type>const char *</type>
      <name>GetStringFromCode</name>
      <anchorfile>_error_codes_8cpp.html</anchorfile>
      <anchor>ab9040a5b122c5621df4317dd3403224f</anchor>
      <arglist>(rapidjson::ParseErrorCode code)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>errorCodes</name>
      <anchorfile>_error_codes_8cpp.html</anchorfile>
      <anchor>aac1637696885c75b73a1ecf381cea713</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ErrorCodes.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerJson/</path>
    <filename>_error_codes_8h</filename>
    <member kind="function">
      <type>const char *</type>
      <name>GetStringFromCode</name>
      <anchorfile>_error_codes_8h.html</anchorfile>
      <anchor>ab9040a5b122c5621df4317dd3403224f</anchor>
      <arglist>(rapidjson::ParseErrorCode code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Serializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerJson/</path>
    <filename>_serializer_json_2_serializer_8cpp</filename>
    <includes id="_serializer_8h" name="Serializer.h" local="yes" imported="no">swCommonLib/Serialization/Serializer.h</includes>
    <class kind="struct">SerializerImpl</class>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_HAS_STDSTRING</name>
      <anchorfile>_serializer_json_2_serializer_8cpp.html</anchorfile>
      <anchor>a2f2eef0ee4477f3fe5874703a66e997f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Serializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/Serializers/SerializerXML/</path>
    <filename>_serializer_x_m_l_2_serializer_8cpp</filename>
    <includes id="_serializer_8h" name="Serializer.h" local="yes" imported="no">swCommonLib/Serialization/Serializer.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAX_UINT32_SIGNS</name>
      <anchorfile>_serializer_x_m_l_2_serializer_8cpp.html</anchorfile>
      <anchor>aa2b10b62d2c83e9900aa463992ee483b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_UINT64_SIGNS</name>
      <anchorfile>_serializer_x_m_l_2_serializer_8cpp.html</anchorfile>
      <anchor>a6727a7ce04120a3f1be2069fb48616af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_INT32_SIGNS</name>
      <anchorfile>_serializer_x_m_l_2_serializer_8cpp.html</anchorfile>
      <anchor>a40120e06f0f0a9c06cf19e4486bf42da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_INT64_SIGNS</name>
      <anchorfile>_serializer_x_m_l_2_serializer_8cpp.html</anchorfile>
      <anchor>a5bec5c3748129e62c10ddd8144d22fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_DOUBLE_SIGNS</name>
      <anchorfile>_serializer_x_m_l_2_serializer_8cpp.html</anchorfile>
      <anchor>acfcb25dddb997a36a252269ca029e3a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dir.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/System/</path>
    <filename>_dir_8cpp</filename>
    <includes id="_dir_8h" name="Dir.h" local="yes" imported="no">Dir.h</includes>
  </compound>
  <compound kind="file">
    <name>Dir.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/System/</path>
    <filename>_dir_8h</filename>
    <class kind="class">Dir</class>
  </compound>
  <compound kind="file">
    <name>File.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/System/</path>
    <filename>_file_8cpp</filename>
    <includes id="_file_8h" name="File.h" local="yes" imported="no">File.h</includes>
  </compound>
  <compound kind="file">
    <name>File.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/System/</path>
    <filename>_file_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">Path.h</includes>
    <class kind="class">filesystem::File</class>
    <namespace>filesystem</namespace>
  </compound>
  <compound kind="file">
    <name>Path.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/System/</path>
    <filename>_path_8h</filename>
    <class kind="class">filesystem::Path</class>
    <namespace>filesystem</namespace>
    <member kind="function">
      <type>Path</type>
      <name>operator/</name>
      <anchorfile>namespacefilesystem.html</anchorfile>
      <anchor>a9c2e9c57c77992ef2eb2931f64b35bcb</anchor>
      <arglist>(const Path &amp;path1, const Path &amp;path2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AnimationClassTest.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_animation_class_test_8cpp</filename>
    <includes id="_animation_8h" name="Animation.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Animation/Animation.h</includes>
    <includes id="_direct_propertyh_8h" name="DirectPropertyh.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/DirectPropertyh.h</includes>
    <includes id="_property_path_8h" name="PropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/PropertyPath.h</includes>
    <includes id="_string_property_path_8h" name="StringPropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/StringPropertyPath.h</includes>
    <includes id="_test_classes_8h" name="TestClasses.h" local="yes" imported="no">TestClasses.h</includes>
    <member kind="function">
      <type>&amp;Nested::SomeValue</type>
      <name>property</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>a07e1f0656f258e13137e7555715fc3a5</anchor>
      <arglist>(&quot;IntValue&quot;,&amp;Nested::IntValue).property(&quot;Name&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;Nested::SomeValue &amp;Nested::Name</type>
      <name>property</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>a231d56bb9fefd9cb81d13d069c6db4ad</anchor>
      <arglist>(&quot;Additional&quot;,&amp;Nested::Additional) BIND_AS_PTR</arglist>
    </member>
    <member kind="function">
      <type>&amp;TestAnim::m_energy</type>
      <name>property</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>a90558dcf71faf5ad0addf74d82548b63</anchor>
      <arglist>(&quot;Mass&quot;,&amp;TestAnim::m_mass).property(&quot;Power&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TestAnim::m_energy &amp;TestAnim::m_power</type>
      <name>property</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>a7fa5e7549c7255a63730e83b5cbca37b</anchor>
      <arglist>(&quot;Shit&quot;,&amp;TestAnim::m_shit).property(&quot;OtherData&quot;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>a0668fc3fe4eaf48d8ea0d38a3c00b82b</anchor>
      <arglist>(&quot;Animations&quot;,&quot;[AnimationClassTest]&quot;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&amp;TestAnim::m_energy &amp;TestAnim::m_power &amp;TestAnim::m_otherData</type>
      <name>BIND_AS_PTR</name>
      <anchorfile>_animation_class_test_8cpp.html</anchorfile>
      <anchor>afdd42745ce27da0559727f8acbb8deaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FakeTimeline.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_fake_timeline_8cpp</filename>
    <includes id="_fake_timeline_8h" name="FakeTimeline.h" local="yes" imported="no">FakeTimeline.h</includes>
  </compound>
  <compound kind="file">
    <name>FakeTimeline.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_fake_timeline_8h</filename>
    <includes id="_timeline_base_8h" name="TimelineBase.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Timelines/TimelineBase.h</includes>
    <class kind="class">FakeTimeline</class>
  </compound>
  <compound kind="file">
    <name>InterpolatorsTest.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_interpolators_test_8cpp</filename>
    <includes id="_animation_8h" name="Animation.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Animation/Animation.h</includes>
    <includes id="_cosinus_interpolator_8h" name="CosinusInterpolator.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Interpolators/CosinusInterpolator.h</includes>
    <includes id="_direct_propertyh_8h" name="DirectPropertyh.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/DirectPropertyh.h</includes>
    <includes id="_property_path_8h" name="PropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/PropertyPath.h</includes>
    <includes id="_string_property_path_8h" name="StringPropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/StringPropertyPath.h</includes>
    <includes id="_test_classes_8h" name="TestClasses.h" local="yes" imported="no">TestClasses.h</includes>
    <includes id="_default_interpolators_8inl" name="DefaultInterpolators.inl" local="yes" imported="no">swCommonLib/ParameterAnimation/Interpolators/DefaultInterpolators.inl</includes>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; DirectX::XMFLOAT3 &gt;</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>af0ec43cce565447a3462e82db4d604c6</anchor>
      <arglist>(&quot;DirectX::XMFLOAT3&quot;).property(&quot;X&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;DirectX::XMFLOAT3::x</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>aea2b4446cb7de7ce15680643f7666102</anchor>
      <arglist>(&quot;Y&quot;,&amp;DirectX::XMFLOAT3::y).property(&quot;Z&quot;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; DirectX::XMFLOAT2 &gt;</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a7326435bdb185493181a6febf77dc186</anchor>
      <arglist>(&quot;DirectX::XMFLOAT2&quot;).property(&quot;X&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;DirectX::XMFLOAT2::x</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a5e865776ec2d65e9a6704f94c469d197</anchor>
      <arglist>(&quot;Y&quot;,&amp;DirectX::XMFLOAT2::y)</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>adcb5f3e9714948d3f10ec7d7f44238dd</anchor>
      <arglist>(&quot;FloatField&quot;,&amp;TestInterpolators::FloatField).property(&quot;UIntField64&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>ad6ca357eff40eb59d507bfae7e481a69</anchor>
      <arglist>(&quot;IntField64&quot;,&amp;TestInterpolators::IntField64).property(&quot;UIntField32&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a281d02fff7f9969bfbe2500f0c430914</anchor>
      <arglist>(&quot;IntField32&quot;,&amp;TestInterpolators::IntField32).property(&quot;UIntField16&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a7573359f3e7936a949e3a4578a41ac4a</anchor>
      <arglist>(&quot;IntField16&quot;,&amp;TestInterpolators::IntField16).property(&quot;UIntField8&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16 &amp;TestInterpolators::UIntField8</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a1df81a254036d12afd1ef451b1a25362</anchor>
      <arglist>(&quot;IntField8&quot;,&amp;TestInterpolators::IntField8).property(&quot;CharField&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16 &amp;TestInterpolators::UIntField8 &amp;TestInterpolators::CharField</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a33090bdbd978aa49d741007bdbbe5661</anchor>
      <arglist>(&quot;BoolField&quot;,&amp;TestInterpolators::BoolField).property(&quot;StringField&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16 &amp;TestInterpolators::UIntField8 &amp;TestInterpolators::CharField &amp;TestInterpolators::StringField</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>ab17b69bba1b0e3ff27cefa5c3077912c</anchor>
      <arglist>(&quot;WStringField&quot;,&amp;TestInterpolators::WStringField).property(&quot;EnumField&quot;</arglist>
    </member>
    <member kind="function">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16 &amp;TestInterpolators::UIntField8 &amp;TestInterpolators::CharField &amp;TestInterpolators::StringField &amp;TestInterpolators::EnumField</type>
      <name>property</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>abd48738614e75213cea338edc2cbe0c7</anchor>
      <arglist>(&quot;Color4F&quot;,&amp;TestInterpolators::Color4F).property(&quot;Position3F&quot;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ENABLE_PARAMETER_ANIMATION</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>ab89dc7cd10fc124f9ea139de328dcc34</anchor>
      <arglist>(DirectX::XMFLOAT4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TestProperty</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>ac0048557e6fc166faa86f222c41bf275</anchor>
      <arglist>(TestInterpolators &amp;animClass, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TestPropertyDiscrete</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>abc89a942e34d6e7f39bc8ac0ebea1d46</anchor>
      <arglist>(TestInterpolators &amp;animClass, const std::string &amp;propertyPath, PropType(&amp;valuesList)[ListSize], TimeType(&amp;timeList)[ListSize])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>ad5589783b2b3ca7598ae70d9c3ac7bd9</anchor>
      <arglist>(&quot;Interpolators&quot;,&quot;[Interpolators Types]&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>af66d2dde3031436359328b01a53c38a8</anchor>
      <arglist>(&quot;Interpolators change&quot;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rttr::registration::enumeration&lt; Methods &gt;(&quot;Methods&quot;)(rttr &amp;TestInterpolators::DoubleField &amp;TestInterpolators::UIntField64 &amp;TestInterpolators::UIntField32 &amp;TestInterpolators::UIntField16 &amp;TestInterpolators::UIntField8 &amp;TestInterpolators::CharField &amp;TestInterpolators::StringField &amp;TestInterpolators::EnumField &amp;TestInterpolators::Position3F</type>
      <name>BIND_AS_PTR</name>
      <anchorfile>_interpolators_test_8cpp.html</anchorfile>
      <anchor>a3f839b254a30bbeedd0fa15719a08db8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PropertyHelpersTest.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_property_helpers_test_8cpp</filename>
    <includes id="_properties_8h" name="Properties.h" local="yes" imported="no">swCommonLib/Common/Properties/Properties.h</includes>
    <includes id="_test_classes_8h" name="TestClasses.h" local="yes" imported="no">TestClasses.h</includes>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_property_helpers_test_8cpp.html</anchorfile>
      <anchor>a4a9e45f0f6e26fddaa375e9001cf67f8</anchor>
      <arglist>(&quot;Property helpers&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestClasses.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_test_classes_8cpp</filename>
    <includes id="_test_classes_8h" name="TestClasses.h" local="yes" imported="no">TestClasses.h</includes>
  </compound>
  <compound kind="file">
    <name>TestClasses.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_test_classes_8h</filename>
    <includes id="_animation_8h" name="Animation.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Animation/Animation.h</includes>
    <includes id="_direct_propertyh_8h" name="DirectPropertyh.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/DirectPropertyh.h</includes>
    <includes id="_property_path_8h" name="PropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/PropertyPath.h</includes>
    <includes id="_string_property_path_8h" name="StringPropertyPath.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Parameters/StringPropertyPath.h</includes>
    <class kind="struct">Nested2</class>
    <class kind="struct">Nested</class>
    <class kind="class">TestAnim</class>
    <class kind="class">TestInterpolators</class>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>_test_classes_8h.html</anchorfile>
      <anchor>ac98dddbd28f71f88aa785c51749e5bad</anchor>
      <arglist>(type, name)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Methods</name>
      <anchorfile>_test_classes_8h.html</anchorfile>
      <anchor>ac0995560239e8544bbc5afcc82ce8b13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TimelinesTest.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>_timelines_test_8cpp</filename>
    <includes id="_timeline_base_8h" name="TimelineBase.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Timelines/TimelineBase.h</includes>
    <includes id="_relative_timeline_8h" name="RelativeTimeline.h" local="yes" imported="no">swCommonLib/ParameterAnimation/Timelines/RelativeTimeline.h</includes>
    <includes id="_fake_timeline_8h" name="FakeTimeline.h" local="yes" imported="no">FakeTimeline.h</includes>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_timelines_test_8cpp.html</anchorfile>
      <anchor>aaff3469218c6a91cf149a1fd6e29de70</anchor>
      <arglist>(&quot;Timelines - RelativeTimeline - WrapModes&quot;,&quot;[RelativeTimeline - WrapModes]&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_timelines_test_8cpp.html</anchorfile>
      <anchor>a5bb5de6e8869fe08448d5d5eb37c4075</anchor>
      <arglist>(&quot;Timelines - RelativeTimeline - StartPauseStop&quot;,&quot;[RelativeTimeline - StartPauseStop]&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>epsilon</name>
      <anchorfile>_timelines_test_8cpp.html</anchorfile>
      <anchor>ac29df3dcbefa1ce189e5990bde994025</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SerializationMain.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/SerializerTest/</path>
    <filename>_serialization_main_8cpp</filename>
    <includes id="_serializer_8h" name="Serializer.h" local="yes" imported="no">swCommonLib/Serialization/Serializer.h</includes>
    <includes id="_deserializer_8h" name="Deserializer.h" local="yes" imported="no">swCommonLib/Serialization/Deserializer.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>_serialization_main_8cpp.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestAttribs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/TesterClasses/</path>
    <filename>_test_attribs_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_version_8h" name="Version.h" local="yes" imported="no">swCommonLib/Common/Version.h</includes>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/HCF.h</includes>
    <class kind="struct">VoxtreeHeader</class>
    <member kind="function">
      <type>sw::AttributeType</type>
      <name>GetAttributeTypeID&lt; VoxtreeHeader &gt;</name>
      <anchorfile>_test_attribs_8h.html</anchorfile>
      <anchor>a0947ee816e08a63a0cd7ef9d6cd1d656</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TesterHCF.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/TesterClasses/</path>
    <filename>_tester_h_c_f_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/HCF.h</includes>
    <namespace>sw</namespace>
    <member kind="function">
      <type>class</type>
      <name>CLASS_TESTER</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a5fd7049df38a7348b1b5fc815ee32f42</anchor>
      <arglist>(HCF)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestHCF.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>_test_h_c_f_8cpp</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Tests/TestHCF/stdafx.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CATCH_CONFIG_MAIN</name>
      <anchorfile>_test_h_c_f_8cpp.html</anchorfile>
      <anchor>a656eb5868e824d59f489f910db438420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestStreamPosition.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>_test_stream_position_8cpp</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Tests/TestHCF/stdafx.h</includes>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/HCF.h</includes>
    <includes id="_tester_h_c_f_8h" name="TesterHCF.h" local="yes" imported="no">TesterClasses/TesterHCF.h</includes>
    <includes id="_test_attribs_8h" name="TestAttribs.h" local="yes" imported="no">TesterClasses/TestAttribs.h</includes>
    <member kind="typedef">
      <type>int</type>
      <name>DataElementType</name>
      <anchorfile>_test_stream_position_8cpp.html</anchorfile>
      <anchor>afc4a4c8126d34c51c388d4159baa0d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_stream_position_8cpp.html</anchorfile>
      <anchor>a14b97d16646e139b5f64832832d1a77b</anchor>
      <arglist>(&quot;HCF - Stream position test&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_stream_position_8cpp.html</anchorfile>
      <anchor>a7b6c2fc1b75619c64ff69c97417456b0</anchor>
      <arglist>(&quot;HCF - Stream position test 2&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>const Size</type>
      <name>DataElementsCount</name>
      <anchorfile>_test_stream_position_8cpp.html</anchorfile>
      <anchor>a60f73c06f51c1be6d9224da7da1774ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestWriteFile.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>_test_write_file_8cpp</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Tests/TestHCF/stdafx.h</includes>
    <includes id="_h_c_f_8h" name="HCF.h" local="yes" imported="no">swCommonLib/HierarchicalChunkedFormat/HCF.h</includes>
    <includes id="_test_attribs_8h" name="TestAttribs.h" local="yes" imported="no">TesterClasses/TestAttribs.h</includes>
    <includes id="_tester_h_c_f_8h" name="TesterHCF.h" local="yes" imported="no">TesterClasses/TesterHCF.h</includes>
    <class kind="struct">ExampleRealFormatHeader</class>
    <member kind="typedef">
      <type>int</type>
      <name>DataElementType</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>afc4a4c8126d34c51c388d4159baa0d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>sw::AttributeType</type>
      <name>GetAttributeTypeID&lt; ExampleRealFormatHeader &gt;</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>aa679470fbb35f002eacfe899e71c1a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>a8e5824cf239d63387b5f7411b63b57e5</anchor>
      <arglist>(&quot;HCF - Simple write test&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>ac5451e06ec356d44d6b18f112d704059</anchor>
      <arglist>(&quot;HCF - Simple load test&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>a1990dcc482b7310e7299309c95c70e7b</anchor>
      <arglist>(&quot;HCF - Root chunk write test&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>const Size</type>
      <name>DataElementsCount</name>
      <anchorfile>_test_write_file_8cpp.html</anchorfile>
      <anchor>a60f73c06f51c1be6d9224da7da1774ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11APIObjects.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_a_p_i_objects_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11APIObjects.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type>D3D11_INPUT_ELEMENT_DESC</type>
      <name>vertex_normal_texture</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>ad3d71bc6d79198877f088736ca74f08b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_INPUT_ELEMENT_DESC</type>
      <name>vertex_texture</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>a7c13ae4cc9d9b7d64298010a2aef0be1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_INPUT_ELEMENT_DESC</type>
      <name>vertex_color</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>a71905491303f08e91138a88b3a27c2cb</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_INPUT_ELEMENT_DESC</type>
      <name>vertex_normal_color</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>acdbb9b6486f851cac027fc3b00987bfc</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_INPUT_ELEMENT_DESC *</type>
      <name>layouts</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>a0fdd916e7288bdc1dbb31f449a6bc1b8</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>layouts_elements</name>
      <anchorfile>_d_x11_a_p_i_objects_8cpp.html</anchorfile>
      <anchor>ab7b1e418b247e9b7e4f5e1077a356902</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11APIObjects.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_a_p_i_objects_8h</filename>
    <class kind="class">DX11APIObjects</class>
    <class kind="class">DX11AuxiliaryObjects</class>
    <member kind="typedef">
      <type>ID3D11DeviceContext</type>
      <name>DeviceContext</name>
      <anchorfile>_d_x11_a_p_i_objects_8h.html</anchorfile>
      <anchor>a2e4f60145e9e8068758c5b2cc601aff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ID3D11Device</type>
      <name>Device</name>
      <anchorfile>_d_x11_a_p_i_objects_8h.html</anchorfile>
      <anchor>a673f710c21e4e1e9494d55f3f7e81a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DX11_INIT_RESULT</name>
      <anchorfile>_d_x11_a_p_i_objects_8h.html</anchorfile>
      <anchor>adf3c7a5252c238e7999bec1006d9953e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DX11_DEFAULT_VERTEX_LAYOUT</name>
      <anchorfile>_d_x11_a_p_i_objects_8h.html</anchorfile>
      <anchor>a63a1087679bdf9e7400ab87314e5f289</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11ConstantsMapper.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_constants_mapper_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11ConstantsMapper.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="function">
      <type>uint32</type>
      <name>BitsPerPixel</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a40072203d231fd9a862cfd74f8809584</anchor>
      <arglist>(ResourceFormat fmt)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>BytesPerPixel</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ab35084c4b33809591ee6ea7b69e1ee04</anchor>
      <arglist>(ResourceFormat fmt)</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_USAGE</type>
      <name>DX11ResourceUsage</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ab54d46321505d1fc587cbb88be0a438f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D_PRIMITIVE_TOPOLOGY</type>
      <name>DX11PrimitiveTopology</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a7416fee57dc5562b84b20f71fb1fec73</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_RTV_DIMENSION</type>
      <name>DX11TextureType</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>acb9b63e157aee2a2bb625c7728f2b659</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_DSV_DIMENSION</type>
      <name>DX11TextureTypeToDSV</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a8d0bf00df25160251cf068767d9d9519</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_SRV_DIMENSION</type>
      <name>DX11TextureTypeToSRV</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>adca4ee8baed73656b1ff7fa086c1f5d4</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BIND_FLAG</type>
      <name>DX11ResourceBinding</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>aa41ceda3c0ebeda0608d3f72418c0f02</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthStencilFormat</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a2c59dddd8f51ad7b4449238bde835dd7</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthStencilTypeless</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a336641010670aea406e449a78b72d521</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthOnly</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>a1eab82046af33cd26d1007caacf37b58</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11StencilOnly</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ab3d66187f22c7c367e68a24f3b14910a</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_FILL_MODE</type>
      <name>DX11FillMode</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>afccbff32accf7ab9357f930f2c4760ff</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_CULL_MODE</type>
      <name>DX11CullMode</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ae7e15aa4925a84aa82b43aae73f69ec3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BLEND</type>
      <name>DX11BlendFactor</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ada7407f5d64e990942bea61c283d1449</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BLEND_OP</type>
      <name>DX11BlendOperation</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>ae0062be9c909272038ac2feb983ca77b</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11ResourceFormat</name>
      <anchorfile>_d_x11_constants_mapper_8cpp.html</anchorfile>
      <anchor>adabcb3913a54e97f42f36e10e2204f8b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11ConstantsMapper.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_constants_mapper_8h</filename>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11APIObjects.h</includes>
    <class kind="class">DX11ConstantsMapper</class>
    <member kind="variable">
      <type>D3D11_USAGE</type>
      <name>DX11ResourceUsage</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>adfe441f1d971f42ed54cdcba68763b0a</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11ResourceFormat</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ad56aeaabb589cb49d0051d4da4795e55</anchor>
      <arglist>[133]</arglist>
    </member>
    <member kind="variable">
      <type>D3D_PRIMITIVE_TOPOLOGY</type>
      <name>DX11PrimitiveTopology</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ac3ca41e929520feb7d6077b0ea7a69cb</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BIND_FLAG</type>
      <name>DX11ResourceBinding</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>aa41ceda3c0ebeda0608d3f72418c0f02</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_RTV_DIMENSION</type>
      <name>DX11TextureType</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>acb9b63e157aee2a2bb625c7728f2b659</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthStencilFormat</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>a2c59dddd8f51ad7b4449238bde835dd7</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_DSV_DIMENSION</type>
      <name>DX11TextureTypeToDSV</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>a8d0bf00df25160251cf068767d9d9519</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_SRV_DIMENSION</type>
      <name>DX11TextureTypeToSRV</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>adca4ee8baed73656b1ff7fa086c1f5d4</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthStencilTypeless</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>a336641010670aea406e449a78b72d521</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11DepthOnly</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>a1eab82046af33cd26d1007caacf37b58</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>DXGI_FORMAT</type>
      <name>DX11StencilOnly</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ab3d66187f22c7c367e68a24f3b14910a</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_FILL_MODE</type>
      <name>DX11FillMode</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>afccbff32accf7ab9357f930f2c4760ff</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_CULL_MODE</type>
      <name>DX11CullMode</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ae7e15aa4925a84aa82b43aae73f69ec3</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BLEND</type>
      <name>DX11BlendFactor</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ada7407f5d64e990942bea61c283d1449</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable">
      <type>D3D11_BLEND_OP</type>
      <name>DX11BlendOperation</name>
      <anchorfile>_d_x11_constants_mapper_8h.html</anchorfile>
      <anchor>ae0062be9c909272038ac2feb983ca77b</anchor>
      <arglist>[5]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11Initializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_initializer_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_initializer_8h" name="DX11Initializer.h" local="yes" imported="no">DX11Initializer.h</includes>
    <includes id="_d_x11_renderer_8h" name="DX11Renderer.h" local="yes" imported="no">DX11Renderer/DX11Renderer.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11Resources/DX11RenderTarget.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Resources/DX11Texture.h</includes>
    <includes id="_d_x11_swap_chain_8h" name="DX11SwapChain.h" local="yes" imported="no">DX11Resources/DX11SwapChain.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11ConstantsMapper.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
  </compound>
  <compound kind="file">
    <name>DX11Initializer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Initializer/</path>
    <filename>_d_x11_initializer_8h</filename>
    <includes id="_nullable_8h" name="Nullable.h" local="yes" imported="no">swCommonLib/Common/Nullable.h</includes>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11APIObjects.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <class kind="class">DX11Initializer</class>
  </compound>
  <compound kind="file">
    <name>DX11Renderer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Renderer/</path>
    <filename>_d_x11_renderer_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_renderer_8h" name="DX11Renderer.h" local="yes" imported="no">DX11Renderer.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_d_x11_input_layout_8h" name="DX11InputLayout.h" local="yes" imported="no">DX11Resources/DX11InputLayout.h</includes>
    <includes id="_d_x11_buffer_8h" name="DX11Buffer.h" local="yes" imported="no">DX11Resources/DX11Buffer.h</includes>
    <includes id="_d_x11_vertex_shader_8h" name="DX11VertexShader.h" local="yes" imported="no">DX11Resources/DX11VertexShader.h</includes>
    <includes id="_d_x11_pixel_shader_8h" name="DX11PixelShader.h" local="yes" imported="no">DX11Resources/DX11PixelShader.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Resources/DX11Texture.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11Resources/DX11RenderTarget.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ThrowIfNull</name>
      <anchorfile>_d_x11_renderer_8cpp.html</anchorfile>
      <anchor>ad1ba4c51894cc4c2a5e3e26743fb2315</anchor>
      <arglist>(ptr, message)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11Renderer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Renderer/</path>
    <filename>_d_x11_renderer_8h</filename>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">swGraphicAPI/Rendering/IRenderer.h</includes>
    <class kind="class">DX11Renderer</class>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_BUFFER_BINDING_POINT</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a2019c44c1934b1f64b69f6840e6737d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIGHTS_BUFFER_BINDING_POINT</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>ada53214880f16cbce30632b50fe9970f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRANSFORM_BUFFER_BINDING_POINT</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a738cfa1394c8fe81b988ae89bd129767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BONES_BUFFER_BINDING_POINT</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a45ea307229491192a200795a28dfa00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATERIAL_BUFFER_BINDING_POINT</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a386e0692eab1316366806329efe4211a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11Renderer</type>
      <name>Renderer</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>aa01c664f6672a97cbd74d69255b8c3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DX11Buffer *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a33958809327e97d76e5fcd98a84bb94d</anchor>
      <arglist>(BufferObject *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11Texture *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a99133590cdc1bf2e3e828ca859b455c2</anchor>
      <arglist>(TextureObject *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11ComputeShader *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a9bb11b8ea9bb48ffc21720606e717cbf</anchor>
      <arglist>(ComputeShader *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11PixelShader *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a9452c3191e98a2b9b4dd44b9d7bf21df</anchor>
      <arglist>(PixelShader *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11VertexShader *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a52825a0930e3611371847fa5b5edcefc</anchor>
      <arglist>(VertexShader *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11RenderTarget *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a6ca53d7699b45f5bb289e9876daf18e6</anchor>
      <arglist>(RenderTargetObject *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11BlendingState *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>ac16095c4ad69f13134c7afe3ecccdcbd</anchor>
      <arglist>(BlendingState *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11RasterizerState *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a8c89ab761f1b3891fd36f439aa8ec7af</anchor>
      <arglist>(RasterizerState *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11DepthStencilState *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a301c2572760b2fa7dbad35e782ce6e0f</anchor>
      <arglist>(DepthStencilState *res)</arglist>
    </member>
    <member kind="function">
      <type>DX11InputLayout *</type>
      <name>DX11</name>
      <anchorfile>_d_x11_renderer_8h.html</anchorfile>
      <anchor>a40c4a7ecf48cd101342bfaafca1dc0a4</anchor>
      <arglist>(ShaderInputLayout *res)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11Buffer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_buffer_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_buffer_8h" name="DX11Buffer.h" local="yes" imported="no">DX11Buffer.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_buffer_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11Buffer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_buffer_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11Buffer</class>
  </compound>
  <compound kind="file">
    <name>DX11ComputeShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_compute_shader_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_compute_shader_8h" name="DX11ComputeShader.h" local="yes" imported="no">DX11ComputeShader.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_compute_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11ComputeShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_compute_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11ComputeShader</class>
  </compound>
  <compound kind="file">
    <name>DX11InputLayout.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_input_layout_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_input_layout_8h" name="DX11InputLayout.h" local="yes" imported="no">DX11InputLayout.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_input_layout_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11InputLayout.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_input_layout_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11InputLayout</class>
  </compound>
  <compound kind="file">
    <name>DX11InputLayoutDescriptor.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_input_layout_descriptor_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_input_layout_descriptor_8h" name="DX11InputLayoutDescriptor.h" local="yes" imported="no">DX11InputLayoutDescriptor.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
  </compound>
  <compound kind="file">
    <name>DX11InputLayoutDescriptor.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_input_layout_descriptor_8h</filename>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">DX11InputLayoutDescriptor</class>
  </compound>
  <compound kind="file">
    <name>DX11PipelineState.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_pipeline_state_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_pipeline_state_8h" name="DX11PipelineState.h" local="yes" imported="no">DX11PipelineState.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_pipeline_state_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11PipelineState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_pipeline_state_8h</filename>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <class kind="class">DX11RasterizerState</class>
    <class kind="class">DX11DepthStencilState</class>
    <class kind="class">DX11BlendingState</class>
  </compound>
  <compound kind="file">
    <name>DX11PixelShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_pixel_shader_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_pixel_shader_8h" name="DX11PixelShader.h" local="yes" imported="no">DX11PixelShader.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_pixel_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11PixelShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_pixel_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11PixelShader</class>
  </compound>
  <compound kind="file">
    <name>DX11RenderTarget.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_render_target_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11RenderTarget.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Texture.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_render_target_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11RenderTarget.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_render_target_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11RenderTarget</class>
  </compound>
  <compound kind="file">
    <name>DX11SwapChain.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_swap_chain_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_swap_chain_8h" name="DX11SwapChain.h" local="yes" imported="no">DX11SwapChain.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_swap_chain_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11SwapChain.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_swap_chain_8h</filename>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">swGraphicAPI/DX11API/DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11RenderTarget.h</includes>
    <class kind="class">DX11SwapChain</class>
  </compound>
  <compound kind="file">
    <name>DX11Texture.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_texture_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Texture.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_texture_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11Texture.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_texture_8h</filename>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">DX11Texture</class>
  </compound>
  <compound kind="file">
    <name>DX11VertexShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_vertex_shader_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_d_x11_vertex_shader_8h" name="DX11VertexShader.h" local="yes" imported="no">DX11VertexShader.h</includes>
    <includes id="_d_x11_input_layout_descriptor_8h" name="DX11InputLayoutDescriptor.h" local="yes" imported="no">DX11InputLayoutDescriptor.h</includes>
    <includes id="_d_x11_input_layout_8h" name="DX11InputLayout.h" local="yes" imported="no">DX11InputLayout.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_d_x11_vertex_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DX11VertexShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_vertex_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <class kind="class">DX11VertexShader</class>
  </compound>
  <compound kind="file">
    <name>ResourcesFactory.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/DX11Resources/</path>
    <filename>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_d_x11_initializer_8h" name="DX11Initializer.h" local="yes" imported="no">DX11Initializer/DX11Initializer.h</includes>
    <includes id="_d_x11_vertex_shader_8h" name="DX11VertexShader.h" local="yes" imported="no">DX11VertexShader.h</includes>
    <includes id="_d_x11_pixel_shader_8h" name="DX11PixelShader.h" local="yes" imported="no">DX11PixelShader.h</includes>
    <includes id="_d_x11_compute_shader_8h" name="DX11ComputeShader.h" local="yes" imported="no">DX11ComputeShader.h</includes>
    <includes id="_d_x11_buffer_8h" name="DX11Buffer.h" local="yes" imported="no">DX11Buffer.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Texture.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11RenderTarget.h</includes>
    <includes id="_d_x11_input_layout_descriptor_8h" name="DX11InputLayoutDescriptor.h" local="yes" imported="no">DX11InputLayoutDescriptor.h</includes>
    <includes id="_d_x11_input_layout_8h" name="DX11InputLayout.h" local="yes" imported="no">DX11InputLayout.h</includes>
    <includes id="_d_x11_swap_chain_8h" name="DX11SwapChain.h" local="yes" imported="no">DX11SwapChain.h</includes>
    <includes id="_d_x11_pipeline_state_8h" name="DX11PipelineState.h" local="yes" imported="no">DX11PipelineState.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="typedef">
      <type>DX11Texture</type>
      <name>Texture</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>adec3c7e2a258a9f62dfe6b8441e0493f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11VertexShader</type>
      <name>VertexShaderObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a8e608e07a0acf70250287bb4b0c6c6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11PixelShader</type>
      <name>PixelShaderObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a03711256608136a07fe0a21a9e0aa609</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11Buffer</type>
      <name>Buffer</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>afba1e5bc3e3c81c452d88902f261bf96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11ComputeShader</type>
      <name>ComputeShaderObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>ac1908c0a4702d7da1c4d87d1b308eb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11DepthStencilState</type>
      <name>DepthStencilStateObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a5d960bd1d819fb9b3960dc01f9833d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11RasterizerState</type>
      <name>RasterizerStateObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>ac7808662962c45f6a6edf5930717b441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11BlendingState</type>
      <name>BlendingStateObject</name>
      <anchorfile>_d_x11_a_p_i_2_d_x11_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a02bab9d867d6218139af7f379983d657</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourcesFactory.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp</filename>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_mock_initializer_8h" name="MockInitializer.h" local="yes" imported="no">MockInitializer/MockInitializer.h</includes>
    <includes id="_mock_vertex_shader_8h" name="MockVertexShader.h" local="yes" imported="no">MockVertexShader.h</includes>
    <includes id="_mock_pixel_shader_8h" name="MockPixelShader.h" local="yes" imported="no">MockPixelShader.h</includes>
    <includes id="_mock_compute_shader_8h" name="MockComputeShader.h" local="yes" imported="no">MockComputeShader.h</includes>
    <includes id="_mock_buffer_8h" name="MockBuffer.h" local="yes" imported="no">MockBuffer.h</includes>
    <includes id="_mock_texture_8h" name="MockTexture.h" local="yes" imported="no">MockTexture.h</includes>
    <includes id="_mock_render_target_8h" name="MockRenderTarget.h" local="yes" imported="no">MockRenderTarget.h</includes>
    <includes id="_mock_input_layout_descriptor_8h" name="MockInputLayoutDescriptor.h" local="yes" imported="no">MockInputLayoutDescriptor.h</includes>
    <includes id="_mock_input_layout_8h" name="MockInputLayout.h" local="yes" imported="no">MockInputLayout.h</includes>
    <includes id="_mock_swap_chain_8h" name="MockSwapChain.h" local="yes" imported="no">MockSwapChain.h</includes>
    <includes id="_mock_pipeline_state_8h" name="MockPipelineState.h" local="yes" imported="no">MockPipelineState.h</includes>
    <member kind="typedef">
      <type>sw::MockTexture</type>
      <name>Texture</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>acda818e019705ccafa76bd707859bafe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockVertexShader</type>
      <name>VertexShaderObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>aacb992ad2cd44e442d7c4f42cb7ad469</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockPixelShader</type>
      <name>PixelShaderObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a21cb4976b21aa3106bade5cffa8a7256</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockBuffer</type>
      <name>Buffer</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a6f614b97250e356214ec632b3eb109d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockComputeShader</type>
      <name>ComputeShaderObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a786559334c927752fe7bed6d85758a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockDepthStencilState</type>
      <name>DepthStencilStateObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a317f7a098e21a612a2395994bda72095</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockRasterizerState</type>
      <name>RasterizerStateObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>aa26ce418aa0509f021e80bbab355cff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::MockBlendingState</type>
      <name>BlendingStateObject</name>
      <anchorfile>_mock_a_p_i_2_mock_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>a0a9d5b2602f9fcd0041d717d97664d29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourcesFactory.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_resources_2_resources_factory_8cpp</filename>
    <includes id="_d_x11_vertex_shader_8h" name="DX11VertexShader.h" local="yes" imported="no">DX11VertexShader.h</includes>
    <includes id="_d_x11_pixel_shader_8h" name="DX11PixelShader.h" local="yes" imported="no">DX11PixelShader.h</includes>
    <includes id="_d_x11_buffer_8h" name="DX11Buffer.h" local="yes" imported="no">DX11Buffer.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Texture.h</includes>
    <member kind="typedef">
      <type>DX11Texture</type>
      <name>Texture</name>
      <anchorfile>_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>adec3c7e2a258a9f62dfe6b8441e0493f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11VertexShader</type>
      <name>VertexShader</name>
      <anchorfile>_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>aacc88c1c79d97f30f3fddd3e7f5440c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11PixelShader</type>
      <name>PixelShader</name>
      <anchorfile>_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>abbc334435121ab51dcf854636c138d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DX11Buffer</type>
      <name>Buffer</name>
      <anchorfile>_resources_2_resources_factory_8cpp.html</anchorfile>
      <anchor>afba1e5bc3e3c81c452d88902f261bf96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockInitializer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockInitializer/</path>
    <filename>_mock_initializer_8cpp</filename>
    <includes id="_mock_initializer_8h" name="MockInitializer.h" local="yes" imported="no">MockInitializer.h</includes>
    <includes id="_mock_renderer_8h" name="MockRenderer.h" local="yes" imported="no">MockRenderer/MockRenderer.h</includes>
    <includes id="_mock_render_target_8h" name="MockRenderTarget.h" local="yes" imported="no">MockResources/MockRenderTarget.h</includes>
    <includes id="_mock_texture_8h" name="MockTexture.h" local="yes" imported="no">MockResources/MockTexture.h</includes>
    <includes id="_mock_swap_chain_8h" name="MockSwapChain.h" local="yes" imported="no">MockResources/MockSwapChain.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockInitializer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockInitializer/</path>
    <filename>_mock_initializer_8h</filename>
    <includes id="_nullable_8h" name="Nullable.h" local="yes" imported="no">swCommonLib/Common/Nullable.h</includes>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <class kind="class">sw::MockInitializer</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockRenderer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockRenderer/</path>
    <filename>_mock_renderer_8cpp</filename>
    <includes id="_mock_renderer_8h" name="MockRenderer.h" local="yes" imported="no">MockRenderer.h</includes>
    <includes id="_mock_input_layout_8h" name="MockInputLayout.h" local="yes" imported="no">MockResources/MockInputLayout.h</includes>
    <includes id="_mock_buffer_8h" name="MockBuffer.h" local="yes" imported="no">MockResources/MockBuffer.h</includes>
    <includes id="_mock_vertex_shader_8h" name="MockVertexShader.h" local="yes" imported="no">MockResources/MockVertexShader.h</includes>
    <includes id="_mock_pixel_shader_8h" name="MockPixelShader.h" local="yes" imported="no">MockResources/MockPixelShader.h</includes>
    <includes id="_mock_texture_8h" name="MockTexture.h" local="yes" imported="no">MockResources/MockTexture.h</includes>
    <includes id="_mock_render_target_8h" name="MockRenderTarget.h" local="yes" imported="no">MockResources/MockRenderTarget.h</includes>
    <namespace>sw</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ThrowIfNull</name>
      <anchorfile>_mock_renderer_8cpp.html</anchorfile>
      <anchor>ad1ba4c51894cc4c2a5e3e26743fb2315</anchor>
      <arglist>(ptr, message)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockRenderer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockRenderer/</path>
    <filename>_mock_renderer_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">swGraphicAPI/Rendering/IRenderer.h</includes>
    <class kind="class">sw::MockRenderer</class>
    <namespace>sw</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_BUFFER_BINDING_POINT</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>a2019c44c1934b1f64b69f6840e6737d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIGHTS_BUFFER_BINDING_POINT</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>ada53214880f16cbce30632b50fe9970f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRANSFORM_BUFFER_BINDING_POINT</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>a738cfa1394c8fe81b988ae89bd129767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BONES_BUFFER_BINDING_POINT</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>a45ea307229491192a200795a28dfa00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATERIAL_BUFFER_BINDING_POINT</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>a386e0692eab1316366806329efe4211a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MockRenderer</type>
      <name>Renderer</name>
      <anchorfile>_mock_renderer_8h.html</anchorfile>
      <anchor>a4bf29bb75e46e5955dcf25866712c5f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockBuffer.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_buffer_8cpp</filename>
    <includes id="_mock_buffer_8h" name="MockBuffer.h" local="yes" imported="no">MockBuffer.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_buffer_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockBuffer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_buffer_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockBuffer</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockComputeShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_compute_shader_8cpp</filename>
    <includes id="_mock_compute_shader_8h" name="MockComputeShader.h" local="yes" imported="no">MockComputeShader.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_compute_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockComputeShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_compute_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockComputeShader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockInputLayout.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_input_layout_8cpp</filename>
    <includes id="_mock_input_layout_8h" name="MockInputLayout.h" local="yes" imported="no">MockInputLayout.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_input_layout_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockInputLayout.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_input_layout_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockInputLayout</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockInputLayoutDescriptor.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_input_layout_descriptor_8cpp</filename>
    <includes id="_mock_input_layout_descriptor_8h" name="MockInputLayoutDescriptor.h" local="yes" imported="no">MockInputLayoutDescriptor.h</includes>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockInputLayoutDescriptor.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_input_layout_descriptor_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="struct">sw::InputLayoutInfo</class>
    <class kind="class">sw::MockInputLayoutDescriptor</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockPipelineState.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_pipeline_state_8cpp</filename>
    <includes id="_mock_pipeline_state_8h" name="MockPipelineState.h" local="yes" imported="no">MockPipelineState.h</includes>
    <namespace>sw</namespace>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; sw::MockDepthStencilState &gt;</name>
      <anchorfile>_mock_pipeline_state_8cpp.html</anchorfile>
      <anchor>a2f426e9522cd3b98b14ab24d6efcd512</anchor>
      <arglist>(&quot;sw::MockDepthStencilState&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; sw::MockBlendingState &gt;</name>
      <anchorfile>_mock_pipeline_state_8cpp.html</anchorfile>
      <anchor>a09d1547fa24370085a78f21635c082da</anchor>
      <arglist>(&quot;sw::MockBlendingState&quot;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_pipeline_state_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockPipelineState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_pipeline_state_8h</filename>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <class kind="class">sw::MockRasterizerState</class>
    <class kind="class">sw::MockDepthStencilState</class>
    <class kind="class">sw::MockBlendingState</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockPixelShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_pixel_shader_8cpp</filename>
    <includes id="_mock_pixel_shader_8h" name="MockPixelShader.h" local="yes" imported="no">MockPixelShader.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_pixel_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockPixelShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_pixel_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockPixelShader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockRenderTarget.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_render_target_8cpp</filename>
    <includes id="_mock_render_target_8h" name="MockRenderTarget.h" local="yes" imported="no">MockRenderTarget.h</includes>
    <includes id="_mock_texture_8h" name="MockTexture.h" local="yes" imported="no">MockTexture.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_render_target_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockRenderTarget.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_render_target_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockRenderTarget</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockSwapChain.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_swap_chain_8cpp</filename>
    <includes id="_mock_swap_chain_8h" name="MockSwapChain.h" local="yes" imported="no">MockSwapChain.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_swap_chain_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockSwapChain.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_swap_chain_8h</filename>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <class kind="class">sw::MockSwapChain</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockTexture.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_texture_8cpp</filename>
    <includes id="_mock_texture_8h" name="MockTexture.h" local="yes" imported="no">MockTexture.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_texture_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockTexture.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_texture_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockTexture</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>MockVertexShader.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_vertex_shader_8cpp</filename>
    <includes id="_mock_vertex_shader_8h" name="MockVertexShader.h" local="yes" imported="no">MockVertexShader.h</includes>
    <includes id="_mock_input_layout_descriptor_8h" name="MockInputLayoutDescriptor.h" local="yes" imported="no">MockInputLayoutDescriptor.h</includes>
    <includes id="_mock_input_layout_8h" name="MockInputLayout.h" local="yes" imported="no">MockInputLayout.h</includes>
    <namespace>sw</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mock_vertex_shader_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MockVertexShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/MockAPI/MockResources/</path>
    <filename>_mock_vertex_shader_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="class">sw::MockVertexShader</class>
    <namespace>sw</namespace>
  </compound>
  <compound kind="file">
    <name>dynsections.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js</filename>
    <member kind="function">
      <type>function</type>
      <name>toggleVisibility</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a1922c462474df7dfd18741c961d59a25</anchor>
      <arglist>(linkObj)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>updateStripes</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a8f7493ad859d4fbf2523917511ee7177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleLevel</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a19f577cc1ba571396a85bb1f48bf4df2</anchor>
      <arglist>(level)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleFolder</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>af244da4527af2d845dca04f5656376cd</anchor>
      <arglist>(id)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleInherit</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>ac057b640b17ff32af11ced151c9305b4</anchor>
      <arglist>(id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dynsections.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js</filename>
    <member kind="function">
      <type>function</type>
      <name>toggleVisibility</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a1922c462474df7dfd18741c961d59a25</anchor>
      <arglist>(linkObj)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>updateStripes</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a8f7493ad859d4fbf2523917511ee7177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleLevel</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>a19f577cc1ba571396a85bb1f48bf4df2</anchor>
      <arglist>(level)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleFolder</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>af244da4527af2d845dca04f5656376cd</anchor>
      <arglist>(id)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>toggleInherit</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2dynsections_8js.html</anchorfile>
      <anchor>ac057b640b17ff32af11ced151c9305b4</anchor>
      <arglist>(id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jquery.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js</filename>
    <member kind="function">
      <type>b</type>
      <name>extend</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a5fb206c91c64d1be35fde236706eab86</anchor>
      <arglist>({cssHooks:{opacity:{get:function(bw, bv){if(bv){var e=Z(bw,&quot;opacity&quot;,&quot;opacity&quot;);return e===&quot;&quot;?&quot;1&quot;:e}else{return bw.style.opacity}}}}, cssNumber:{fillOpacity:true, fontWeight:true, lineHeight:true, opacity:true, orphans:true, widows:true, zIndex:true, zoom:true}, cssProps:{&quot;float&quot;:b.support.cssFloat?&quot;cssFloat&quot;:&quot;styleFloat&quot;}, style:function(bx, bw, bD, by){if(!bx||bx.nodeType===3||bx.nodeType===8||!bx.style){return}var bB, bC, bz=b.camelCase(bw), bv=bx.style, bE=b.cssHooks[bz];bw=b.cssProps[bz]||bz;if(bD!==L){bC=typeof bD;if(bC===&quot;string&quot;&amp;&amp;(bB=I.exec(bD))){bD=(+(bB[1]+1)*+bB[2])+parseFloat(b.css(bx, bw));bC=&quot;number&quot;}if(bD==null||bC===&quot;number&quot;&amp;&amp;isNaN(bD)){return}if(bC===&quot;number&quot;&amp;&amp;!b.cssNumber[bz]){bD+=&quot;px&quot;}if(!bE||!(&quot;set&quot;in bE)||(bD=bE.set(bx, bD))!==L){try{bv[bw]=bD}catch(bA){}}}else{if(bE &amp;&amp;&quot;get&quot;in bE &amp;&amp;(bB=bE.get(bx, false, by))!==L){return bB}return bv[bw]}}, css:function(by, bx, bv){var bw, e;bx=b.camelCase(bx);e=b.cssHooks[bx];bx=b.cssProps[bx]||bx;if(bx===&quot;cssFloat&quot;){bx=&quot;float&quot;}if(e &amp;&amp;&quot;get&quot;in e &amp;&amp;(bw=e.get(by, true, bv))!==L){return bw}else{if(Z){return Z(by, bx)}}}, swap:function(bx, bw, by){var e={};for(var bv in bw){e[bv]=bx.style[bv];bx.style[bv]=bw[bv]}by.call(bx);for(bv in bw){bx.style[bv]=e[bv]}}})</arglist>
    </member>
    <member kind="function">
      <type>b</type>
      <name>each</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a871ff39db627c54c710a3e9909b8234c</anchor>
      <arglist>([&quot;height&quot;,&quot;width&quot;], function(bv, e){b.cssHooks[e]={get:function(by, bx, bw){var bz;if(bx){if(by.offsetWidth!==0){return p(by, e, bw)}else{b.swap(by, a7, function(){bz=p(by, e, bw)})}return bz}}, set:function(bw, bx){if(bc.test(bx)){bx=parseFloat(bx);if(bx &gt;=0){return bx+&quot;px&quot;}}else{return bx}}}})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a9db6d45a025ad692282fe23e69eeba43</anchor>
      <arglist>(!b.support.opacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>b</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2fa551895933fae935a0a6b87282241d</anchor>
      <arglist>(function(){if(!b.support.reliableMarginRight){b.cssHooks.marginRight={get:function(bw, bv){var e;b.swap(bw,{display:&quot;inline-block&quot;}, function(){if(bv){e=Z(bw,&quot;margin-right&quot;,&quot;marginRight&quot;)}else{e=bw.style.marginRight}});return e}}}})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a30d3d2cd5b567c9f31b2aa30b9cb3bb8</anchor>
      <arglist>(av.defaultView &amp;&amp;av.defaultView.getComputedStyle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2c54bd8ed7482e89d19331ba61fe221c</anchor>
      <arglist>(av.documentElement.currentStyle)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>p</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2335e57f79b6acfb6de59c235dc8a83e</anchor>
      <arglist>(by, bw, bv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a42cbfadee2b4749e8f699ea8d745a0e4</anchor>
      <arglist>(b.expr &amp;&amp;b.expr.filters)</arglist>
    </member>
    <member kind="variable">
      <type>function</type>
      <name>bb</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a1d6558865876e1c8cca029fce41a4bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>function</type>
      <name>L</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a38ee4c0b5f4fe2a18d0c783af540d253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>b</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>aa4026ad5544b958e54ce5e106fa1c805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>au</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a4fd8ddfab07c8d7c7cae0ab0e052cad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>b fn</type>
      <name>css</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a89ad527fcd82c01ebb587332f5b4fcd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>b</type>
      <name>curCSS</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a88b21f8ba3af86d6981b1da520ece33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Z</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>adc18d83abfd9f87d396e8fd6b6ac0fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>k</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ab26645c014aa005ecedef329ecf58c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>ap</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a6ddf393cc7f9a8828e197bb0d9916c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>bs</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ae77642f8ef73fb9c20c2a737d956acda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>bq</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>af6ee77c71b2c89bdb365145ac5ad1219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aD</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ad223f5fba68c41c1236671ac5c5b0fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aZ</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ac87125cdee1a5e57da4ef619af49bc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aM</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a8cc6111a5def3ea889157d13fb9a9672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aQ</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a79eb58dc6cdf0aef563d5dc1ded27df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>c</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>abce695e0af988ece0826d9ad59b8160d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jquery.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js</filename>
    <member kind="function">
      <type>b</type>
      <name>extend</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a5fb206c91c64d1be35fde236706eab86</anchor>
      <arglist>({cssHooks:{opacity:{get:function(bw, bv){if(bv){var e=Z(bw,&quot;opacity&quot;,&quot;opacity&quot;);return e===&quot;&quot;?&quot;1&quot;:e}else{return bw.style.opacity}}}}, cssNumber:{fillOpacity:true, fontWeight:true, lineHeight:true, opacity:true, orphans:true, widows:true, zIndex:true, zoom:true}, cssProps:{&quot;float&quot;:b.support.cssFloat?&quot;cssFloat&quot;:&quot;styleFloat&quot;}, style:function(bx, bw, bD, by){if(!bx||bx.nodeType===3||bx.nodeType===8||!bx.style){return}var bB, bC, bz=b.camelCase(bw), bv=bx.style, bE=b.cssHooks[bz];bw=b.cssProps[bz]||bz;if(bD!==L){bC=typeof bD;if(bC===&quot;string&quot;&amp;&amp;(bB=I.exec(bD))){bD=(+(bB[1]+1)*+bB[2])+parseFloat(b.css(bx, bw));bC=&quot;number&quot;}if(bD==null||bC===&quot;number&quot;&amp;&amp;isNaN(bD)){return}if(bC===&quot;number&quot;&amp;&amp;!b.cssNumber[bz]){bD+=&quot;px&quot;}if(!bE||!(&quot;set&quot;in bE)||(bD=bE.set(bx, bD))!==L){try{bv[bw]=bD}catch(bA){}}}else{if(bE &amp;&amp;&quot;get&quot;in bE &amp;&amp;(bB=bE.get(bx, false, by))!==L){return bB}return bv[bw]}}, css:function(by, bx, bv){var bw, e;bx=b.camelCase(bx);e=b.cssHooks[bx];bx=b.cssProps[bx]||bx;if(bx===&quot;cssFloat&quot;){bx=&quot;float&quot;}if(e &amp;&amp;&quot;get&quot;in e &amp;&amp;(bw=e.get(by, true, bv))!==L){return bw}else{if(Z){return Z(by, bx)}}}, swap:function(bx, bw, by){var e={};for(var bv in bw){e[bv]=bx.style[bv];bx.style[bv]=bw[bv]}by.call(bx);for(bv in bw){bx.style[bv]=e[bv]}}})</arglist>
    </member>
    <member kind="function">
      <type>b</type>
      <name>each</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a871ff39db627c54c710a3e9909b8234c</anchor>
      <arglist>([&quot;height&quot;,&quot;width&quot;], function(bv, e){b.cssHooks[e]={get:function(by, bx, bw){var bz;if(bx){if(by.offsetWidth!==0){return p(by, e, bw)}else{b.swap(by, a7, function(){bz=p(by, e, bw)})}return bz}}, set:function(bw, bx){if(bc.test(bx)){bx=parseFloat(bx);if(bx &gt;=0){return bx+&quot;px&quot;}}else{return bx}}}})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a9db6d45a025ad692282fe23e69eeba43</anchor>
      <arglist>(!b.support.opacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>b</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2fa551895933fae935a0a6b87282241d</anchor>
      <arglist>(function(){if(!b.support.reliableMarginRight){b.cssHooks.marginRight={get:function(bw, bv){var e;b.swap(bw,{display:&quot;inline-block&quot;}, function(){if(bv){e=Z(bw,&quot;margin-right&quot;,&quot;marginRight&quot;)}else{e=bw.style.marginRight}});return e}}}})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a30d3d2cd5b567c9f31b2aa30b9cb3bb8</anchor>
      <arglist>(av.defaultView &amp;&amp;av.defaultView.getComputedStyle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2c54bd8ed7482e89d19331ba61fe221c</anchor>
      <arglist>(av.documentElement.currentStyle)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>p</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a2335e57f79b6acfb6de59c235dc8a83e</anchor>
      <arglist>(by, bw, bv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a42cbfadee2b4749e8f699ea8d745a0e4</anchor>
      <arglist>(b.expr &amp;&amp;b.expr.filters)</arglist>
    </member>
    <member kind="variable">
      <type>function</type>
      <name>bb</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a1d6558865876e1c8cca029fce41a4bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>function</type>
      <name>L</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a38ee4c0b5f4fe2a18d0c783af540d253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>b</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>aa4026ad5544b958e54ce5e106fa1c805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>au</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a4fd8ddfab07c8d7c7cae0ab0e052cad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>b fn</type>
      <name>css</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a89ad527fcd82c01ebb587332f5b4fcd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>b</type>
      <name>curCSS</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a88b21f8ba3af86d6981b1da520ece33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Z</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>adc18d83abfd9f87d396e8fd6b6ac0fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>k</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ab26645c014aa005ecedef329ecf58c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>ap</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a6ddf393cc7f9a8828e197bb0d9916c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>bs</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ae77642f8ef73fb9c20c2a737d956acda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>bq</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>af6ee77c71b2c89bdb365145ac5ad1219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aD</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ad223f5fba68c41c1236671ac5c5b0fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aZ</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>ac87125cdee1a5e57da4ef619af49bc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aM</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a8cc6111a5def3ea889157d13fb9a9672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>aQ</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>a79eb58dc6cdf0aef563d5dc1ded27df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>c</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2jquery_8js.html</anchorfile>
      <anchor>abce695e0af988ece0826d9ad59b8160d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KeyType</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__0_8js.html</anchorfile>
      <anchor>aab0feaba617470cb4aa830dc5935238c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AddressType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__0_8js.html</anchorfile>
      <anchor>ac8267645b55708b505e6356a545a58da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__1_8js.html</anchorfile>
      <anchor>adacc1be8f603ebf5c42e1e7fa3bc2f7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_10.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__10_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__10_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GraphicAPIConstants</type>
      <name>h</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__10_8js.html</anchorfile>
      <anchor>a1635b8c508b35624cc97effdf5abef31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_10.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__10_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__10_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_11.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__11_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__11_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_11.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__11_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__11_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_12.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__12_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__12_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_12.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__12_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__12_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WrappedType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__12_8js.html</anchorfile>
      <anchor>ab41229a1f7cf714ff05762e118c4e69c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_13.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__13_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__13_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourcePtr &amp;</type>
      <name>lt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__13_8js.html</anchorfile>
      <anchor>a9852de9e5b460c1d3bd5b6156940aeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T &amp;</type>
      <name>gt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__13_8js.html</anchorfile>
      <anchor>aed7a7f1f82df5fd3dd11622b2e8a0351</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_13.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__13_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__13_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_14.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__14_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__14_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_14.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__14_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__14_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_15.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__15_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__15_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_15.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__15_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__15_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DX11ConstantsMapper</type>
      <name>cpp</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__2_8js.html</anchorfile>
      <anchor>aeebfa45c57725b450045b1afaecfef2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__2_8js.html</anchorfile>
      <anchor>adacc1be8f603ebf5c42e1e7fa3bc2f7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GraphicAPIConstants</type>
      <name>h</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__4_8js.html</anchorfile>
      <anchor>a1635b8c508b35624cc97effdf5abef31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__9_8js.html</anchorfile>
      <anchor>adacc1be8f603ebf5c42e1e7fa3bc2f7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MeshResources</type>
      <name>h</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__a_8js.html</anchorfile>
      <anchor>aee856cedb9ca1ef87afea9bb98455ffb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__a_8js.html</anchorfile>
      <anchor>adacc1be8f603ebf5c42e1e7fa3bc2f7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResultType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__c_8js.html</anchorfile>
      <anchor>a692c840eb262f27ed01bdb5582059b24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>class_type &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__d_8js.html</anchorfile>
      <anchor>a2ac8b753b3061218cf48cd24f7e08aa8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendingState &amp;</type>
      <name>gt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__e_8js.html</anchorfile>
      <anchor>a3714006878ea2574380080ef142a59c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PropertyType &amp;</type>
      <name>gt</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__e_8js.html</anchorfile>
      <anchor>aa84e4ac58e537cc0c9237d1461019b24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_f.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__f_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2all__f_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>all_f.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2all__f_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2all__f_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendingState &amp;</type>
      <name>gt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__8_8js.html</anchorfile>
      <anchor>a3714006878ea2574380080ef142a59c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourcePtr &amp;</type>
      <name>lt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__d_8js.html</anchorfile>
      <anchor>a9852de9e5b460c1d3bd5b6156940aeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T &amp;</type>
      <name>gt</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2classes__d_8js.html</anchorfile>
      <anchor>aed7a7f1f82df5fd3dd11622b2e8a0351</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>classes_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2classes__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2defines__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2defines__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2defines__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2defines__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enums__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enums__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enums__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enums__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enums__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enums__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enums__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enums__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enums_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enums__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enums__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2enumvalues__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2enumvalues__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enumvalues__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enumvalues__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enumvalues__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enumvalues__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enumvalues__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enumvalues__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enumvalues__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enumvalues__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumvalues_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>enumvalues__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>enumvalues__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2files__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2files__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2files__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2files__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2files__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2files__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2files__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2files__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2files__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>files_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2files__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2files__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DX11ConstantsMapper</type>
      <name>cpp</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__1_8js.html</anchorfile>
      <anchor>aeebfa45c57725b450045b1afaecfef2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2functions__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2functions__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2groups__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>groups_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2groups__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pages_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2pages__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2pages__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pages_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2pages__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2pages__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pages_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>pages__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>pages__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pages_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>pages__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>pages__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js</filename>
    <member kind="function">
      <type>function</type>
      <name>convertToId</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a196a29bd5a5ee7cd5b485e0753a49e57</anchor>
      <arglist>(search)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>getXPos</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a76d24aea0009f892f8ccc31d941c0a2b</anchor>
      <arglist>(item)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>getYPos</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a8d7b405228661d7b6216b6925d2b8a69</anchor>
      <arglist>(item)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>SearchBox</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a52066106482f8136aa9e0ec859e8188f</anchor>
      <arglist>(name, resultsPath, inFrame, label)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>SearchResults</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a9189b9f7a32b6bc78240f40348f7fe03</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>setKeyActions</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a98192fa2929bb8e4b0a890a4909ab9b2</anchor>
      <arglist>(elem, action)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>setClassAttr</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a499422fc054a5278ae32801ec0082c56</anchor>
      <arglist>(elem, attr)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>createResults</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a6b2c651120de3ed1dcf0d85341d51895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>init_search</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>ae95ec7d5d450d0a8d6928a594798aaf4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js</filename>
    <member kind="function">
      <type>function</type>
      <name>convertToId</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a196a29bd5a5ee7cd5b485e0753a49e57</anchor>
      <arglist>(search)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>getXPos</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a76d24aea0009f892f8ccc31d941c0a2b</anchor>
      <arglist>(item)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>getYPos</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a8d7b405228661d7b6216b6925d2b8a69</anchor>
      <arglist>(item)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>SearchBox</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a52066106482f8136aa9e0ec859e8188f</anchor>
      <arglist>(name, resultsPath, inFrame, label)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>SearchResults</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a9189b9f7a32b6bc78240f40348f7fe03</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>setKeyActions</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a98192fa2929bb8e4b0a890a4909ab9b2</anchor>
      <arglist>(elem, action)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>setClassAttr</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a499422fc054a5278ae32801ec0082c56</anchor>
      <arglist>(elem, attr)</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>createResults</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>a6b2c651120de3ed1dcf0d85341d51895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>function</type>
      <name>init_search</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2search_8js.html</anchorfile>
      <anchor>ae95ec7d5d450d0a8d6928a594798aaf4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>searchdata.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2searchdata_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionsWithContent</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a6250af3c9b54dee6efc5f55f40c78126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionNames</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a77149ceed055c6c6ce40973b5bdc19ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionLabels</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a529972e449c82dc118cbbd3bcf50c44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>searchdata.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2searchdata_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionsWithContent</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a6250af3c9b54dee6efc5f55f40c78126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionNames</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a77149ceed055c6c6ce40973b5bdc19ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>var</type>
      <name>indexSectionLabels</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2searchdata_8js.html</anchorfile>
      <anchor>a529972e449c82dc118cbbd3bcf50c44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_0.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__0_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__0_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_1.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__1_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__1_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_10.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__10_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__10_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_11.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__11_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__11_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_12.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__12_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__12_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_2.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__2_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__2_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_3.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__3_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__3_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_4.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__4_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__4_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_5.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__5_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__5_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_6.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__6_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__6_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_7.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__7_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__7_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_8.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__8_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__8_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_9.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__9_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__9_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_a.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__a_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__a_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_b.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__b_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__b_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_graphic_a_p_i_2_projects_dir_2_documentation_2html_2search_2variables__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_c.js</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Projects/Documentation/html/search/</path>
    <filename>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__c_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>sw_common_lib_2_projects_2_documentation_2html_2search_2variables__c_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_d.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__d_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__d_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_e.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__e_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__e_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>variables_f.js</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ProjectsDir/Documentation/html/search/</path>
    <filename>variables__f_8js</filename>
    <member kind="variable">
      <type>var</type>
      <name>searchData</name>
      <anchorfile>variables__f_8js.html</anchorfile>
      <anchor>ad01a7523f103d6242ef9b0451861231e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GraphicAPIConstants.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Rendering/</path>
    <filename>_graphic_a_p_i_constants_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>BlendOperation</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gaa69fa0568995455c90fac4766091faa8</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8aec211f7c20af43e742bf2570c3cb84f9">Add</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a1d9baf077ee87921f57a8fe42d510b65">Subtract</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8abd5458190996e76988cb2f27a820c685">ReverseSubtract</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a78d811e98514cd165dda532286610fd2">Min</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a6a061313d22e51e0f25b7cd4dc065233">Max</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendFactor</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gae31654a0e43bd4babae61897ea0e5100</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a2ad714e29d37896d79187312086bc6fe">SrcColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100afaedf511c99a5461048fd6a3b73da26c">DstColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad5c7b7f0102df3f7305c43f73fc3a498">SrcAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100af72dbe2436b38a39e5927ed644e6818b">DstAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a55f83129155916260b22240fef112752">BlendFactor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a57e4c4e7cb12a865a60d272d9adfc33b">InverseSrcColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a6217622f995a3ee912260f894f5f8a35">InverseDstColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100aa119ab34e2421efaa116f3d9cd49e880">InverseSrcAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad41caf09d26d4d092361d7703e26c594">InverseDstAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad98d1d89eac7776bf55cec8d0583b937">InverseBlendFactor</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CullMode</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gaddb56e6474b18716c1c05249740ec257</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FillMode</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gab46b9183b8f7ef078afdbf384003670d</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggab46b9183b8f7ef078afdbf384003670dae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggab46b9183b8f7ef078afdbf384003670da33e42d0f3b166a4c405127e4412fbef2">Wireframe</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceUsage</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>aaab6ea01a060fe01b9e4099338fb1db0</anchor>
      <arglist></arglist>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="aaab6ea01a060fe01b9e4099338fb1db0a7fa97eb8e3f1da664c84a27baf3956e4">RESOURCE_USAGE_DEFAULT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="aaab6ea01a060fe01b9e4099338fb1db0a533b87544a21c7cb5b9aea3683084273">RESOURCE_USAGE_DYNAMIC</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="aaab6ea01a060fe01b9e4099338fb1db0add9612467790276a699be1a4f087394d">RESOURCE_USAGE_STATIC</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="aaab6ea01a060fe01b9e4099338fb1db0ad948407f76639941d6bec76e4df72fbf">RESOURCE_USAGE_STAGING</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrimitiveTopology</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>a60c60d02172b780e9889ce22f7f3e039</anchor>
      <arglist></arglist>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039a1fbb1244e0c04aead1270640f45e8897">PRIMITIVE_TOPOLOGY_POINTLIST</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039a5e1204b7fe9cac47b3e806ec2ba9a502">PRIMITIVE_TOPOLOGY_LINELIST</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039abd2b023b21eeba62861408ba62be846a">PRIMITIVE_TOPOLOGY_LINESTRIP</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039a7b1ee69b2ec00cdb22eca8c2b1afb7bd">PRIMITIVE_TOPOLOGY_TRIANGLELIST</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039a80e03144397fb6b0ff264d258bf52239">PRIMITIVE_TOPOLOGY_TRIANGLESTRIP</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039aaa208320d30f004f3fb645c23f365f1a">PRIMITIVE_TOPOLOGY_LINELIST_ADJ</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039a6e30485ba1f8005ed94a55e255df0838">PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039acc567c0984612e9349297add2ae416d5">PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a60c60d02172b780e9889ce22f7f3e039abe443b6f64a86a345cb415dff8a19d49">PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceBinding</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>a1d28e5a00ccc44ac676439a30969c52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextureType</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>a28b6e6990e83d40971fa503ca0d06d1b</anchor>
      <arglist></arglist>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba48c506a96a40a894ec6be91121f52f4f">TEXTURE_TYPE_UNKNOW</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba06fc0e73842e2573b058c0ddd50e9e11">TEXTURE_TYPE_BUFFER</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1bafb1446f992c4faaf98288bfdde27d586">TEXTURE_TYPE_TEXTURE1D</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1bae602ff00e0ff24301aa788438790fbb3">TEXTURE_TYPE_TEXTURE1D_ARRAY</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba1889072d4af83c8cf8f1bd31a8ae1393">TEXTURE_TYPE_TEXTURE2D</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba6b799963943a1ec2f44d8f8c722db163">TEXTURE_TYPE_TEXTURE2D_ARRAY</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba50fc8782097dd00eab0bf59dff1f8c16">TEXTURE_TYPE_TEXTURE2D_MULTISAMPLE</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba3bde868d846cb7c4ba4d7573df0bf85b">TEXTURE_TYPE_TEXTURE2D_MULTISAMPLE_ARRAY</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a28b6e6990e83d40971fa503ca0d06d1ba8f2740bec60cf7551440254391297c44">TEXTURE_TYPE_TEXTURE3D</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DepthStencilFormat</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>af7f3010c3b208cb1bc1acdd50216bc05</anchor>
      <arglist></arglist>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="af7f3010c3b208cb1bc1acdd50216bc05a8a4f8e7c0a6336461453a69eff52cc01">DEPTH_STENCIL_FORMAT_D32_FLOAT_S8X24_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="af7f3010c3b208cb1bc1acdd50216bc05abeb0f83af776c167f29919b0b11dc4d2">DEPTH_STENCIL_FORMAT_D32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="af7f3010c3b208cb1bc1acdd50216bc05aaf6f853f17cf140d33c1578c26b750a6">DEPTH_STENCIL_FORMAT_D24_UNORM_S8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="af7f3010c3b208cb1bc1acdd50216bc05a275cd31ce09a49b41806b6e691e0f177">DEPTH_STENCIL_FORMAT_D16_UNORM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceFormat</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>a631103d0e79036235dcbdd27c0145ccb</anchor>
      <arglist></arglist>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba0a1a5215e6084519e1e5de772811e059">RESOURCE_FORMAT_UNKNOWN</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba73163fde0fe248d56ee71add0661b70a">RESOURCE_FORMAT_R32G32B32A32_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba182f96275d151d093366ac7fcd398877">RESOURCE_FORMAT_R32G32B32A32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba3abdfe5002ccf48bdded1c0fceeac3d9">RESOURCE_FORMAT_R32G32B32A32_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf76d41c86a86da6e42990a365c97df38">RESOURCE_FORMAT_R32G32B32A32_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba6384c1a1efcbd061a88c8f507acd1fa6">RESOURCE_FORMAT_R32G32B32_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba03c564c48e76ef74a696826c492d94b8">RESOURCE_FORMAT_R32G32B32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7d445b0ebb45481055c0bee374697567">RESOURCE_FORMAT_R32G32B32_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba985457c39a8512f7f33e656672b59169">RESOURCE_FORMAT_R32G32B32_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaef4469fae405f8475033cf235c08fb35">RESOURCE_FORMAT_R16G16B16A16_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf2798e692a69b7d7c2caf4483d13d505">RESOURCE_FORMAT_R16G16B16A16_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaee5f3d74ea710ba3e75f89b9a7b1bba1">RESOURCE_FORMAT_R16G16B16A16_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbac0c928b358a298be5b58b2eab7235ab0">RESOURCE_FORMAT_R16G16B16A16_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba6aaef137fbed8c1529a03eac679a53f0">RESOURCE_FORMAT_R16G16B16A16_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7935f23dfd6bf1c2acaf5663cc6e7272">RESOURCE_FORMAT_R16G16B16A16_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba8d6679a7d36defa75d2627809e4d5ccf">RESOURCE_FORMAT_R32G32_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf00cbb1cc5b3a978ad77f3b2b95e0d42">RESOURCE_FORMAT_R32G32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba22d549435086870c61132d75a043b5fe">RESOURCE_FORMAT_R32G32_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba12b7cd3b1bc2170a76b113fc8f249d55">RESOURCE_FORMAT_R32G32_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae6d78b990f1708cf20db4d0915c34cec">RESOURCE_FORMAT_R32G8X24_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9e9ff3fd58ad7e1163bc1640d3134f20">RESOURCE_FORMAT_D32_FLOAT_S8X24_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbace9265c0d0f647b72cf92fd12e55bfd4">RESOURCE_FORMAT_R32_FLOAT_X8X24_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba920b68cc283609dc7deb67c9d92580fa">RESOURCE_FORMAT_X32_TYPELESS_G8X24_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba2ee62665a4d324440f32506deefa392e">RESOURCE_FORMAT_R10G10B10A2_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf13d08d685e1b630a7b2bc9ff9b73df9">RESOURCE_FORMAT_R10G10B10A2_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab3a14882218db39171dcf5dcea712e16">RESOURCE_FORMAT_R10G10B10A2_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae9779f0f57c49ee597e7d8b3d1f1218e">RESOURCE_FORMAT_R11G11B10_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba96e18d87c0fd6e0082b01edc36630376">RESOURCE_FORMAT_R8G8B8A8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba1055982dffa6e15aadd8b32bf85b9819">RESOURCE_FORMAT_R8G8B8A8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbad58b7fa0d57f6612e6733400b70d9d0c">RESOURCE_FORMAT_R8G8B8A8_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab04317e2604ce097bfc86f632daec4c9">RESOURCE_FORMAT_R8G8B8A8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9a96272c2ef74b7d5da6bf542bafaa08">RESOURCE_FORMAT_R8G8B8A8_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbadc7cfcc37a0b4ad46c093f3ca7e51449">RESOURCE_FORMAT_R8G8B8A8_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba3448f635d29b9a1c7c6babce9e86d936">RESOURCE_FORMAT_R16G16_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9409ebc5de95961c8272dc2fc5816042">RESOURCE_FORMAT_R16G16_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba1e2a39eedfd58a678f597c81b3863580">RESOURCE_FORMAT_R16G16_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba943937a56e018799eee09174462ae3fd">RESOURCE_FORMAT_R16G16_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba31c0b6f12ae7b92bfd55c2e960f387fd">RESOURCE_FORMAT_R16G16_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf8f30ce49ac90e58c9268575b2308c47">RESOURCE_FORMAT_R16G16_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbad4e7123fe06dd0c09b11424fb0bca738">RESOURCE_FORMAT_R32_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab6924900da52aad35ed40105ec1d32d7">RESOURCE_FORMAT_D32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba2b6e4659a05fe45f5b85d1369cded16c">RESOURCE_FORMAT_R32_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba13e9c47abf85f8dc6341544f15c9a808">RESOURCE_FORMAT_R32_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba3fe1b11f2eea1d8286d0257dfaac10be">RESOURCE_FORMAT_R32_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba82a42f9b0900df2204ada50d222e2a40">RESOURCE_FORMAT_R24G8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba611a66431643ee14b2228b1df0719faa">RESOURCE_FORMAT_D24_UNORM_S8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba122e89afa41391fcab77c550e0b56ca0">RESOURCE_FORMAT_R24_UNORM_X8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba049e3bf4596ce9448039309159997a3f">RESOURCE_FORMAT_X24_TYPELESS_G8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba0c7f4f6d1365c5dcc33faecc4f9959be">RESOURCE_FORMAT_R8G8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaab68773785a4a309e6cd631533eb647a">RESOURCE_FORMAT_R8G8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba69fbbd17614d3caf3ae6c0b45ad98255">RESOURCE_FORMAT_R8G8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbacd5ac8f467b963e057e108a12dcd8d1a">RESOURCE_FORMAT_R8G8_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab19c006b09e335ade6f6c0dffc2ebf57">RESOURCE_FORMAT_R8G8_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba519edf8c8a696c19b6fc9741ab03154d">RESOURCE_FORMAT_R16_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba66887933436f6cddabfb58405f873313">RESOURCE_FORMAT_R16_FLOAT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7fe73b755d1d8eab3bbfc0d9c1fc731a">RESOURCE_FORMAT_D16_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9f9470e03cf160b4bd9fb713d33ac42d">RESOURCE_FORMAT_R16_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba964ff76e65392c941132341d1bb2afbe">RESOURCE_FORMAT_R16_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba5c414679b589d9c1283d85432887c90e">RESOURCE_FORMAT_R16_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba1ff04f67127c54ba349f839d6628748e">RESOURCE_FORMAT_R16_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba97d5466a36c6a9c177a5358e746dfaf7">RESOURCE_FORMAT_R8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae24af3cd8367deed02aae3adb0fc1b47">RESOURCE_FORMAT_R8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab2d342eab1e45191e5abdf457fcbe452">RESOURCE_FORMAT_R8_UINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaa846ddd122e172d7ed64204236f9d7fb">RESOURCE_FORMAT_R8_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaec5ad71867946412be9d48905db915b6">RESOURCE_FORMAT_R8_SINT</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaead0cceffc761ebe5d368c240e742bfb">RESOURCE_FORMAT_A8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbad57026d91a70d6f9fee2dfd1cf3ade6a">RESOURCE_FORMAT_R1_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba8c8bd2fc4a5e847c8c219970bc2a60eb">RESOURCE_FORMAT_R9G9B9E5_SHAREDEXP</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba68bf05dd6de94e31004f5eaeb8b0335b">RESOURCE_FORMAT_R8G8_B8G8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba25f9d56799d88d2fcd9e91d0c97d9916">RESOURCE_FORMAT_G8R8_G8B8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba904f8c5e385fdbd0a75a741dcced156f">RESOURCE_FORMAT_BC1_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba79d6ae921a794d3c04af53d6481f16aa">RESOURCE_FORMAT_BC1_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba75c5a3792db5650dfb398761c7c7f520">RESOURCE_FORMAT_BC1_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7982e35d70afd3ea6b7d36359febd6bb">RESOURCE_FORMAT_BC2_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba2260e11c6c3656ceb01d2506bee68a0c">RESOURCE_FORMAT_BC2_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba2c9ed36f71392bcae34b2c9ccb32d460">RESOURCE_FORMAT_BC2_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaa76bc344b41a4643d006e38fcaf53e9e">RESOURCE_FORMAT_BC3_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba050b0cbbe98eecd9654f2652a0d6cb9a">RESOURCE_FORMAT_BC3_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbac7b4b831e204ee56c199643b71243287">RESOURCE_FORMAT_BC3_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba05c288429d8701e016ceadfb5f6f95e9">RESOURCE_FORMAT_BC4_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae12b322c0841e0316b549a5882fe961b">RESOURCE_FORMAT_BC4_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba292243d6f5926105b8250ed824f7a8b3">RESOURCE_FORMAT_BC4_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9e19b567c94777b4ddfc96f5cb26de4c">RESOURCE_FORMAT_BC5_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba446b103862e6f4077eb7084be3905436">RESOURCE_FORMAT_BC5_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaef8ccc940059105107c514e9e44f806a">RESOURCE_FORMAT_BC5_SNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba972fa2171b45ff203bce1d5de7d8c19c">RESOURCE_FORMAT_B5G6R5_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba58ff8342cf418639e765cbbf286a7dee">RESOURCE_FORMAT_B5G5R5A1_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba55cff3efc5e9a7adee011c2f3817031d">RESOURCE_FORMAT_B8G8R8A8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba6e3154b558af3facf30f95d214de6d0e">RESOURCE_FORMAT_B8G8R8X8_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab18da4a247739a24aa5021f9e51fa043">RESOURCE_FORMAT_R10G10B10_XR_BIAS_A2_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba4cd1f06de274bd63c0262bb5399d7ed6">RESOURCE_FORMAT_B8G8R8A8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7c88c4182efbf9b0b45e6c692f0f7f30">RESOURCE_FORMAT_B8G8R8A8_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbab164629a2685baaf2546cac7d52fb13e">RESOURCE_FORMAT_B8G8R8X8_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9a3fb182dda720f875b9603cd6f8a1f1">RESOURCE_FORMAT_B8G8R8X8_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbabc43b5f28697a257333a109742d86af2">RESOURCE_FORMAT_BC6H_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae4ca4a27e9c14784ff57f78883e40b89">RESOURCE_FORMAT_BC6H_UF16</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba8d987c8b209a812b6be129080dee1dd5">RESOURCE_FORMAT_BC6H_SF16</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba75e49ae15307946228ccb595956ddf91">RESOURCE_FORMAT_BC7_TYPELESS</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba16d03b6a9e52ef14c0851a4920608d51">RESOURCE_FORMAT_BC7_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaba71a7d3a3fb292f36c7f95d0c1db4a7">RESOURCE_FORMAT_BC7_UNORM_SRGB</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba2c89864469c3d12213fb8f21ff6bc54e">RESOURCE_FORMAT_AYUV</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaf073a5d8eb5801d8cd0655089264c5c0">RESOURCE_FORMAT_Y410</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba0d25665f7ef26785f17f73c13afa01cf">RESOURCE_FORMAT_Y416</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba11d0b50deb30e7579adef8bd4cd906a2">RESOURCE_FORMAT_NV12</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba32375203436a8418701502d70aa3f3c7">RESOURCE_FORMAT_P010</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba6f37685a139abd4f2a8a96dbf22b7f29">RESOURCE_FORMAT_P016</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba3aa542e7a63fee43c96b1ef75e4138ed">RESOURCE_FORMAT_420_OPAQUE</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbabf13c668a695215d72bd4a4b50925b55">RESOURCE_FORMAT_YUY2</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaad2a8d36918e42fa36454b83b3de87a5">RESOURCE_FORMAT_Y210</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbac03a6141f26d7bd8557bd8b15a4ba236">RESOURCE_FORMAT_Y216</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbaec294dbe86501c9bd955d3a9894cdc92">RESOURCE_FORMAT_NV11</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba21f23b4a76c8b3c438139caca3aa5703">RESOURCE_FORMAT_AI44</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbac50afde37a15ddef2942ef94ac935d43">RESOURCE_FORMAT_IA44</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba6f66dedf9c60db4fe5c8e93cf5e93f0e">RESOURCE_FORMAT_P8</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba911ec8eb0913d63dfa32221f7748bb43">RESOURCE_FORMAT_A8P8</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba9328e363e8ecb5f55f24009654a23170">RESOURCE_FORMAT_B4G4R4A4_UNORM</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba4afc4489f191229cee7455c87e92be3d">RESOURCE_FORMAT_P208</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccbae3758cf3055933538fa74d2240de1496">RESOURCE_FORMAT_V208</enumvalue>
      <enumvalue file="_graphic_a_p_i_constants_8h.html" anchor="a631103d0e79036235dcbdd27c0145ccba7617501289f76008215fb40fdfb8e04d">RESOURCE_FORMAT_V408</enumvalue>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>BitsPerPixel</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>a40072203d231fd9a862cfd74f8809584</anchor>
      <arglist>(ResourceFormat fmt)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>BytesPerPixel</name>
      <anchorfile>_graphic_a_p_i_constants_8h.html</anchorfile>
      <anchor>ab35084c4b33809591ee6ea7b69e1ee04</anchor>
      <arglist>(ResourceFormat fmt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IGraphicAPIInitializer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Rendering/</path>
    <filename>_i_graphic_a_p_i_initializer_8h</filename>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">swGraphicAPI/Rendering/IRenderer.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="struct">SwapChainInitData</class>
    <class kind="struct">GraphicAPIInitData</class>
    <class kind="class">IGraphicAPIInitializer</class>
  </compound>
  <compound kind="file">
    <name>IRenderer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Rendering/</path>
    <filename>_i_renderer_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_render_commands_8h" name="RenderCommands.h" local="yes" imported="no">RenderCommands.h</includes>
    <class kind="class">IRenderer</class>
    <member kind="enumeration">
      <type></type>
      <name>RendererUsage</name>
      <anchorfile>_i_renderer_8h.html</anchorfile>
      <anchor>a638079122796f5eb96dac10b81adf650</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RenderCommands.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Rendering/</path>
    <filename>_render_commands_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <class kind="struct">RendererCommand</class>
    <class kind="struct">SetRenderTargetCommand</class>
    <class kind="struct">ViewportInfo</class>
    <class kind="struct">ScissorRectInfo</class>
    <class kind="struct">SetRenderTargetExCommand</class>
    <class kind="struct">ClearRenderTargetCommand</class>
    <class kind="struct">DrawCommand</class>
    <class kind="struct">DrawInstancedCommand</class>
    <class kind="struct">SetShaderStateCommand</class>
    <class kind="struct">SetShaderStateExCommand</class>
    <class kind="struct">SetDefaultBuffersCommand</class>
    <class kind="struct">SetRenderStateCommand</class>
    <class kind="struct">SetRenderStateExCommand</class>
    <class kind="struct">CopyTextureCommand</class>
    <class kind="struct">BindBufferCommand</class>
    <class kind="struct">UpdateBufferCommand</class>
    <class kind="struct">UpdateBindBuffer</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BOUND_RENDER_TARGETS</name>
      <anchorfile>_render_commands_8h.html</anchorfile>
      <anchor>a76b7d58c8abecc62a14b4ce89638d90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENGINE_MAX_TEXTURES</name>
      <anchorfile>_render_commands_8h.html</anchorfile>
      <anchor>a36f190ee08b08696d7e8d0277e366ebb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourceContainer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ResourceManager/</path>
    <filename>_resource_container_8h</filename>
    <includes id="_resource_ptr_8h" name="ResourcePtr.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcePtr.h</includes>
    <class kind="class">ResourceContainer</class>
  </compound>
  <compound kind="file">
    <name>ResourceManager.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ResourceManager/</path>
    <filename>_resource_manager_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_resource_manager_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/ResourceManager/stdafx.h</includes>
    <includes id="_resource_manager_8h" name="ResourceManager.h" local="yes" imported="no">ResourceManager.h</includes>
    <includes id="_object_deleter_8h" name="ObjectDeleter.h" local="yes" imported="no">swCommonLib/Common/ObjectDeleter.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">swCommonLib/System/Path.h</includes>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
  </compound>
  <compound kind="file">
    <name>ResourceManager.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ResourceManager/</path>
    <filename>_resource_manager_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_resource_container_8h" name="ResourceContainer.h" local="yes" imported="no">swGraphicAPI/ResourceManager/ResourceContainer.h</includes>
    <class kind="class">ResourceManager</class>
  </compound>
  <compound kind="file">
    <name>BlendingState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_blending_state_8h</filename>
    <includes id="_object_deleter_8h" name="ObjectDeleter.h" local="yes" imported="no">swCommonLib/Common/ObjectDeleter.h</includes>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">ResourceObject.h</includes>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <class kind="struct">BlendingInfo</class>
    <class kind="class">BlendingState</class>
    <member kind="define">
      <type>#define</type>
      <name>Compare</name>
      <anchorfile>_blending_state_8h.html</anchorfile>
      <anchor>af955905f62ffb3afb8743d4d61324186</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BufferInitData.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_buffer_init_data_8h</filename>
    <includes id="_memory_chunk_8h" name="MemoryChunk.h" local="yes" imported="no">swCommonLib/Common/MemoryChunk.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <includes id="_i_buffer_8h" name="IBuffer.h" local="yes" imported="no">swGraphicAPI/Resources/IBuffer.h</includes>
    <class kind="struct">BufferInitData</class>
    <class kind="struct">ConstantBufferInitData</class>
    <class kind="struct">VertexBufferInitData</class>
    <class kind="struct">IndexBufferInitData</class>
  </compound>
  <compound kind="file">
    <name>DepthStencilState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_depth_stencil_state_8h</filename>
    <includes id="_object_deleter_8h" name="ObjectDeleter.h" local="yes" imported="no">swCommonLib/Common/ObjectDeleter.h</includes>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">ResourceObject.h</includes>
    <class kind="struct">DepthStencilInfo</class>
    <class kind="class">DepthStencilState</class>
    <member kind="define">
      <type>#define</type>
      <name>Compare</name>
      <anchorfile>_depth_stencil_state_8h.html</anchorfile>
      <anchor>af955905f62ffb3afb8743d4d61324186</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IBuffer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_i_buffer_8h</filename>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">swGraphicAPI/Resources/ResourceObject.h</includes>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <includes id="_resource_ptr_8h" name="ResourcePtr.h" local="yes" imported="no">ResourcePtr.h</includes>
    <includes id="_memory_chunk_8h" name="MemoryChunk.h" local="yes" imported="no">swCommonLib/Common/MemoryChunk.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">swCommonLib/System/Path.h</includes>
    <class kind="struct">BufferInfo</class>
    <class kind="class">IBuffer</class>
    <member kind="enumeration">
      <type></type>
      <name>BufferType</name>
      <anchorfile>group___buffers.html</anchorfile>
      <anchor>ga91d75476132b7df9aec66b0affb6a44a</anchor>
      <arglist></arglist>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aa10461f19cdb5aadba2fc9986be6400bd">VertexBuffer</enumvalue>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aa7c3895116254ff0417e58b6286de27c0">IndexBuffer</enumvalue>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aaf09d0dd3c08eeabc5b432609f31d0a8c">ConstantBuffer</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>IRenderTarget.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_i_render_target_8h</filename>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">ResourceObject.h</includes>
    <class kind="class">IRenderTarget</class>
  </compound>
  <compound kind="file">
    <name>IShader.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_i_shader_8h</filename>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">swGraphicAPI/Resources/ResourceObject.h</includes>
    <class kind="class">IShader</class>
  </compound>
  <compound kind="file">
    <name>IShaderInputLayout.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_i_shader_input_layout_8h</filename>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">swGraphicAPI/Resources/ResourceObject.h</includes>
    <class kind="class">IShaderInputLayout</class>
  </compound>
  <compound kind="file">
    <name>MeshResources.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_mesh_resources_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_resource_manager_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/ResourceManager/stdafx.h</includes>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">RasterizerState.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">DepthStencilState.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>abbf459f1bf78b0534fe24ff099bc36c2</anchor>
      <arglist>(&quot;Height&quot;,&amp;TextureInfo::GetHeight).property_readonly(&quot;ArraySize&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a76c6061f419558c36214e9bfe10b60c1</anchor>
      <arglist>(&quot;CPUReadable&quot;,&amp;TextureInfo::IsCPUReadable).property_readonly(&quot;CPUWritable&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize &amp;TextureInfo::IsCPUWriteable</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>af57b69d687c128cd99549fb32495cd5d</anchor>
      <arglist>(&quot;SharedResource&quot;,&amp;TextureInfo::IsSharedResource).property_readonly(&quot;CubeMap&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize &amp;TextureInfo::IsCPUWriteable &amp;TextureInfo::IsCubeMapTex</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>aabab5803bcd1a721655bd2aaef1f45bb</anchor>
      <arglist>(&quot;GeneratedMipMaps&quot;,&amp;TextureInfo::GenMipMaps).property_readonly(&quot;TextureType&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize &amp;TextureInfo::IsCPUWriteable &amp;TextureInfo::IsCubeMapTex &amp;TextureInfo::TextureType</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>ad87a95e08e82fc803a10c3af2a4c5e40</anchor>
      <arglist>(&quot;Usage&quot;,&amp;TextureInfo::Usage).property_readonly(&quot;Format&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize &amp;TextureInfo::IsCPUWriteable &amp;TextureInfo::IsCubeMapTex &amp;TextureInfo::TextureType &amp;TextureInfo::Format</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>aacdeb195b2802691da8a38ac72db0332</anchor>
      <arglist>(&quot;MipMapFilter&quot;,&amp;TextureInfo::MipMapFilter).property_readonly(&quot;MipMapsLevels&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;TextureInfo::GetWidth &amp;TextureInfo::GetArraySize &amp;TextureInfo::IsCPUWriteable &amp;TextureInfo::IsCubeMapTex &amp;TextureInfo::TextureType &amp;TextureInfo::Format &amp;TextureInfo::GetMipLevels</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>ac15faa91c173f29ae0631922c5aa4d0b</anchor>
      <arglist>(&quot;FilePath&quot;,&amp;TextureInfo::GetPath)</arglist>
    </member>
    <member kind="function">
      <type>&amp;BlendingInfo::CustomBlendFactor BIND_AS_PTR</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>af6c3eb72fb82ea1b59b1ed79dbb75e5f</anchor>
      <arglist>(&quot;EnableBlending&quot;,&amp;BlendingInfo::EnableBlending).property_readonly(&quot;ColorOperation&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BlendingInfo::CustomBlendFactor BIND_AS_PTR &amp;BlendingInfo::ColorOperation</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a543893d07010407aa6f8a657850984a0</anchor>
      <arglist>(&quot;AlphaOperation&quot;,&amp;BlendingInfo::AlphaOperation).property_readonly(&quot;SrcColorBlend&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BlendingInfo::CustomBlendFactor BIND_AS_PTR &amp;BlendingInfo::ColorOperation &amp;BlendingInfo::SrcColorBlend</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a22369d627b5ccca072a6d66dcc4f8e10</anchor>
      <arglist>(&quot;DstColorBlend&quot;,&amp;BlendingInfo::DstColorBlend).property_readonly(&quot;SrcAlphaBlend&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BlendingInfo::CustomBlendFactor BIND_AS_PTR &amp;BlendingInfo::ColorOperation &amp;BlendingInfo::SrcColorBlend &amp;BlendingInfo::SrcAlphaBlend</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a292a8d294a9540375bdd5ba4ec38b830</anchor>
      <arglist>(&quot;DstAlphaBlend&quot;,&amp;BlendingInfo::DstAlphaBlend)</arglist>
    </member>
    <member kind="function">
      <type>&amp;RasterizerStateInfo::CullMode</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>af2836617989b6a223ab3b843ddec3789</anchor>
      <arglist>(&quot;FillMode&quot;,&amp;RasterizerStateInfo::FillMode).property_readonly(&quot;IsClockwise&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;RasterizerStateInfo::CullMode &amp;RasterizerStateInfo::IsClockwise</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a04961652a949e8e49b853a1a0f90f138</anchor>
      <arglist>(&quot;EnableScissor&quot;,&amp;RasterizerStateInfo::EnableScissor).property_readonly(&quot;EnableZClipping&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;RasterizerStateInfo::CullMode &amp;RasterizerStateInfo::IsClockwise &amp;RasterizerStateInfo::EnableZClipping</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a5fec7530d3847c90ece21ea59b1d7c0d</anchor>
      <arglist>(&quot;ConservativeRaserizer&quot;,&amp;RasterizerStateInfo::ConservativeRasterizer).property_readonly(&quot;DepthBias&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;DepthStencilInfo::EnableDepthTest</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a5b457620ba2db7baee00fdbd59618390</anchor>
      <arglist>(&quot;EnableStencilTest&quot;,&amp;DepthStencilInfo::EnableStencilTest)</arglist>
    </member>
    <member kind="function">
      <type>&amp;BufferInfo::GetName</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>abb6f147dc38610293e4634f5b8f95b2d</anchor>
      <arglist>(&quot;NumberElements&quot;,&amp;BufferInfo::NumElements).property_readonly(&quot;ElementSize&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BufferInfo::GetName &amp;BufferInfo::ElementSize</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a8600d426d24dbe0d911c402f35c29042</anchor>
      <arglist>(&quot;Usage&quot;,&amp;BufferInfo::Usage).property_readonly(&quot;BufferType&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BufferInfo::GetName &amp;BufferInfo::ElementSize &amp;BufferInfo::BufferType</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a5df4da97c2a784a882e0c4cebe086e3f</anchor>
      <arglist>(&quot;Topology&quot;,&amp;BufferInfo::Topology).property_readonly(&quot;4 Bytes Index Size&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;BufferInfo::GetName &amp;BufferInfo::ElementSize &amp;BufferInfo::BufferType &amp;BufferInfo::Use4BytesIndex</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a7e5c101eb727728a3abe2cf6995ebf09</anchor>
      <arglist>(&quot;VertexLayout&quot;,&amp;BufferInfo::VertexLayout)</arglist>
    </member>
    <member kind="function">
      <type>&amp;IShader::GetShaderFile</type>
      <name>property_readonly</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a87742d14a41c61193e3d5b908e090db3</anchor>
      <arglist>(&quot;MainFunction&quot;,&amp;IShader::GetShaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>&amp;RenderTargetObject::m_colorBuffer</type>
      <name>property</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a0c42e91ed29efb489adfdbed9e301669</anchor>
      <arglist>(&quot;DepthBuffer&quot;,&amp;RenderTargetObject::m_depthBuffer).property(&quot;StencilBuffer&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;MaterialObject::Diffuse BIND_AS_PTR</type>
      <name>property</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a9e499d687972ef37400485a48a748f9d</anchor>
      <arglist>(&quot;Specular&quot;,&amp;MaterialObject::Specular) BIND_AS_PTR.property(&quot;Ambient&quot;</arglist>
    </member>
    <member kind="function">
      <type>&amp;MaterialObject::Diffuse BIND_AS_PTR &amp;MaterialObject::Ambient BIND_AS_PTR</type>
      <name>property</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a2cd59a4784878f9b8d31372ac7e99fab</anchor>
      <arglist>(&quot;Emissive&quot;,&amp;MaterialObject::Emissive) BIND_AS_PTR.property(&quot;SpecularPower&quot;</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&amp;TextureObject::GetDescriptor</type>
      <name>BIND_AS_PTR</name>
      <anchorfile>_mesh_resources_8cpp.html</anchorfile>
      <anchor>a7ff341998b8e53a6f2d7c2d0de6dbd23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MeshResources.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_mesh_resources_8h</filename>
    <includes id="_object_deleter_8h" name="ObjectDeleter.h" local="yes" imported="no">swCommonLib/Common/ObjectDeleter.h</includes>
    <includes id="_path_8h" name="Path.h" local="yes" imported="no">swCommonLib/System/Path.h</includes>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">swGraphicAPI/Resources/ResourceObject.h</includes>
    <includes id="_i_shader_8h" name="IShader.h" local="yes" imported="no">swGraphicAPI/Resources/IShader.h</includes>
    <includes id="_i_buffer_8h" name="IBuffer.h" local="yes" imported="no">swGraphicAPI/Resources/IBuffer.h</includes>
    <includes id="_i_render_target_8h" name="IRenderTarget.h" local="yes" imported="no">swGraphicAPI/Resources/IRenderTarget.h</includes>
    <includes id="_i_shader_input_layout_8h" name="IShaderInputLayout.h" local="yes" imported="no">swGraphicAPI/Resources/IShaderInputLayout.h</includes>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <includes id="_resource_ptr_8h" name="ResourcePtr.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcePtr.h</includes>
    <includes id="_buffer_init_data_8h" name="BufferInitData.h" local="yes" imported="no">swGraphicAPI/Resources/BufferInitData.h</includes>
    <class kind="struct">TextureInfo</class>
    <class kind="class">TextureObject</class>
    <class kind="struct">RenderTargetDescriptor</class>
    <class kind="class">RenderTargetObject</class>
    <class kind="class">ShaderInputLayout</class>
    <class kind="class">InputLayoutDescriptor</class>
    <class kind="class">VertexShader</class>
    <class kind="class">PixelShader</class>
    <class kind="class">GeometryShader</class>
    <class kind="class">ControlShader</class>
    <class kind="class">EvaluationShader</class>
    <class kind="class">ComputeShader</class>
    <class kind="class">BufferObject</class>
    <class kind="struct">MaterialObject</class>
    <member kind="define">
      <type>#define</type>
      <name>WRONG_ID</name>
      <anchorfile>_mesh_resources_8h.html</anchorfile>
      <anchor>a0429535275068adae77d61a7913e11dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16</type>
      <name>Index16</name>
      <anchorfile>_mesh_resources_8h.html</anchorfile>
      <anchor>ac41ab2ef108db7ba41aa23a2c1bc63d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32</type>
      <name>Index32</name>
      <anchorfile>_mesh_resources_8h.html</anchorfile>
      <anchor>a49bcb23c06da6cb3ba871696f867f1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8</type>
      <name>Index8</name>
      <anchorfile>_mesh_resources_8h.html</anchorfile>
      <anchor>a84ba47eef7ae345dfe37b1971ac8df2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextureUse</name>
      <anchorfile>group___textures.html</anchorfile>
      <anchor>ga48164fb43b28aacf28ac6403bc1003be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MipMapFilter</name>
      <anchorfile>group___textures.html</anchorfile>
      <anchor>ga8bb430fac555470e0ba6d3140a26ca0d</anchor>
      <arglist></arglist>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da3cfce651e667ab85486dd42a8185f98a">Box</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dac751af30f7a031f44487914a272540ad">Tent</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da999a06f28346262ef9e1699d9fc1ab56">Bell</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dad21669aa5b1d32ab6e8965d28bcee72b">bSpline</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da8c676a88df49c6e1127bb3bf7a4eeb5e">Mitchell</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da4f7171cd515d80506104b31c05977294">Lanczos3</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dab3935d5829173f20d58fc5f0405867b9">Blackman</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dac0d14107380ce2a03f801c68a8eba286">Lanczos4</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da9a4c00e787f3250ecac5103939747f01">Lanczos6</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da240cd84e8f070bf530039e635a5e9c33">Lanczos12</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0daec0971fb900874b1c59179d9cd336878">Kaiser</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dafedf7ba6075fb5526a7ace0b9385528d">Gaussian</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da49527946e8d43cb5dc90935f68c53d79">Catmullrom</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da581d00b49c44d776adf618b708c07bc5">QuadraticInterpolation</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da63f6604adf1c32c5804dd6c3ae443010">QuadraticAproximation</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da4143c2f53e5f3977bb2baa975a9c0322">QuadraticMix</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShaderType</name>
      <anchorfile>group___shaders.html</anchorfile>
      <anchor>gaf29b077bc60383fffd088d7be6b682eb</anchor>
      <arglist></arglist>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682ebaeb3ca4dac3e206977e0b7d998eefcc33">VertexShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba54d3d36aabc3abac323576e3d22a3d2c">PixelShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba87fd5b66e314d52345d46590e7124805">GeometryShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682ebae114a7addc54ad55b1d599401ceca58f">TesselationControlShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba2de8d46352f51005bae9f2a120d54ada">TesselationEvaluationShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba2216355d14abbc1a80dadd4f881c0f39">ComputeShader</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>RasterizerState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_rasterizer_state_8h</filename>
    <includes id="_object_deleter_8h" name="ObjectDeleter.h" local="yes" imported="no">swCommonLib/Common/ObjectDeleter.h</includes>
    <includes id="_resource_object_8h" name="ResourceObject.h" local="yes" imported="no">ResourceObject.h</includes>
    <class kind="struct">RasterizerStateInfo</class>
    <class kind="class">RasterizerState</class>
    <member kind="define">
      <type>#define</type>
      <name>Compare</name>
      <anchorfile>_rasterizer_state_8h.html</anchorfile>
      <anchor>af955905f62ffb3afb8743d4d61324186</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourceObject.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_resource_object_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <class kind="class">ResourceObject</class>
  </compound>
  <compound kind="file">
    <name>ResourcePtr.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_resource_ptr_8h</filename>
    <class kind="class">ResourcePtr</class>
    <class kind="struct">rttr::wrapper_mapper&lt; ResourcePtr&lt; T &gt; &gt;</class>
    <namespace>rttr</namespace>
  </compound>
  <compound kind="file">
    <name>ResourcesFactory.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_resources_factory_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <class kind="class">ResourcesFactory</class>
  </compound>
  <compound kind="file">
    <name>SwapChain.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/Resources/</path>
    <filename>_swap_chain_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <class kind="struct">SwapChainDescriptor</class>
    <class kind="class">SwapChain</class>
    <member kind="typedef">
      <type>void *</type>
      <name>WindowHandler</name>
      <anchorfile>_swap_chain_8h.html</anchorfile>
      <anchor>a8b17f2eefac2c1d54b9deccf97b1ee2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DockPanel.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_dock_panel_8cpp</filename>
    <includes id="_dock_panel_8h" name="DockPanel.h" local="yes" imported="no">DockPanel.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_dock_panel_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DockPanel.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_dock_panel_8h</filename>
    <includes id="_i_panel_8h" name="IPanel.h" local="yes" imported="no">IPanel.h</includes>
    <class kind="class">sw::gui::DockPanel</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Grid.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_grid_8cpp</filename>
    <includes id="_grid_8h" name="Grid.h" local="yes" imported="no">Grid.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_grid_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Grid.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_grid_8h</filename>
    <includes id="_i_panel_8h" name="IPanel.h" local="yes" imported="no">IPanel.h</includes>
    <class kind="class">sw::gui::Grid</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>IPanel.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_i_panel_8cpp</filename>
    <includes id="_i_panel_8h" name="IPanel.h" local="yes" imported="no">IPanel.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_i_panel_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IPanel.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_i_panel_8h</filename>
    <includes id="_i_control_8h" name="IControl.h" local="yes" imported="no">swGUI/Core/Controls/IControl.h</includes>
    <class kind="class">sw::gui::IPanel</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>StackPanel.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_stack_panel_8cpp</filename>
    <includes id="_stack_panel_8h" name="StackPanel.h" local="yes" imported="no">StackPanel.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_stack_panel_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StackPanel.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_stack_panel_8h</filename>
    <includes id="_i_panel_8h" name="IPanel.h" local="yes" imported="no">IPanel.h</includes>
    <class kind="class">sw::gui::StackPanel</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>WrapPanel.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_wrap_panel_8cpp</filename>
    <includes id="_wrap_panel_8h" name="WrapPanel.h" local="yes" imported="no">WrapPanel.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_wrap_panel_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WrapPanel.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/ArrangeControls/</path>
    <filename>_wrap_panel_8h</filename>
    <includes id="_i_panel_8h" name="IPanel.h" local="yes" imported="no">IPanel.h</includes>
    <class kind="class">sw::gui::WrapPanel</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>IControl.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_i_control_8cpp</filename>
    <includes id="_i_control_8h" name="IControl.h" local="yes" imported="no">IControl.h</includes>
    <includes id="_top_level_control_8h" name="TopLevelControl.h" local="yes" imported="no">swGUI/Core/Controls/TopLevelControl.h</includes>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">swGUI/Core/System/HostWindow.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; sw::gui::TopLevelControl &gt;</name>
      <anchorfile>_i_control_8cpp.html</anchorfile>
      <anchor>a50b7c626a4ccc4924b12a6829c68dd63</anchor>
      <arglist>(&quot;sw::gui::TopLevelControl&quot;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_i_control_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IControl.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_i_control_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_common_types_8h" name="CommonTypes.h" local="yes" imported="no">swGUI/Core/System/CommonTypes/CommonTypes.h</includes>
    <class kind="class">sw::gui::IControl</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="enumeration">
      <type></type>
      <name>VerticalAlignment</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ae4bd851f5294af74424e1b38da78891d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891da2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891da4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891dafbb09a82eafab60150d0996e8fe46560">Stretch</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891daa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HorizontalAlignment</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>afeec79e118f1af5b0927a26ae571679d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679dafbb09a82eafab60150d0996e8fe46560">Stretch</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>TopLevelControl.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_top_level_control_8h</filename>
    <includes id="_i_control_8h" name="IControl.h" local="yes" imported="no">IControl.h</includes>
    <class kind="class">sw::gui::TopLevelControl</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>UIElement.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_u_i_element_8cpp</filename>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">UIElement.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; sw::gui::Visual &gt;</name>
      <anchorfile>_u_i_element_8cpp.html</anchorfile>
      <anchor>a72a2630472cd9bf7a205d33e738b2554</anchor>
      <arglist>(&quot;sw::gui::Visual&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rttr::registration::class_&lt; sw::gui::UIElement &gt;</name>
      <anchorfile>_u_i_element_8cpp.html</anchorfile>
      <anchor>a3f9f5abaee9f82cb55a6378ca7e46995</anchor>
      <arglist>(&quot;sw::gui::UIElement&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a0f40252ef55ec1e0a9576a63a11dd1c7</anchor>
      <arglist>(PreviewMouseUp, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abf37a2eb9724bb28aaff6bc45bac6dfd</anchor>
      <arglist>(PreviewMouseDown, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a00da58219d09cc55d410edc09213e929</anchor>
      <arglist>(PreviewMouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5463ea9bc029b3f1e7bdc6bdcc04e18b</anchor>
      <arglist>(PreviewMouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aefe8035e7a0e196c1d863b12415ac9ea</anchor>
      <arglist>(PreviewMouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>addf00c4631fbb0f887d06daf4d8475d2</anchor>
      <arglist>(PreviewMouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a65f21bb9b1d713222840f24e20220112</anchor>
      <arglist>(PreviewMouseWheel, RoutingStrategy::Tunnel, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5e8099116f7a12a991d21ce5c319674a</anchor>
      <arglist>(PreviewMouseMove, RoutingStrategy::Tunnel, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ab954ae36bd57957f8e0af4522907f794</anchor>
      <arglist>(PreviewKeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ae37d3fff49a0f4aec16596d6fec8338a</anchor>
      <arglist>(PreviewKeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aea5dc3c50fa04d2c6ce64119c0cc6a58</anchor>
      <arglist>(MouseUp, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aa2f95f119e014d020fdaabea4036667e</anchor>
      <arglist>(MouseDown, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a1f8ed5db70ef1fce37a9945c4b25eaf7</anchor>
      <arglist>(MouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ada6bd7c5db7f52c96aa3835d1339a916</anchor>
      <arglist>(MouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>afd85147cb5c486e422e28e5650752693</anchor>
      <arglist>(MouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a352cda9564365605a41ad563fbad062d</anchor>
      <arglist>(MouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abbfa0cd114994344347ce5d4b34a4969</anchor>
      <arglist>(MouseWheel, RoutingStrategy::Bubble, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a9f2480071e4c4fd0ab8ebca8182fe712</anchor>
      <arglist>(MouseMove, RoutingStrategy::Bubble, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aa8c064c6a3e794cd5cd7dd0110533433</anchor>
      <arglist>(KeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a29ffb3d7cadeace72c943b07b778fb7b</anchor>
      <arglist>(KeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a6e9c999fd3faf028bd62c9e11469c71f</anchor>
      <arglist>(MouseEnter, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a6674a5a18b225f0e814065b49cc5ed2e</anchor>
      <arglist>(MouseLeave, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_u_i_element_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UIElement.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_u_i_element_8h</filename>
    <includes id="_visual_8h" name="Visual.h" local="yes" imported="no">swGUI/Core/Controls/Visual.h</includes>
    <includes id="_event_handlers_8h" name="EventHandlers.h" local="yes" imported="no">swGUI/Core/System/Events/EventHandlers.h</includes>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">swGUI/Core/System/Events/EventsSystem.h</includes>
    <includes id="_mouse_button_event_args_8h" name="MouseButtonEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/MouseButtonEventArgs.h</includes>
    <includes id="_mouse_move_event_args_8h" name="MouseMoveEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/MouseMoveEventArgs.h</includes>
    <includes id="_mouse_wheel_event_args_8h" name="MouseWheelEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/MouseWheelEventArgs.h</includes>
    <includes id="_key_event_args_8h" name="KeyEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/KeyEventArgs.h</includes>
    <class kind="class">sw::gui::UIElement</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a87d391f004578da1660585ad4c044be9</anchor>
      <arglist>(UIElement)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Visual.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Controls/</path>
    <filename>_visual_8h</filename>
    <includes id="_dependency_object_8h" name="DependencyObject.h" local="yes" imported="no">swGUI/Core/System/DataBinding/DependencyObject.h</includes>
    <includes id="_common_types_8h" name="CommonTypes.h" local="yes" imported="no">swGUI/Core/System/CommonTypes/CommonTypes.h</includes>
    <includes id="_access_key_8h" name="AccessKey.h" local="yes" imported="no">swGUI/Core/System/CommonTypes/AccessKey.h</includes>
    <includes id="_drawing_context_8h" name="DrawingContext.h" local="yes" imported="no">swGUI/Core/System/Rendering/DrawingContext.h</includes>
    <class kind="class">sw::gui::Visual</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Brush.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_brush_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <class kind="class">sw::gui::Brush</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GradientBrush.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_gradient_brush_8h</filename>
    <includes id="_brush_8h" name="Brush.h" local="yes" imported="no">Brush.h</includes>
    <class kind="class">sw::gui::GradientBrush</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>ImageBrush.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_image_brush_8h</filename>
    <includes id="_brush_8h" name="Brush.h" local="yes" imported="no">Brush.h</includes>
    <class kind="class">sw::gui::ImageBrush</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>LinearGradient.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_linear_gradient_8h</filename>
    <includes id="_gradient_brush_8h" name="GradientBrush.h" local="yes" imported="no">GradientBrush.h</includes>
    <class kind="class">sw::gui::LinearGradient</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>RadialGradient.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_radial_gradient_8h</filename>
    <includes id="_gradient_brush_8h" name="GradientBrush.h" local="yes" imported="no">GradientBrush.h</includes>
    <class kind="class">sw::gui::RadialGradient</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SolidColorBrush.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/Brushes/</path>
    <filename>_solid_color_brush_8h</filename>
    <includes id="_brush_8h" name="Brush.h" local="yes" imported="no">Brush.h</includes>
    <class kind="class">sw::gui::SolidColorBrush</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Media.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/Media/</path>
    <filename>_media_8h</filename>
  </compound>
  <compound kind="file">
    <name>AccessKey.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/CommonTypes/</path>
    <filename>_access_key_8h</filename>
    <class kind="class">sw::gui::AccessKey</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>CommonTypes.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/CommonTypes/</path>
    <filename>_common_types_8h</filename>
    <includes id="_thickness_8h" name="Thickness.h" local="yes" imported="no">Thickness.h</includes>
    <class kind="struct">sw::gui::Rect</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="typedef">
      <type>DirectX::XMFLOAT2</type>
      <name>Position</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a8e73557abbfd912fe81a8d3915e19058</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DirectX::XMFLOAT2</type>
      <name>Size2D</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ac4016e8950fa391b61d115a48fad5d97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Thickness.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/CommonTypes/</path>
    <filename>_thickness_8h</filename>
    <class kind="struct">sw::gui::Thickness</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>DependencyObject.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/DataBinding/</path>
    <filename>_dependency_object_8cpp</filename>
    <includes id="_dependency_object_8h" name="DependencyObject.h" local="yes" imported="no">DependencyObject.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>registration::class_&lt; sw::gui::DependencyObject &gt;</name>
      <anchorfile>_dependency_object_8cpp.html</anchorfile>
      <anchor>aef639b4fa057fb0a2b233b4b5c9f105a</anchor>
      <arglist>(&quot;sw::gui::DependencyObject&quot;)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_dependency_object_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DependencyObject.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/DataBinding/</path>
    <filename>_dependency_object_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <class kind="class">sw::gui::DependencyObject</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>DelegateContainer.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_delegate_container_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_registered_event_8h" name="RegisteredEvent.h" local="yes" imported="no">RegisteredEvent.h</includes>
    <class kind="class">sw::gui::DelegatesContainerBase</class>
    <class kind="class">sw::gui::DelegatesContainer</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="typedef">
      <type>fastdelegate::FastDelegate2&lt; UIElement *, EventArgType * &gt;</type>
      <name>EventDelegate</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a35ac501f6307d311383d7d1a9577ecbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a121a571aca35830f9b5ac00f68262797</anchor>
      <arglist>(DelegatesContainerBase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventHandlers.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_event_handlers_8cpp</filename>
    <includes id="_event_handlers_8h" name="EventHandlers.h" local="yes" imported="no">EventHandlers.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">IEventArgs.h</includes>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">EventsSystem.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>EventHandlers.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_event_handlers_8h</filename>
    <includes id="_delegate_container_8h" name="DelegateContainer.h" local="yes" imported="no">DelegateContainer.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">IEventArgs.h</includes>
    <class kind="class">sw::gui::EventHandlers</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>_event_handlers_8h.html</anchorfile>
      <anchor>a919e7193d02c4dff2857c718fead98db</anchor>
      <arglist>(name, strategy, className, argsType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_event_handlers_8h.html</anchorfile>
      <anchor>a654d98d5dd58757bcd70bbd2d8f2b96c</anchor>
      <arglist>(name, strategy, className, argsType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventProxy.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_event_proxy_8h</filename>
    <includes id="_delegate_container_8h" name="DelegateContainer.h" local="yes" imported="no">DelegateContainer.h</includes>
    <includes id="_event_handlers_8h" name="EventHandlers.h" local="yes" imported="no">EventHandlers.h</includes>
    <includes id="_registered_event_8h" name="RegisteredEvent.h" local="yes" imported="no">RegisteredEvent.h</includes>
    <class kind="class">sw::gui::EventProxy</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>EventsSystem.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_events_system_8cpp</filename>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">EventsSystem.h</includes>
    <includes id="_events_system_8inl" name="EventsSystem.inl" local="yes" imported="no">EventsSystem.inl</includes>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>af4064139d2c39fc4a988cbe3813b6a22</anchor>
      <arglist>(const RegisteredEvent &amp;left, const RegisteredEvent &amp;right)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventsSystem.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_events_system_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_event_proxy_8h" name="EventProxy.h" local="yes" imported="no">EventProxy.h</includes>
    <includes id="_event_handlers_8h" name="EventHandlers.h" local="yes" imported="no">EventHandlers.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">IEventArgs.h</includes>
    <includes id="_registered_event_8h" name="RegisteredEvent.h" local="yes" imported="no">RegisteredEvent.h</includes>
    <class kind="class">sw::gui::EventsSystem</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="typedef">
      <type>void(UIElement::*)(UIElement *, ArgumentType *)</type>
      <name>EventHandlerPointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a2c538091d7c58f37027a1b60bf2e34f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventsSystem.inl</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_events_system_8inl</filename>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">EventsSystem.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>IEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_i_event_args_8cpp</filename>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">IEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_i_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_i_event_args_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <class kind="struct">sw::gui::IEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a8c4d7dda91919a4dd7eec4c81ce0801a</anchor>
      <arglist>(IEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_input_event_args_8cpp</filename>
    <includes id="_input_event_args_8h" name="InputEventArgs.h" local="yes" imported="no">InputEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_input_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_input_event_args_8h</filename>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/IEventArgs.h</includes>
    <includes id="_device_8h" name="Device.h" local="yes" imported="no">swInputLibrary/InputCore/Device.h</includes>
    <class kind="struct">sw::gui::InputEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>KeyboardEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_keyboard_event_args_8cpp</filename>
    <includes id="_keyboard_event_args_8h" name="KeyboardEventArgs.h" local="yes" imported="no">KeyboardEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_keyboard_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeyboardEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_keyboard_event_args_8h</filename>
    <includes id="_input_event_args_8h" name="InputEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/InputEventArgs.h</includes>
    <includes id="_keyboard_device_8h" name="KeyboardDevice.h" local="yes" imported="no">swInputLibrary/InputCore/KeyboardDevice.h</includes>
    <class kind="struct">sw::gui::KeyboardEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>KeyEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_key_event_args_8cpp</filename>
    <includes id="_key_event_args_8h" name="KeyEventArgs.h" local="yes" imported="no">KeyEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_key_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeyEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_key_event_args_8h</filename>
    <includes id="_keyboard_event_args_8h" name="KeyboardEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/Input/KeyboardEventArgs.h</includes>
    <class kind="struct">sw::gui::KeyEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a4a514cff169380b4cb52a7204fc7d563</anchor>
      <arglist>(KeyEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseButtonEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_button_event_args_8cpp</filename>
    <includes id="_mouse_button_event_args_8h" name="MouseButtonEventArgs.h" local="yes" imported="no">MouseButtonEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mouse_button_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseButtonEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_button_event_args_8h</filename>
    <includes id="_mouse_event_args_8h" name="MouseEventArgs.h" local="yes" imported="no">MouseEventArgs.h</includes>
    <class kind="struct">sw::gui::MouseButtonEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a480b91fea78ebef4cc60d2bdcd98f638</anchor>
      <arglist>(MouseButtonEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_event_args_8cpp</filename>
    <includes id="_mouse_event_args_8h" name="MouseEventArgs.h" local="yes" imported="no">MouseEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mouse_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_event_args_8h</filename>
    <includes id="_input_event_args_8h" name="InputEventArgs.h" local="yes" imported="no">InputEventArgs.h</includes>
    <includes id="_mouse_device_8h" name="MouseDevice.h" local="yes" imported="no">swInputLibrary/InputCore/MouseDevice.h</includes>
    <class kind="struct">sw::gui::MouseEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MouseMoveEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_move_event_args_8h</filename>
    <includes id="_mouse_event_args_8h" name="MouseEventArgs.h" local="yes" imported="no">MouseEventArgs.h</includes>
    <includes id="_mouse_device_8h" name="MouseDevice.h" local="yes" imported="no">swInputLibrary/InputCore/MouseDevice.h</includes>
    <class kind="struct">sw::gui::MouseMoveEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abfa6aca9ce936c5373658caaa5c4f37f</anchor>
      <arglist>(MouseMoveEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseWheelEventArgs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_wheel_event_args_8cpp</filename>
    <includes id="_mouse_wheel_event_args_8h" name="MouseWheelEventArgs.h" local="yes" imported="no">MouseWheelEventArgs.h</includes>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_mouse_wheel_event_args_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseWheelEventArgs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/Input/</path>
    <filename>_mouse_wheel_event_args_8h</filename>
    <includes id="_mouse_event_args_8h" name="MouseEventArgs.h" local="yes" imported="no">MouseEventArgs.h</includes>
    <class kind="struct">sw::gui::MouseWheelEventArgs</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>RegisteredEvent.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Events/</path>
    <filename>_registered_event_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <class kind="struct">sw::gui::RegisteredEvent</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="typedef">
      <type>uint32</type>
      <name>EventType</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gab331329f020c803a1fa0f32a30d4054b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RoutingStrategy</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gaaad874b405531e224e6c3ce77c1be885</anchor>
      <arglist></arglist>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885ab6230dfc594205d0ea15d5890ac22d7f">Bubble</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885afd1dd0c603be8170f9eae0be9f2f6afb">Direct</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885aeebee9ab199d3cc4d44e19b341b65b7d">Tunnel</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>af4064139d2c39fc4a988cbe3813b6a22</anchor>
      <arglist>(const RegisteredEvent &amp;left, const RegisteredEvent &amp;right)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GUISystem.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_g_u_i_system_8cpp</filename>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">GUISystem.h</includes>
    <includes id="_keyboard_state_8h" name="KeyboardState.h" local="yes" imported="no">swInputLibrary/InputCore/KeyboardState.h</includes>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_resource_manager_8h" name="ResourceManager.h" local="yes" imported="no">swGraphicAPI/ResourceManager/ResourceManager.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type>INativeGUI *</type>
      <name>CreateNativeGUI</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aefa3734d6fb00a4acbb27d63d7c224bb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GUISystem.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_g_u_i_system_8h</filename>
    <includes id="_engine_object_8h" name="EngineObject.h" local="yes" imported="no">swCommonLib/Common/EngineObject.h</includes>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <includes id="_i_native_g_u_i_8h" name="INativeGUI.h" local="yes" imported="no">swGUI/Native/INativeGUI.h</includes>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">Events/EventsSystem.h</includes>
    <includes id="_rendering_system_8h" name="RenderingSystem.h" local="yes" imported="no">swGUI/Core/System/Rendering/RenderingSystem.h</includes>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">HostWindow.h</includes>
    <class kind="struct">sw::gui::CommandLineArgs</class>
    <class kind="class">sw::gui::GUISystem</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>HostLogic.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_host_logic_8cpp</filename>
    <includes id="_host_logic_8h" name="HostLogic.h" local="yes" imported="no">HostLogic.h</includes>
    <includes id="_common_types_8h" name="CommonTypes.h" local="yes" imported="no">CommonTypes/CommonTypes.h</includes>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">HostWindow.h</includes>
    <includes id="_events_system_8h" name="EventsSystem.h" local="yes" imported="no">Events/EventsSystem.h</includes>
    <includes id="_events_system_8inl" name="EventsSystem.inl" local="yes" imported="no">Events/EventsSystem.inl</includes>
    <includes id="_key_event_args_8h" name="KeyEventArgs.h" local="yes" imported="no">Events/Input/KeyEventArgs.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="define">
      <type>#define</type>
      <name>STD_MAP_OVERHEAD_PER_ELEMENT</name>
      <anchorfile>_host_logic_8cpp.html</anchorfile>
      <anchor>a3b40e11efb1a34594a2ebd7b70353866</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HostLogic.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_host_logic_8h</filename>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <class kind="class">sw::gui::HostLogic</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>HostWindow.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_host_window_8cpp</filename>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">HostWindow.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <includes id="_resource_manager_8h" name="ResourceManager.h" local="yes" imported="no">swGraphicAPI/ResourceManager/ResourceManager.h</includes>
    <includes id="_input_dispatcher_8h" name="InputDispatcher.h" local="yes" imported="no">swInputLibrary/InputCore/Helpers/InputDispatcher.h</includes>
    <includes id="_common_types_8h" name="CommonTypes.h" local="yes" imported="no">CommonTypes/CommonTypes.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_host_window_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HostWindow.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_host_window_8h</filename>
    <includes id="_i_native_window_8h" name="INativeWindow.h" local="yes" imported="no">swGUI/Native/INativeWindow.h</includes>
    <includes id="_host_logic_8h" name="HostLogic.h" local="yes" imported="no">HostLogic.h</includes>
    <includes id="_top_level_control_8h" name="TopLevelControl.h" local="yes" imported="no">swGUI/Core/Controls/TopLevelControl.h</includes>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <class kind="class">sw::gui::HostWindow</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a304f447a2482f2e073f1954e36c9e9ae</anchor>
      <arglist>(HostWindow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a91f0a9dc47b4faf3133b4b15ce0cca5c</anchor>
      <arglist>(HostWindow)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Initializers.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/</path>
    <filename>_initializers_8cpp</filename>
    <includes id="_i_native_g_u_i_8h" name="INativeGUI.h" local="yes" imported="no">swGUI/Native/INativeGUI.h</includes>
    <includes id="_win_a_p_i_g_u_i_8h" name="WinAPIGUI.h" local="yes" imported="no">swGUI/Native/WinAPI/WinAPIGUI.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="define">
      <type>#define</type>
      <name>USE_WIN32_API</name>
      <anchorfile>_initializers_8cpp.html</anchorfile>
      <anchor>a8de2a45cd564fdfb7c5306c713763fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sw::gui::WinAPIGUI</type>
      <name>NativeGUI</name>
      <anchorfile>_initializers_8cpp.html</anchorfile>
      <anchor>a6b253e2df699b3a5bd327fa0958f6cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>INativeGUI *</type>
      <name>CreateNativeGUI</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aefa3734d6fb00a4acbb27d63d7c224bb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DrawingContext.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Rendering/</path>
    <filename>_drawing_context_8h</filename>
    <includes id="_brush_8h" name="Brush.h" local="yes" imported="no">swGUI/Core/Media/Brushes/Brush.h</includes>
    <includes id="_common_types_8h" name="CommonTypes.h" local="yes" imported="no">swGUI/Core/System/CommonTypes/CommonTypes.h</includes>
    <class kind="class">sw::gui::DrawingContext</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>RenderingSystem.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Rendering/</path>
    <filename>_rendering_system_8cpp</filename>
    <includes id="_rendering_system_8h" name="RenderingSystem.h" local="yes" imported="no">RenderingSystem.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>RenderingSystem.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Core/System/Rendering/</path>
    <filename>_rendering_system_8h</filename>
    <includes id="_i_graphic_a_p_i_initializer_8h" name="IGraphicAPIInitializer.h" local="yes" imported="no">swGraphicAPI/Rendering/IGraphicAPIInitializer.h</includes>
    <includes id="_i_renderer_8h" name="IRenderer.h" local="yes" imported="no">swGraphicAPI/Rendering/IRenderer.h</includes>
    <includes id="_resource_manager_8h" name="ResourceManager.h" local="yes" imported="no">swGraphicAPI/ResourceManager/ResourceManager.h</includes>
    <class kind="class">sw::gui::RenderingSystem</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>_rendering_system_8h.html</anchorfile>
      <anchor>a24901f42ec1c90e2b07e930aa31e5747</anchor>
      <arglist>(IRenderer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a17e032588a7559b7f2a966eea409b689</anchor>
      <arglist>(RenderingSystem)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>INativeGUI.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/</path>
    <filename>_i_native_g_u_i_8h</filename>
    <includes id="_i_native_window_8h" name="INativeWindow.h" local="yes" imported="no">INativeWindow.h</includes>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <class kind="struct">sw::gui::NativeGUIInitData</class>
    <class kind="class">sw::gui::INativeGUI</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="typedef">
      <type>fastdelegate::FastDelegate2&lt; INativeWindow *, bool &gt;</type>
      <name>ChangedFocusDelegate</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a563baa70e3ac0468cd81d5a3c1cf2b9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>INativeWindow.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/</path>
    <filename>_i_native_window_8h</filename>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
    <class kind="struct">sw::gui::NativeWindowDescriptor</class>
    <class kind="class">sw::gui::INativeWindow</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MockGUI.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/MockNativeGUI/</path>
    <filename>_mock_g_u_i_8cpp</filename>
    <includes id="_mock_g_u_i_8h" name="MockGUI.h" local="yes" imported="no">MockGUI.h</includes>
    <includes id="_mock_window_8h" name="MockWindow.h" local="yes" imported="no">MockWindow.h</includes>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/DebugInput.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MockGUI.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/MockNativeGUI/</path>
    <filename>_mock_g_u_i_8h</filename>
    <includes id="_i_native_g_u_i_8h" name="INativeGUI.h" local="yes" imported="no">swGUI/Native/INativeGUI.h</includes>
    <class kind="class">sw::gui::MockGUI</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MockWindow.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/MockNativeGUI/</path>
    <filename>_mock_window_8cpp</filename>
    <includes id="_mock_window_8h" name="MockWindow.h" local="yes" imported="no">MockWindow.h</includes>
    <includes id="_mock_g_u_i_8h" name="MockGUI.h" local="yes" imported="no">MockGUI.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>MockWindow.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/MockNativeGUI/</path>
    <filename>_mock_window_8h</filename>
    <includes id="_i_native_window_8h" name="INativeWindow.h" local="yes" imported="no">swGUI/Native/INativeWindow.h</includes>
    <class kind="class">sw::gui::MockWindow</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win32ApiWindow.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/WinAPI/</path>
    <filename>_win32_api_window_8cpp</filename>
    <includes id="_win32_api_window_8h" name="Win32ApiWindow.h" local="yes" imported="no">Win32ApiWindow.h</includes>
    <includes id="_win_a_p_i_g_u_i_8h" name="WinAPIGUI.h" local="yes" imported="no">WinAPIGUI.h</includes>
    <includes id="_converters_8h" name="Converters.h" local="yes" imported="no">swCommonLib/Common/Converters.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win32ApiWindow.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/WinAPI/</path>
    <filename>_win32_api_window_8h</filename>
    <includes id="_i_native_window_8h" name="INativeWindow.h" local="yes" imported="no">swGUI/Native/INativeWindow.h</includes>
    <class kind="class">sw::gui::Win32ApiWindow</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>WinAPIGUI.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/WinAPI/</path>
    <filename>_win_a_p_i_g_u_i_8cpp</filename>
    <includes id="_win_a_p_i_g_u_i_8h" name="WinAPIGUI.h" local="yes" imported="no">WinAPIGUI.h</includes>
    <includes id="_win32_api_window_8h" name="Win32ApiWindow.h" local="yes" imported="no">Win32ApiWindow.h</includes>
    <includes id="_win_api_input_proxy_8h" name="WinApiInputProxy.h" local="yes" imported="no">swInputLibrary/InputWinApi/WinApiInputProxy.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
    <member kind="function">
      <type>LRESULT CALLBACK</type>
      <name>WindowProcedure</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ade8eb75ea0972a49a2637f744483be0e</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
    <member kind="function">
      <type>INativeWindow *</type>
      <name>GetNativePointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ac0ddddbe6a411a7f18b108a5d06ae3c2</anchor>
      <arglist>(HWND window)</arglist>
    </member>
    <member kind="function">
      <type>WinAPIGUI *</type>
      <name>GetNativeAPIPointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a92908e8ddad75ca8443798bedef89782</anchor>
      <arglist>(HWND window)</arglist>
    </member>
    <member kind="variable">
      <type>const wchar_t</type>
      <name>WINDOW_CLASS_NAME</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5a356310113719ff491ff8752d9116dc</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WinAPIGUI.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Native/WinAPI/</path>
    <filename>_win_a_p_i_g_u_i_8h</filename>
    <includes id="_i_native_g_u_i_8h" name="INativeGUI.h" local="yes" imported="no">swGUI/Native/INativeGUI.h</includes>
    <class kind="class">sw::gui::WinAPIGUI</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>targetver.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/</path>
    <filename>sw_g_u_i_2targetver_8h</filename>
  </compound>
  <compound kind="file">
    <name>targetver.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/TestFramework/</path>
    <filename>sw_g_u_i_2_test_framework_2targetver_8h</filename>
  </compound>
  <compound kind="file">
    <name>targetver.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>sw_common_lib_2_hierarchical_chunked_format_2targetver_8h</filename>
  </compound>
  <compound kind="file">
    <name>targetver.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>sw_common_lib_2_tests_2_test_h_c_f_2targetver_8h</filename>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/TestFramework/</path>
    <filename>sw_g_u_i_2_test_framework_2stdafx_8cpp</filename>
    <includes id="sw_g_u_i_2_test_framework_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGUI/TestFramework/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/</path>
    <filename>sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/DX11API/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ResourceManager/</path>
    <filename>sw_graphic_a_p_i_2_resource_manager_2stdafx_8cpp</filename>
    <includes id="sw_graphic_a_p_i_2_resource_manager_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGraphicAPI/ResourceManager/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>sw_common_lib_2_hierarchical_chunked_format_2stdafx_8cpp</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Tests/TestHCF/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>sw_common_lib_2_serialization_2_property_serialization_2stdafx_8cpp</filename>
    <includes id="sw_common_lib_2_serialization_2_property_serialization_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Serialization/PropertySerialization/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8cpp</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swCommonLib/Tests/TestHCF/stdafx.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/TestFramework/</path>
    <filename>sw_g_u_i_2_test_framework_2stdafx_8h</filename>
    <includes id="sw_g_u_i_2_test_framework_2targetver_8h" name="targetver.h" local="yes" imported="no">targetver.h</includes>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">swGUI/Core/System/GUISystem.h</includes>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">swGUI/Core/System/HostWindow.h</includes>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/DebugInput.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/DX11API/</path>
    <filename>sw_graphic_a_p_i_2_d_x11_a_p_i_2stdafx_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_d_x11_pipeline_state_8h" name="DX11PipelineState.h" local="yes" imported="no">DX11Resources/DX11PipelineState.h</includes>
    <includes id="_d_x11_buffer_8h" name="DX11Buffer.h" local="yes" imported="no">DX11Resources/DX11Buffer.h</includes>
    <includes id="_d_x11_compute_shader_8h" name="DX11ComputeShader.h" local="yes" imported="no">DX11Resources/DX11ComputeShader.h</includes>
    <includes id="_d_x11_input_layout_8h" name="DX11InputLayout.h" local="yes" imported="no">DX11Resources/DX11InputLayout.h</includes>
    <includes id="_d_x11_input_layout_descriptor_8h" name="DX11InputLayoutDescriptor.h" local="yes" imported="no">DX11Resources/DX11InputLayoutDescriptor.h</includes>
    <includes id="_d_x11_pixel_shader_8h" name="DX11PixelShader.h" local="yes" imported="no">DX11Resources/DX11PixelShader.h</includes>
    <includes id="_d_x11_render_target_8h" name="DX11RenderTarget.h" local="yes" imported="no">DX11Resources/DX11RenderTarget.h</includes>
    <includes id="_d_x11_swap_chain_8h" name="DX11SwapChain.h" local="yes" imported="no">DX11Resources/DX11SwapChain.h</includes>
    <includes id="_d_x11_texture_8h" name="DX11Texture.h" local="yes" imported="no">DX11Resources/DX11Texture.h</includes>
    <includes id="_d_x11_vertex_shader_8h" name="DX11VertexShader.h" local="yes" imported="no">DX11Resources/DX11VertexShader.h</includes>
    <includes id="_d_x11_a_p_i_objects_8h" name="DX11APIObjects.h" local="yes" imported="no">DX11Initializer/DX11APIObjects.h</includes>
    <includes id="_d_x11_constants_mapper_8h" name="DX11ConstantsMapper.h" local="yes" imported="no">DX11Initializer/DX11ConstantsMapper.h</includes>
    <includes id="_d_x11_initializer_8h" name="DX11Initializer.h" local="yes" imported="no">DX11Initializer/DX11Initializer.h</includes>
    <includes id="_d_x11_renderer_8h" name="DX11Renderer.h" local="yes" imported="no">DX11Renderer/DX11Renderer.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGraphicAPI/ResourceManager/</path>
    <filename>sw_graphic_a_p_i_2_resource_manager_2stdafx_8h</filename>
    <includes id="_r_t_t_r_8h" name="RTTR.h" local="yes" imported="no">swCommonLib/Common/RTTR.h</includes>
    <includes id="_mesh_resources_8h" name="MeshResources.h" local="yes" imported="no">swGraphicAPI/Resources/MeshResources.h</includes>
    <includes id="_blending_state_8h" name="BlendingState.h" local="yes" imported="no">swGraphicAPI/Resources/BlendingState.h</includes>
    <includes id="_depth_stencil_state_8h" name="DepthStencilState.h" local="yes" imported="no">swGraphicAPI/Resources/DepthStencilState.h</includes>
    <includes id="_rasterizer_state_8h" name="RasterizerState.h" local="yes" imported="no">swGraphicAPI/Resources/RasterizerState.h</includes>
    <includes id="_graphic_a_p_i_constants_8h" name="GraphicAPIConstants.h" local="yes" imported="no">swGraphicAPI/Rendering/GraphicAPIConstants.h</includes>
    <includes id="_resource_manager_8h" name="ResourceManager.h" local="yes" imported="no">swGraphicAPI/ResourceManager/ResourceManager.h</includes>
    <includes id="_resources_factory_8h" name="ResourcesFactory.h" local="yes" imported="no">swGraphicAPI/Resources/ResourcesFactory.h</includes>
    <includes id="_swap_chain_8h" name="SwapChain.h" local="yes" imported="no">swGraphicAPI/Resources/SwapChain.h</includes>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/HierarchicalChunkedFormat/</path>
    <filename>sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h</filename>
    <includes id="sw_common_lib_2_hierarchical_chunked_format_2targetver_8h" name="targetver.h" local="yes" imported="no">targetver.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>WIN32_LEAN_AND_MEAN</name>
      <anchorfile>sw_common_lib_2_hierarchical_chunked_format_2stdafx_8h.html</anchorfile>
      <anchor>ac7bef5d85e3dcd73eef56ad39ffc84a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Serialization/PropertySerialization/</path>
    <filename>sw_common_lib_2_serialization_2_property_serialization_2stdafx_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>WIN32_LEAN_AND_MEAN</name>
      <anchorfile>sw_common_lib_2_serialization_2_property_serialization_2stdafx_8h.html</anchorfile>
      <anchor>ac7bef5d85e3dcd73eef56ad39ffc84a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdafx.h</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/TestHCF/</path>
    <filename>sw_common_lib_2_tests_2_test_h_c_f_2stdafx_8h</filename>
    <includes id="sw_common_lib_2_tests_2_test_h_c_f_2targetver_8h" name="targetver.h" local="yes" imported="no">targetver.h</includes>
  </compound>
  <compound kind="file">
    <name>TestFramework.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/TestFramework/</path>
    <filename>_test_framework_8cpp</filename>
    <includes id="sw_g_u_i_2_test_framework_2stdafx_8h" name="stdafx.h" local="yes" imported="no">swGUI/TestFramework/stdafx.h</includes>
    <includes id="_test_framework_8h" name="TestFramework.h" local="yes" imported="no">TestFramework.h</includes>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/DebugInput.h</includes>
    <includes id="_mock_g_u_i_8h" name="MockGUI.h" local="yes" imported="no">swGUI/Native/MockNativeGUI/MockGUI.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>TestFramework.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/TestFramework/</path>
    <filename>_test_framework_8h</filename>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">swGUI/Core/System/GUISystem.h</includes>
    <includes id="_event_capture_8h" name="EventCapture.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/EventCapture.h</includes>
    <class kind="class">sw::gui::TestFramework</class>
    <namespace>sw</namespace>
    <namespace>sw::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Application.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/PrototyperGUI/</path>
    <filename>_application_8cpp</filename>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <includes id="_sizeofs_8h" name="Sizeofs.h" local="yes" imported="no">Sizeofs/Sizeofs.h</includes>
  </compound>
  <compound kind="file">
    <name>Application.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/PrototyperGUI/</path>
    <filename>_application_8h</filename>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">swGUI/Core/System/GUISystem.h</includes>
    <class kind="class">Application</class>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/PrototyperGUI/</path>
    <filename>sw_g_u_i_2_tests_2_prototyper_g_u_i_2main_8cpp</filename>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">swGUI/Core/System/GUISystem.h</includes>
    <includes id="_win_a_p_i_g_u_i_8h" name="WinAPIGUI.h" local="yes" imported="no">swGUI/Native/WinAPI/WinAPIGUI.h</includes>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>sw_g_u_i_2_tests_2_prototyper_g_u_i_2main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/</path>
    <filename>sw_g_u_i_2_tests_2_test_g_u_i_system_2main_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CATCH_CONFIG_MAIN</name>
      <anchorfile>sw_g_u_i_2_tests_2_test_g_u_i_system_2main_8cpp.html</anchorfile>
      <anchor>a656eb5868e824d59f489f910db438420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swCommonLib/Tests/PropertyAnimationTest/</path>
    <filename>sw_common_lib_2_tests_2_property_animation_test_2main_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CATCH_CONFIG_MAIN</name>
      <anchorfile>sw_common_lib_2_tests_2_property_animation_test_2main_8cpp.html</anchorfile>
      <anchor>a656eb5868e824d59f489f910db438420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sizeofs.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/PrototyperGUI/Sizeofs/</path>
    <filename>_sizeofs_8cpp</filename>
    <includes id="_sizeofs_8h" name="Sizeofs.h" local="yes" imported="no">Sizeofs.h</includes>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">swInputLibrary/InputCore/InputDeviceEvent.h</includes>
    <includes id="_g_u_i_system_8h" name="GUISystem.h" local="yes" imported="no">swGUI/Core/System/GUISystem.h</includes>
    <includes id="_i_control_8h" name="IControl.h" local="yes" imported="no">swGUI/Core/Controls/IControl.h</includes>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <includes id="_visual_8h" name="Visual.h" local="yes" imported="no">swGUI/Core/Controls/Visual.h</includes>
    <class kind="class">VirtualEmptyClass</class>
    <member kind="function">
      <type>void</type>
      <name>PrintSizeofType</name>
      <anchorfile>_sizeofs_8cpp.html</anchorfile>
      <anchor>aaa78e01c9f9f1349f3420e165643afc7</anchor>
      <arglist>(std::ostream &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintSizeofs</name>
      <anchorfile>_sizeofs_8cpp.html</anchorfile>
      <anchor>a8de488cd2c54388e86657226bc8a2981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NameSize</name>
      <anchorfile>_sizeofs_8cpp.html</anchorfile>
      <anchor>a778e0ac98998ff00a190e70bf30d63f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sizeofs.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/PrototyperGUI/Sizeofs/</path>
    <filename>_sizeofs_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>PrintSizeofs</name>
      <anchorfile>_sizeofs_8h.html</anchorfile>
      <anchor>a8de488cd2c54388e86657226bc8a2981</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestUIElementClass.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/Classes/</path>
    <filename>_test_u_i_element_class_8cpp</filename>
    <includes id="_test_u_i_element_class_8h" name="TestUIElementClass.h" local="yes" imported="no">TestUIElementClass.h</includes>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>a95e66805dad74bd4d8d7dc38cd602014</anchor>
      <arglist>(ValidationStarted, RoutingStrategy::Direct, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>a47c21b565a300ac333e46fdc6be37f5c</anchor>
      <arglist>(ValidationEnded, RoutingStrategy::Direct, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>a92711ae8346d5c185dbb91cd69699ba7</anchor>
      <arglist>(UnusedEvent, RoutingStrategy::Direct, TestUIElementClass, UnusedEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>aab5250593014eff5e19528271d8129f0</anchor>
      <arglist>(PreviewTunnelEvent, RoutingStrategy::Tunnel, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>a86b4c7e632fe8d1016f2d17a948adc1d</anchor>
      <arglist>(BubbleEvent, RoutingStrategy::Bubble, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTTR_REGISTRATION</name>
      <anchorfile>_test_u_i_element_class_8cpp.html</anchorfile>
      <anchor>aa85998502208f6b5493127968965072a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestUIElementClass.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/Classes/</path>
    <filename>_test_u_i_element_class_8h</filename>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/IEventArgs.h</includes>
    <class kind="struct">ValidationEventArgs</class>
    <class kind="struct">UnusedEventArgs</class>
    <class kind="class">TestUIElementClass</class>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>_test_u_i_element_class_8h.html</anchorfile>
      <anchor>a87760796215684355d044216d92673f4</anchor>
      <arglist>(ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>_test_u_i_element_class_8h.html</anchorfile>
      <anchor>afe9f8fbb702b9a53d6ad76ff4a0394c0</anchor>
      <arglist>(UnusedEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>_test_u_i_element_class_8h.html</anchorfile>
      <anchor>aef7e9111ed323abb1cf325e78ed57c4b</anchor>
      <arglist>(TestUIElementClass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HostWindowTester.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/FrameworkHelpers/</path>
    <filename>_host_window_tester_8cpp</filename>
    <includes id="_host_window_tester_8h" name="HostWindowTester.h" local="yes" imported="no">HostWindowTester.h</includes>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/DebugInput.h</includes>
  </compound>
  <compound kind="file">
    <name>HostWindowTester.h</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/FrameworkHelpers/</path>
    <filename>_host_window_tester_8h</filename>
    <includes id="_host_window_8h" name="HostWindow.h" local="yes" imported="no">swGUI/Core/System/HostWindow.h</includes>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/DebugInput.h</includes>
    <class kind="class">HostWindowTester</class>
  </compound>
  <compound kind="file">
    <name>TestEventRouting.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/</path>
    <filename>_test_event_routing_8cpp</filename>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/IEventArgs.h</includes>
    <includes id="_test_u_i_element_class_8h" name="TestUIElementClass.h" local="yes" imported="no">Classes/TestUIElementClass.h</includes>
    <member kind="function">
      <type>void</type>
      <name>CleanGlobals</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a56174600c49dcda9aefecba93211676f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement0</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a340cabb7df9a4229c8e6b79810a1e274</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement1</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a033558ca20fff8de4f6f226225843a8d</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement2</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>ac4eebc56907143ea76d641d2c08b40af</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement3</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a916366a4097c61a685afef456dc8d75a</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement4</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>acdb5fd9ee8e861cb7b628f7249c65745</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckUIElement5</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a56540f95dc46a62aacb2988a542d3c1a</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a956ff34cc3c56a9fed4e29c1c642d5f5</anchor>
      <arglist>(&quot;Tunnel Events Routing&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a3f6043d3bb3e0b99b5419a81c55e8fff</anchor>
      <arglist>(&quot;Tunnel Bubble Routing&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement0</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>aafd8edb7cf6c9293acea8b4bd20f3e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement1</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a35526159d75edcc1dbadd3a3531040e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement2</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>a4d0701e17b3f1c9ee7301f3fde3842d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement3</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>ae452023cbfe84639f3115d84a27b174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement4</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>aa29e65cb9a20e5e82030ebe29a92c09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validateElement5</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>ad3eeb800fb7dc15b5072c928b250c910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>eventsOrder</name>
      <anchorfile>_test_event_routing_8cpp.html</anchorfile>
      <anchor>ac4bcbdb8d4a9c025a2a3e4c14e7e799c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestKeyEvents.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/</path>
    <filename>_test_key_events_8cpp</filename>
    <includes id="_test_framework_8h" name="TestFramework.h" local="yes" imported="no">swGUI/TestFramework/TestFramework.h</includes>
    <member kind="function">
      <type>void</type>
      <name>KeyEventReceived</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>a7fc0f24ca5b82d0abfe31b939e99caa4</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreviewKeyEventReceivedHandled</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>a748133c21f73b25e48b3c0e940516b9e</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckVectorsContent</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>aec45fc067646b22e0b5234e226bf25c2</anchor>
      <arglist>(const std::vector&lt; input::Keyboard::PhysicalKeys &gt; &amp;testUpKeys, const std::vector&lt; input::Keyboard::PhysicalKeys &gt; &amp;testDownKeys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>a6970658fee521ab4c210d92e53fe599a</anchor>
      <arglist>(&quot;KeyUp/KeyDown event&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; input::Keyboard::PhysicalKeys &gt;</type>
      <name>upKeys</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>a394420d3d8d3d35cad5355b36d5c08e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; input::Keyboard::PhysicalKeys &gt;</type>
      <name>downKeys</name>
      <anchorfile>_test_key_events_8cpp.html</anchorfile>
      <anchor>ac2dc7e8793d5d4879e700c30f873e4f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestRegistration.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swGUI/Tests/TestGUISystem/</path>
    <filename>_test_registration_8cpp</filename>
    <includes id="_u_i_element_8h" name="UIElement.h" local="yes" imported="no">swGUI/Core/Controls/UIElement.h</includes>
    <includes id="_i_event_args_8h" name="IEventArgs.h" local="yes" imported="no">swGUI/Core/System/Events/IEventArgs.h</includes>
    <includes id="_test_u_i_element_class_8h" name="TestUIElementClass.h" local="yes" imported="no">Classes/TestUIElementClass.h</includes>
    <member kind="function">
      <type>void</type>
      <name>CleanCounters</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a232deaab6b7b5fff5e0e973159c79d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ValidationDelegate</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>ab5162269fd814cab3289d2538ad100e7</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ValidationDelegate2</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>ae3165bfe18e30509a1831f1402bd063a</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ValidationDelegate3</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a632639a4a7f755041a8e390e2b1f7c93</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ValidationDelegate4</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>ac7b3f4272178ce063de0cd5f8c7f72e8</anchor>
      <arglist>(UIElement *sender, ValidationEventArgs *e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>acf8155f0302fef48302a0d46be6b4807</anchor>
      <arglist>(&quot;Raising direct events&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_CASE</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a997657506616bb055e27002de2fc5d37</anchor>
      <arglist>(&quot;Adding/removing delegates&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validationDelegateCounter</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a3b4d7e06a7620448e6ce6f59e745dc6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid1Counter</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a2afb987ab725f958f550511951ec1d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid2Counter</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>a2db09d8e135e2de729c694203d95bb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid3Counter</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>ab397c911113997f4a99430f046e95743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid4Counter</name>
      <anchorfile>_test_registration_8cpp.html</anchorfile>
      <anchor>ae5c808b414ac76d4a5e28ab5e94be9d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DirectInputModule.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/DirectInput/</path>
    <filename>_direct_input_module_8cpp</filename>
    <includes id="_direct_input_module_8h" name="DirectInputModule.h" local="yes" imported="no">DirectInputModule.h</includes>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_factory_8h" name="Factory.h" local="yes" imported="no">swInputLibrary/InputCore/Factory.h</includes>
    <includes id="_memory_leaks_8h" name="MemoryLeaks.h" local="yes" imported="no">swCommonLib/Common/MemoryLeaks.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DIRECT_INPUT_OK</name>
      <anchorfile>_direct_input_module_8cpp.html</anchorfile>
      <anchor>a94e52aca4d5efaa017c70980b2407c8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DirectInputModule.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/DirectInput/</path>
    <filename>_direct_input_module_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <includes id="_include_direct_input_8h" name="IncludeDirectInput.h" local="yes" imported="no">IncludeDirectInput.h</includes>
    <class kind="class">sw::input::DirectInputModule</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>IncludeDirectInput.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/DirectInput/</path>
    <filename>_include_direct_input_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DIRECTINPUT_VERSION</name>
      <anchorfile>_include_direct_input_8h.html</anchorfile>
      <anchor>a1d7ab29fdefabdb4e7e7cd27ac4c9934</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugInput.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/Debugging/</path>
    <filename>_debug_input_8cpp</filename>
    <includes id="_debug_input_8h" name="DebugInput.h" local="yes" imported="no">DebugInput.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>DebugInput.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/Debugging/</path>
    <filename>_debug_input_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <includes id="_event_capture_8h" name="EventCapture.h" local="yes" imported="no">swInputLibrary/InputCore/Debugging/EventCapture.h</includes>
    <class kind="class">sw::input::DebugInput</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>EventCapture.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/Debugging/</path>
    <filename>_event_capture_8cpp</filename>
    <includes id="_event_capture_8h" name="EventCapture.h" local="yes" imported="no">EventCapture.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>EventCapture.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/Debugging/</path>
    <filename>_event_capture_8h</filename>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">swInputLibrary/InputCore/InputDeviceEvent.h</includes>
    <includes id="_event_queue_8h" name="EventQueue.h" local="yes" imported="no">swInputLibrary/InputCore/EventQueue.h</includes>
    <class kind="struct">sw::input::DebugEvent</class>
    <class kind="class">sw::input::EventCapture</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>Device.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_device_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">sw::input::Device</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ad5b8776894c7e539674dc2fe24858d6b</anchor>
      <arglist>(Device)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventQueue.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_event_queue_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <class kind="class">sw::input::EventQueue</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>Factory.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_factory_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <namespace>sw::input::InputFactory</namespace>
    <member kind="function">
      <type>IInput *</type>
      <name>CreateDirectInput</name>
      <anchorfile>namespacesw_1_1input_1_1_input_factory.html</anchorfile>
      <anchor>a895d381f4c70fe8cc9a248880600d651</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputDispatcher.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/Helpers/</path>
    <filename>_input_dispatcher_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <includes id="_device_8h" name="Device.h" local="yes" imported="no">swInputLibrary/InputCore/Device.h</includes>
    <class kind="class">sw::input::InputDispatcher</class>
    <class kind="struct">sw::input::InputDispatcher::DispatchedEvent</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>IInput.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_i_input_8h</filename>
    <includes id="_keyboard_state_8h" name="KeyboardState.h" local="yes" imported="no">KeyboardState.h</includes>
    <includes id="_mouse_state_8h" name="MouseState.h" local="yes" imported="no">MouseState.h</includes>
    <includes id="_joystick_state_8h" name="JoystickState.h" local="yes" imported="no">JoystickState.h</includes>
    <includes id="_mouse_device_8h" name="MouseDevice.h" local="yes" imported="no">swInputLibrary/InputCore/MouseDevice.h</includes>
    <includes id="_keyboard_device_8h" name="KeyboardDevice.h" local="yes" imported="no">swInputLibrary/InputCore/KeyboardDevice.h</includes>
    <includes id="_joystick_device_8h" name="JoystickDevice.h" local="yes" imported="no">swInputLibrary/InputCore/JoystickDevice.h</includes>
    <includes id="_input_device_info_8h" name="InputDeviceInfo.h" local="yes" imported="no">InputDeviceInfo.h</includes>
    <class kind="struct">sw::input::InputInitInfo</class>
    <class kind="class">sw::input::IInput</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="typedef">
      <type>void *</type>
      <name>AppInstanceHandle</name>
      <anchorfile>_i_input_8h.html</anchorfile>
      <anchor>adea7ba97c171a589cae7da5babd8b1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>WindowHandle</name>
      <anchorfile>_i_input_8h.html</anchorfile>
      <anchor>a597c0ad55c4ae093bfac070e2a33b8aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputDeviceEvent.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_input_device_event_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <includes id="_key_state_8h" name="KeyState.h" local="yes" imported="no">KeyState.h</includes>
    <class kind="struct">sw::input::Keyboard</class>
    <class kind="struct">sw::input::Mouse</class>
    <class kind="struct">sw::input::KeyEvent</class>
    <class kind="struct">sw::input::CharacterEvent</class>
    <class kind="struct">sw::input::ButtonEvent</class>
    <class kind="struct">sw::input::AxisEvent</class>
    <class kind="struct">sw::input::CursorEvent</class>
    <class kind="struct">sw::input::DeviceEvent</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="typedef">
      <type>uint16</type>
      <name>Timestamp</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a4c3b34aea2c324dfb1ab6a21355a42ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceEventType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabf3f6def9fbf3c504ac498e3b18d281a</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa2a5fc951d784f4f83f0a8d4ad5f01496">KeyboardEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aaa90505c6fad857aba05414fb17b0edd4">CharacterEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa6e23f9964c61f96fb456181d4f66e240">ButtonEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aac1f4a428d2f300ba6236228a878d6306">AxisEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa7fa053ad816e645e8bae9d8c6107d487">CursorEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa42fee7e7a62b3ca0a0addab64d81a6ba">InvalidEvent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga6ec104f8078c8e9863c19cee3b0c27ab</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba6ce4d85a628a88bbdb3ac24a8e5a9c2e">Keyboard</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27abaf2a47c6809d88e175dade0ef7b16aa13">Mouse</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba1162b85b7b993e2edf7da29dd8abf7e2">Joystick</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>InputDeviceInfo.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_input_device_info_8h</filename>
    <class kind="struct">InputDeviceInfo</class>
  </compound>
  <compound kind="file">
    <name>JoystickDevice.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_joystick_device_8h</filename>
    <includes id="_device_8h" name="Device.h" local="yes" imported="no">Device.h</includes>
    <includes id="_joystick_state_8h" name="JoystickState.h" local="yes" imported="no">JoystickState.h</includes>
    <includes id="_input_device_info_8h" name="InputDeviceInfo.h" local="yes" imported="no">InputDeviceInfo.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <includes id="_event_queue_8h" name="EventQueue.h" local="yes" imported="no">EventQueue.h</includes>
    <class kind="class">sw::input::JoystickDevice</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae95b548d5ca6dbcabdf7454c6268acb6</anchor>
      <arglist>(JoystickDevice)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JoystickState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_joystick_state_8h</filename>
    <class kind="class">sw::input::JoystickState</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>KeyboardDevice.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_keyboard_device_8h</filename>
    <includes id="_device_8h" name="Device.h" local="yes" imported="no">Device.h</includes>
    <includes id="_keyboard_state_8h" name="KeyboardState.h" local="yes" imported="no">KeyboardState.h</includes>
    <includes id="_input_device_info_8h" name="InputDeviceInfo.h" local="yes" imported="no">InputDeviceInfo.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <includes id="_event_queue_8h" name="EventQueue.h" local="yes" imported="no">EventQueue.h</includes>
    <class kind="class">sw::input::KeyboardDevice</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a09c20adaa98c5f40657f850a1dbb57db</anchor>
      <arglist>(KeyboardDevice)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeyboardState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_keyboard_state_8h</filename>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <includes id="_key_state_8h" name="KeyState.h" local="yes" imported="no">KeyState.h</includes>
    <class kind="class">sw::input::KeyboardState</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="variable">
      <type>const uint8</type>
      <name>KEYBOARD_STATE_KEYS_NUMBER</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ad58528bb8b4f8e72f9c88e43efde5574</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeyState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_key_state_8h</filename>
    <includes id="_types_definitions_8h" name="TypesDefinitions.h" local="yes" imported="no">swCommonLib/Common/TypesDefinitions.h</includes>
    <class kind="class">sw::input::KeyState</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>MouseDevice.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_mouse_device_8h</filename>
    <includes id="_device_8h" name="Device.h" local="yes" imported="no">Device.h</includes>
    <includes id="_mouse_state_8h" name="MouseState.h" local="yes" imported="no">MouseState.h</includes>
    <includes id="_input_device_info_8h" name="InputDeviceInfo.h" local="yes" imported="no">InputDeviceInfo.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <includes id="_event_queue_8h" name="EventQueue.h" local="yes" imported="no">EventQueue.h</includes>
    <class kind="class">sw::input::MouseDevice</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a30dd2ffa0f1e9a853c0a22060f31562a</anchor>
      <arglist>(MouseDevice)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MouseState.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputCore/</path>
    <filename>_mouse_state_8h</filename>
    <includes id="_key_state_8h" name="KeyState.h" local="yes" imported="no">KeyState.h</includes>
    <includes id="_input_device_event_8h" name="InputDeviceEvent.h" local="yes" imported="no">InputDeviceEvent.h</includes>
    <class kind="class">sw::input::MouseState</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="variable">
      <type>const int8</type>
      <name>MOUSE_STATE_MAX_NUM_BUTTONS</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a7cc9fd3f6dedbd85a5f7686c1c969837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8</type>
      <name>MOUSE_STATE_MAX_NUM_AXES</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae3eb4ab63163eb8dd869be18b2eb20f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WinApiInputProxy.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputWinApi/</path>
    <filename>_win_api_input_proxy_8cpp</filename>
    <includes id="_win_api_input_proxy_8h" name="WinApiInputProxy.h" local="yes" imported="no">WinApiInputProxy.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NUM_WINAPI_MOUSE_BUTTONS</name>
      <anchorfile>_win_api_input_proxy_8cpp.html</anchorfile>
      <anchor>a0f4639d2467fd4a3c72969a0bf99fa7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_WINAPI_KEYBOARD_BUTTONS</name>
      <anchorfile>_win_api_input_proxy_8cpp.html</anchorfile>
      <anchor>ab2fb96a5958e819834ead1b1115d1be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ArrayStaticInitializerFun</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a4841092a1eda8655952095a12cf92f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Mouse::PhysicalButtons</type>
      <name>MOUSE_BUTTONS_MAPPING</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ac0849777c613289845b24c81385a9f24</anchor>
      <arglist>[NUM_WINAPI_MOUSE_BUTTONS]</arglist>
    </member>
    <member kind="variable">
      <type>Keyboard::PhysicalKeys</type>
      <name>KEYBOARD_BUTTONS_MAPPING</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae4364bfacf5ece46258ab0848064d3e6</anchor>
      <arglist>[NUM_WINAPI_KEYBOARD_BUTTONS]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WinApiInputProxy.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputWinApi/</path>
    <filename>_win_api_input_proxy_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <includes id="_mouse_device_8h" name="MouseDevice.h" local="yes" imported="no">swInputLibrary/InputCore/MouseDevice.h</includes>
    <includes id="_keyboard_device_8h" name="KeyboardDevice.h" local="yes" imported="no">swInputLibrary/InputCore/KeyboardDevice.h</includes>
    <includes id="_joystick_device_8h" name="JoystickDevice.h" local="yes" imported="no">swInputLibrary/InputCore/JoystickDevice.h</includes>
    <class kind="class">sw::input::WinApiInputProxy</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="file">
    <name>WPFInputProxy.cpp</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputWPF/</path>
    <filename>_w_p_f_input_proxy_8cpp</filename>
    <includes id="_w_p_f_input_proxy_8h" name="WPFInputProxy.h" local="yes" imported="no">WPFInputProxy.h</includes>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NUM_WPF_MOUSE_BUTTONS</name>
      <anchorfile>_w_p_f_input_proxy_8cpp.html</anchorfile>
      <anchor>a90f859f0d58753f9c282022a7fc0ae1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_WPF_KEYBOARD_BUTTONS</name>
      <anchorfile>_w_p_f_input_proxy_8cpp.html</anchorfile>
      <anchor>aae693ae497a8e13d0763507c4ab9101e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WPFInputProxy.h</name>
    <path>D:/ProgramyVS/SWLibraries/swInputLibrary/InputWPF/</path>
    <filename>_w_p_f_input_proxy_8h</filename>
    <includes id="_i_input_8h" name="IInput.h" local="yes" imported="no">swInputLibrary/InputCore/IInput.h</includes>
    <includes id="_mouse_device_8h" name="MouseDevice.h" local="yes" imported="no">swInputLibrary/InputCore/MouseDevice.h</includes>
    <includes id="_keyboard_device_8h" name="KeyboardDevice.h" local="yes" imported="no">swInputLibrary/InputCore/KeyboardDevice.h</includes>
    <includes id="_joystick_device_8h" name="JoystickDevice.h" local="yes" imported="no">swInputLibrary/InputCore/JoystickDevice.h</includes>
    <class kind="class">sw::input::WPFInputProxy</class>
    <namespace>sw</namespace>
    <namespace>sw::input</namespace>
  </compound>
  <compound kind="class">
    <name>sw::gui::AccessKey</name>
    <filename>classsw_1_1gui_1_1_access_key.html</filename>
    <member kind="function" protection="private">
      <type></type>
      <name>AccessKey</name>
      <anchorfile>classsw_1_1gui_1_1_access_key.html</anchorfile>
      <anchor>af06ec2ced2fbe07cc494dbdb89179122</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AccessKey</name>
      <anchorfile>classsw_1_1gui_1_1_access_key.html</anchorfile>
      <anchor>a3fdec7475303c08732387b66568cbf93</anchor>
      <arglist>(const AccessKey &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AccessKey</name>
      <anchorfile>classsw_1_1gui_1_1_access_key.html</anchorfile>
      <anchor>a64d4e80e889b866dad45f3366acf46be</anchor>
      <arglist>(const AccessKey &amp;&amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>GUISystem</name>
      <anchorfile>classsw_1_1gui_1_1_access_key.html</anchorfile>
      <anchor>ae4d60f87b1e7e602dbc0d874da3778d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>EventsSystem</name>
      <anchorfile>classsw_1_1gui_1_1_access_key.html</anchorfile>
      <anchor>a607293918aae2e88faf949ecdd0a4851</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AnimationImpl</name>
    <filename>class_animation_impl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>AnimationTyped</base>
    <member kind="function">
      <type></type>
      <name>AnimationImpl</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a4b26ace01b66cf2958285c0a58a1a98c</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AnimationImpl</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>ace462c5826a6ec1ef2fd793d95e3c77d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Animate</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>aad32977821904b686b6148ef3894dae3</anchor>
      <arglist>(EngineObject *object, TimelineBase *timeline) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Animate</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a4df9de0fec07f520e9fad2d790082a51</anchor>
      <arglist>(EngineObject *object, TimeType time) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AddKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a84f61ecc458179bbb723bab935bbfbf2</anchor>
      <arglist>(TimeType time, const KeyType &amp;value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AddKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>aad4c4d54fc70d3004085193001315c69</anchor>
      <arglist>(TimeType time, const KeyType &amp;value, InterpolatorType interpolatorType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a16f61ae05c761ce722bf132151b05da5</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a501300efda0f5ed709a36de0f62fdb5e</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RemoveKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a618b44c917c564a892a46b0879063c80</anchor>
      <arglist>(TimeType time) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a41162c1c771a08fc405fb179a65e4534</anchor>
      <arglist>(Size idx, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>adaa20930fea451f170a9bbecd9eb3606</anchor>
      <arglist>(Size idx, InterpolatorType interpolatorType) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Interpolator *</type>
      <name>GetInterpolator</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a944d2003578c8fc139c9c9a24a11c65f</anchor>
      <arglist>(Size idx) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Key&lt; KeyType &gt; *</type>
      <name>GetKey</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>a6d144d8dfa12baf72e6ca22d32efc1e4</anchor>
      <arglist>(TimeType time) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeySet&lt; KeyType &gt; &amp;</type>
      <name>GetKeySet</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>ab40ebfe6f3e0e01108a48cb2b4a30728</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>AnimEvaluator&lt; KeyType, AddressType &gt;</type>
      <name>Evaluator</name>
      <anchorfile>class_animation_impl.html</anchorfile>
      <anchor>ae1614280b62d060ccc733851876564c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AnimationSet</name>
    <filename>class_animation_set.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationSet</name>
      <anchorfile>class_animation_set.html</anchorfile>
      <anchor>a24ba250b3e0060c8f7d30b1eda349cfe</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnimationSet</name>
      <anchorfile>class_animation_set.html</anchorfile>
      <anchor>a48fdc6b4d455c6cfc48dffcbda74af36</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; IAnimation * &gt;</type>
      <name>m_animations</name>
      <anchorfile>class_animation_set.html</anchorfile>
      <anchor>a134ae8b1f6aceef49ce3fd74b3d18f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Ptr&lt; TimelineBase &gt; &gt;</type>
      <name>m_timelines</name>
      <anchorfile>class_animation_set.html</anchorfile>
      <anchor>ab38f1592e6c9ca1da10d30dd1ed61d99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AnimationTyped</name>
    <filename>class_animation_typed.html</filename>
    <templarg></templarg>
    <base>IAnimation</base>
    <member kind="typedef">
      <type>IInterpolator&lt; KeyType &gt;</type>
      <name>Interpolator</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>af42cf587262b04a8a1904eb9e5f9a3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AnimationTyped</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>a70e1c465313b13ceab40211a344e85b4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>AddKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>ad5baa21eb1fb47b30c7185a106ea2a18</anchor>
      <arglist>(TimeType time, const KeyType &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>AddKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>a5e6120138089d7480b200cdf34c93313</anchor>
      <arglist>(TimeType time, const KeyType &amp;value, InterpolatorType interpolatorType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>afdc1161df28ab7102a9ef28af2ead8cb</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>ae5479194ea8bcfb1ca965aeb986acae6</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>RemoveKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>a70ae1f7bee83f8b7aa6543fbaad19081</anchor>
      <arglist>(TimeType time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>af5c89245890aeb448d05de677c423f6d</anchor>
      <arglist>(Size idx, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>aac92f2255cc64061b0660c8282f9d45a</anchor>
      <arglist>(Size idx, InterpolatorType interpolatorType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Interpolator *</type>
      <name>GetInterpolator</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>a9a784163e47c2cd1ae551f296e5e8f05</anchor>
      <arglist>(Size idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Key&lt; KeyType &gt; *</type>
      <name>GetKey</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>a79e204f2ebdd000e0cffbde0edb4a1ad</anchor>
      <arglist>(TimeType time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KeySet&lt; KeyType &gt; &amp;</type>
      <name>GetKeySet</name>
      <anchorfile>class_animation_typed.html</anchorfile>
      <anchor>aebe4f53ad8161154d3cd3fb412981840</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AnimEvaluator</name>
    <filename>class_anim_evaluator.html</filename>
    <templarg>KeyType</templarg>
    <templarg>AddressType</templarg>
    <member kind="typedef">
      <type>IInterpolator&lt; KeyType &gt;</type>
      <name>Interpolator</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a98c1fa2dae99db2fbf4ebe0e2f974f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimEvaluator</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>aeec99976b007704ced41a05e872f6224</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnimEvaluator</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a3ac7d3abc67df88600c247dccb9faeb0</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AnimEvaluator</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a9c3935bac70db8365b890efbefce6f8b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Evaluate</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a17e5dc45ef195861b73b4f324addbb23</anchor>
      <arglist>(EngineObject *object, TimeType time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a4cffec9695c5fbf9b057030694a13255</anchor>
      <arglist>(TimeType time, const KeyType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a846c53216d74bc7833831dfe58a0ec43</anchor>
      <arglist>(TimeType time, const KeyType &amp;value, InterpolatorType interpolatorType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>ab7fc733fcfbcbfe857409d96d6192dcc</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a466a1dcf75aa96351487cb7687b5b43b</anchor>
      <arglist>(TimeType time, const KeyType &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>afaa7f372c1ad07e9e4b0dbd9e794de40</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a12edee798a040aeb37d297ad53a16f1f</anchor>
      <arglist>(Size idx, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator)</arglist>
    </member>
    <member kind="function">
      <type>const Key&lt; KeyType &gt; *</type>
      <name>GetKey</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>aa60a520284ec04caf931efc952309429</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeySet&lt; KeyType &gt; &amp;</type>
      <name>GetKeySet</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>ae942a6e7bd2cc21838319e75b4e937df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeySet&lt; KeyType &gt;</type>
      <name>m_keySet</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>a8cb233b36302905a928e7c7bbf903fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AddressType</type>
      <name>m_param</name>
      <anchorfile>class_anim_evaluator.html</anchorfile>
      <anchor>aa160364ab6870466f269d0422220e0d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Application</name>
    <filename>class_application.html</filename>
    <base>sw::gui::GUISystem</base>
    <member kind="function">
      <type></type>
      <name>Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a6ad5b91f1888b2e90aceced60400e9db</anchor>
      <arglist>(int argc, char **argv, sw::gui::INativeGUI *gui)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a062db49b40383051e3d3c2bd50ec9670</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a6663f47f035f8c0b030fea7592f86ab1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>OnInitialized</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>aecdd5e936964b2b6bc8b05eecbc278c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>OnClosing</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a39ffc2172ca6822c5b62734d63e10642</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>OnIdle</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ac8b6b808aacdee71f6d7c930f1a39b64</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::Attribute</name>
    <filename>classsw_1_1_attribute.html</filename>
    <member kind="function">
      <type></type>
      <name>Attribute</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>a408c742f63e96f8ae4b0c6b4ab1ca5ba</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Attribute</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>acdc1956f50a2b8e21f2ada695840a788</anchor>
      <arglist>(AttributeReprPtr attribPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Attribute</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>ab462dbde7ef21a6f9e246e204c8ddc12</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>a02dab8fce01301721b78574c50684d44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AttributeType</type>
      <name>GetType</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>aaf764880bda667fa80f03d829852919f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetSize</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>a4ac7989f35e4c3b5ab6ad85bcad20112</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>a64b12636c68de396783a3cc0584b9a16</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeReprPtr</type>
      <name>m_attribPtr</name>
      <anchorfile>classsw_1_1_attribute.html</anchorfile>
      <anchor>aff338a2f7d960f0253535fdbcdcef616</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::AttributeHeader</name>
    <filename>structsw_1_1_attribute_header.html</filename>
    <member kind="function">
      <type></type>
      <name>AttributeHeader</name>
      <anchorfile>structsw_1_1_attribute_header.html</anchorfile>
      <anchor>a72bfdab957df3bf72fab05602337d462</anchor>
      <arglist>(AttributeType type)</arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>AttribSize</name>
      <anchorfile>structsw_1_1_attribute_header.html</anchorfile>
      <anchor>aa104f5fe17c2266dc3a27b759a0b75fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AttributeType</type>
      <name>AttribType</name>
      <anchorfile>structsw_1_1_attribute_header.html</anchorfile>
      <anchor>a853cb2c401216157c7077149621405f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::AttributeRepr</name>
    <filename>classsw_1_1_attribute_repr.html</filename>
    <member kind="function">
      <type></type>
      <name>AttributeRepr</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a7f3857797d06d5fc65a354d150b62373</anchor>
      <arglist>(ImplHCF *hcf, AttributeType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AttributeRepr</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a7abf5b231591a6a1caf3c65d23a18343</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>AttributeHeader &amp;</type>
      <name>AccessHeader</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a1d2328040851b5bd6cd444c89b38b9cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillAttribute</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a019cc24757974c75d2cca09efafd92c6</anchor>
      <arglist>(const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNextAttribute</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>addf32c480aa831e71a23b4d6b70419e0</anchor>
      <arglist>(AttributeReprPtr &amp;attribPtr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a19ee1a427d2ff95e31f073df9ec70512</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a5771e50e7fc356ad19529e5351349a69</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImplHCF *</type>
      <name>m_hcf</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a9a89e2b965fdd827385cd41825ae49d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeHeader</type>
      <name>m_header</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>ad3473944d88e3111bfcb62fa3f366e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeReprPtr</type>
      <name>m_nextAttrib</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>aa457136f0a55694297ecc5ff90aa60a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_absolutOffset</name>
      <anchorfile>classsw_1_1_attribute_repr.html</anchorfile>
      <anchor>a8f5229574046f633d36650abb4f1dc65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::AxisEvent</name>
    <filename>structsw_1_1input_1_1_axis_event.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>Delta</name>
      <anchorfile>structsw_1_1input_1_1_axis_event.html</anchorfile>
      <anchor>a6ed8cb1410f181ce98233c4c479db9de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mouse::PhysicalAxes</type>
      <name>Axis</name>
      <anchorfile>structsw_1_1input_1_1_axis_event.html</anchorfile>
      <anchor>aed2a1e7ba86aaaf706c665545d1e7fc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BindBufferCommand</name>
    <filename>struct_bind_buffer_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>Buffer</name>
      <anchorfile>struct_bind_buffer_command.html</anchorfile>
      <anchor>a4b55105fd45262c58edb0631ddb89ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>BufferSlot</name>
      <anchorfile>struct_bind_buffer_command.html</anchorfile>
      <anchor>a10e10b41d89b9ec94cf2736098457192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>BindToShader</name>
      <anchorfile>struct_bind_buffer_command.html</anchorfile>
      <anchor>a5bd72616b16052c9563a66d7b8ddb0b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BlendingInfo</name>
    <filename>struct_blending_info.html</filename>
    <member kind="function">
      <type></type>
      <name>BlendingInfo</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a149484ae3c65eea3da76b8da8b2393fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>ad2d1ad4a44822c8808b8aa7b3db2e654</anchor>
      <arglist>(const BlendingInfo &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>CustomBlendFactor</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a40e7b09a0fee1022c072f8919ba5139a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EnableBlending</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a1eee9ae3e96633692b5ee97fa59b27f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendOperation</type>
      <name>ColorOperation</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a3c66b666a943656037a161fa14f5e4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendOperation</type>
      <name>AlphaOperation</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a5eb129386a21e8590f7c252656a555ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendFactor</type>
      <name>SrcColorBlend</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a48b2d2cf933d57709a1be26f13ca4a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendFactor</type>
      <name>DstColorBlend</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a67d54dab4d97b62c0e45804be669fb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendFactor</type>
      <name>SrcAlphaBlend</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a47220232abc991240de339d63c972dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendFactor</type>
      <name>DstAlphaBlend</name>
      <anchorfile>struct_blending_info.html</anchorfile>
      <anchor>a63b509e728fb28563c9a57babc4eb476</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BlendingState</name>
    <filename>class_blending_state.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type></type>
      <name>BlendingState</name>
      <anchorfile>class_blending_state.html</anchorfile>
      <anchor>aadcd86808b6516f1b811676383609970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const BlendingInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_blending_state.html</anchorfile>
      <anchor>a7fc2802c5c847ecf66f6678201465a23</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BlendingState</name>
      <anchorfile>class_blending_state.html</anchorfile>
      <anchor>a6e281e679a64c9e4700965e927bdbb3b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_blending_state.html</anchorfile>
      <anchor>af2ac63b4e3f821b254fd16029149cae8</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; BlendingState &gt;</name>
      <anchorfile>class_blending_state.html</anchorfile>
      <anchor>a6dbd4b862d1c18d60adf4445a81ea532</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::Brush</name>
    <filename>classsw_1_1gui_1_1_brush.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>Brush</name>
      <anchorfile>classsw_1_1gui_1_1_brush.html</anchorfile>
      <anchor>a94978302dba835594bedd9633a71e50b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Brush</name>
      <anchorfile>classsw_1_1gui_1_1_brush.html</anchorfile>
      <anchor>a1bb7c1f6af0407f051b67abdaaf5265f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_brush.html</anchorfile>
      <anchor>a4d06c72462708b3a647aac469b3c9666</anchor>
      <arglist>(EngineObject)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BufferInfo</name>
    <filename>struct_buffer_info.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferInfo</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a6e65cdaaf9344f024c1d3b4f2b421e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetName</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a9b646b7d0f1be85d84a71026b516ef10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>NumElements</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a49995d6680465550cc4487f25f97b0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>ElementSize</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>af7f9d8ce470d4a7952600a4a8f4ed41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rttr::type</type>
      <name>DataType</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>af3e3ecf9394c7b28ecd49a0f2424115e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceUsage</type>
      <name>Usage</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a26e56d2a13d1655f77f81cea5fe2e649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferType</type>
      <name>BufferType</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>ab7be865a53301bae8898475062f9b7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>filesystem::Path</type>
      <name>Name</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>afc146e027b14c3c58fc6d7b6dd67b25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PrimitiveTopology</type>
      <name>Topology</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a661e0403d82080799bc66f7dd56ad1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourcePtr&lt; ShaderInputLayout &gt;</type>
      <name>VertexLayout</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a1dab5aa0c6f7b10a3b803544dd01fd09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Use4BytesIndex</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>ac2fc83e01f7ae5d747444dd3258beef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PrimitiveTopology</type>
      <name>Topology</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a661e0403d82080799bc66f7dd56ad1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourcePtr&lt; ShaderInputLayout &gt;</type>
      <name>VertexLayout</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>a1dab5aa0c6f7b10a3b803544dd01fd09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Use4BytesIndex</name>
      <anchorfile>struct_buffer_info.html</anchorfile>
      <anchor>ac2fc83e01f7ae5d747444dd3258beef0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BufferInitData</name>
    <filename>struct_buffer_init_data.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferInitData</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>a546568d9fda4f6175bdd64d83d51b335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const uint8 *</type>
      <name>Data</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>a2ad5bc4632f39ccbf309ad739e7b44b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>NumElements</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>a68d7913ff34aed96311936632f64d845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>ElementSize</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>abe2bdba5400a1b4299a2be62cce9971f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rttr::type</type>
      <name>DataType</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>a65c3bfdabc1a784e0fcdae3e27fdc969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceUsage</type>
      <name>Usage</name>
      <anchorfile>struct_buffer_init_data.html</anchorfile>
      <anchor>a0ccb0bb882506bc1fa9c09d367685721</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BufferObject</name>
    <filename>class_buffer_object.html</filename>
    <base>IBuffer</base>
    <member kind="function">
      <type></type>
      <name>BufferObject</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a009c3b3ea8f2c817e56d31bfdeeb7cb2</anchor>
      <arglist>(unsigned int elementSize, unsigned int elementCount)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetStride</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a4f25bc327bf7481c35c63f7654e17c7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetElementSize</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a1e4338bbe35d85057bbdfd46f4c67796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetElementCount</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a41f5266d41d07279ebc2fdec47178bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a38697139de165cc41fd2ce8b2c0902ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~BufferObject</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a57c00f2a5839d155f73884be115e2807</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_elementSize</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a2bffb3aeb202f4fa51e3986453abe4e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_elementCount</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a69abc95a748a6263f020adb4028f172a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; BufferObject &gt;</name>
      <anchorfile>class_buffer_object.html</anchorfile>
      <anchor>a69265f2279e713ca5679a432b4ab1bd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::ButtonEvent</name>
    <filename>structsw_1_1input_1_1_button_event.html</filename>
    <member kind="variable">
      <type>KeyState</type>
      <name>State</name>
      <anchorfile>structsw_1_1input_1_1_button_event.html</anchorfile>
      <anchor>afe26a9abc2182fe2629864c5d7563b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mouse::PhysicalButtons</type>
      <name>Button</name>
      <anchorfile>structsw_1_1input_1_1_button_event.html</anchorfile>
      <anchor>a77fceb82885b3547f8cc2ccacf68255c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::CharacterEvent</name>
    <filename>structsw_1_1input_1_1_character_event.html</filename>
    <member kind="variable">
      <type>wchar_t</type>
      <name>Character</name>
      <anchorfile>structsw_1_1input_1_1_character_event.html</anchorfile>
      <anchor>a7521d0c1f9cab2b288aea51fe3bfbc35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::Chunk</name>
    <filename>classsw_1_1_chunk.html</filename>
    <member kind="function">
      <type></type>
      <name>Chunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a480e652bd80a36c643b76cbe8c5078a4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Chunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a7c05005205e2ff511532c8664652efd1</anchor>
      <arglist>(ChunkReprPtr chunkRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Chunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a7e49104ef07d0381e3befa0d6257e7be</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a9e5be5011aea0db61f8901ba17edd92d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a7d0e33d88b420fa0905afbbf0d7cf387</anchor>
      <arglist>(Chunk other) const </arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>CreateChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a78a382ada4e7c0d30c9dda9a5cb84185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>NextChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac30e413dfdc3000ba925d8bc861690c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>FirstChild</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>af33a02f5ef2552ff0913d006fb7c6034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasChildren</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac0095ddb11af89b1e2bc75c418ca5e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>ParentChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a4cd738c166e0d1235dd80b7a2260fa07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Fill</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a53428125c52d8142416b88cfac286d64</anchor>
      <arglist>(const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>DataUPack</type>
      <name>StealData</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a450eb4ae97dc76186c089d1012d530cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataPack</type>
      <name>AccessData</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a0552eba7d27b39944e526bcdeaab54fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>aeea1c2f96f3cd2040a99f822eda7d1b8</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac1c63856874545e6b7a43d978c509846</anchor>
      <arglist>(AttributeType type, const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a6d6dfa2e687e05e56102f336d9c8c78b</anchor>
      <arglist>(const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a6a3f615bc6f9ecb21a6ca82bc0579772</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkReprPtr</type>
      <name>m_chunkPtr</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a9d5a659f65dfadac08e01fb383c62b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>CreateChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a78a382ada4e7c0d30c9dda9a5cb84185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>NextChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac30e413dfdc3000ba925d8bc861690c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>FirstChild</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>af33a02f5ef2552ff0913d006fb7c6034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasChildren</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac0095ddb11af89b1e2bc75c418ca5e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>ParentChunk</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a4cd738c166e0d1235dd80b7a2260fa07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Fill</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a53428125c52d8142416b88cfac286d64</anchor>
      <arglist>(const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>DataUPack</type>
      <name>StealData</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a450eb4ae97dc76186c089d1012d530cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataPack</type>
      <name>AccessData</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a0552eba7d27b39944e526bcdeaab54fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>aeea1c2f96f3cd2040a99f822eda7d1b8</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>ac1c63856874545e6b7a43d978c509846</anchor>
      <arglist>(AttributeType type, const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk.html</anchorfile>
      <anchor>a6d6dfa2e687e05e56102f336d9c8c78b</anchor>
      <arglist>(const AttributeStruct &amp;content)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::ChunkHeader</name>
    <filename>structsw_1_1_chunk_header.html</filename>
    <member kind="function">
      <type></type>
      <name>ChunkHeader</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>a998d85e518c0522c1f209c09787c2bbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>ChunkHead</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>a0770741d629a06bf4cb42099629dfdad</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HasChildren</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>a10851a30568e101565faaa620a7fe437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>DataOffset</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>a6e06682dc7d9a81e320ecebd383790e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>NextChunk</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>aeed0f24f94b09df1440f4ea250cd88ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>DataSize</name>
      <anchorfile>structsw_1_1_chunk_header.html</anchorfile>
      <anchor>ad3d6de955054ce5ead8270442ed25a24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::ChunkNameAttrib</name>
    <filename>classsw_1_1_chunk_name_attrib.html</filename>
    <base>sw::IAttribute</base>
    <member kind="function">
      <type></type>
      <name>ChunkNameAttrib</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>a37f1eec9abbebdcdfc755c608f8d200a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChunkNameAttrib</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>a4100f38d48ff15dd437669e6b9ca6a92</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChunkNameAttrib</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>a8b550781ef9522336f014d84fe619fc8</anchor>
      <arglist>(std::string &amp;&amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChunkNameAttrib</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>acd29bdbcc680af450b64a603648d6f2a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ParseMemory</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>a666ea455862b3e8080b8e26631390c50</anchor>
      <arglist>(DataPtr data, Size size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>aa000ceea2c827b73848ffe582d878c7d</anchor>
      <arglist>(DataPtr data, Size size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Size</type>
      <name>ComputeSize</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>afc3fdc11341b641fd07371a08c73c8e0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AttributeType</type>
      <name>GetType</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>ade1f59a0688ef1d61d7217b0b1a97694</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ChunkName</name>
      <anchorfile>classsw_1_1_chunk_name_attrib.html</anchorfile>
      <anchor>a6a135135acaec1221ca225d94ba4e798</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::ChunkRepr</name>
    <filename>classsw_1_1_chunk_repr.html</filename>
    <member kind="function">
      <type>Chunk</type>
      <name>CreateChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ac95971dde7df5d948d81a92360703d9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>NextChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>aee3b8a8c10c6bd3bab7eeba5e941f143</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>FirstChild</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a276ae9232bce909f54470fd688bc3de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasChildren</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a2609c2bc36c2df6b5439f8106b449933</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>ParentChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a83c71647eb1d0d204b0dbb3102507ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>af6b02c85c8fffa84b88368a68ab9b6f9</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Fill</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a71c077aa0ad9b042747be4468b3598ba</anchor>
      <arglist>(const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>DataUPack</type>
      <name>StealData</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a57358d737a96e4d29a1f84488b33d3fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataPack</type>
      <name>AccessData</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ab272fdd86fe8c4ef09a1015211fb8ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNextChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a0617f8eb66638e25a2b1da1e57a37d62</anchor>
      <arglist>(ChunkReprPtr &amp;newChunk)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckValidity</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>afb71d648fa156e5ab3c064a07de6223a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChunkReprPtr</type>
      <name>CreateFromFile</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>afbe6095c1d57ae1b25e29e391248e751</anchor>
      <arglist>(ImplHCF *hcf, ChunkReprPtr parent, Size fileOffset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChunkReprPtr</type>
      <name>Create</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a356adfc139b77229b5a78847e3f35fe4</anchor>
      <arglist>(ImplHCF *hcf, ChunkReprPtr parent)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ac1a7532af7b91d65b9c408bb284212d8</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a0fc634c0922c46be5a4615550138e058</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ChunkRepr</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>acee6c4e37ba6dc9c40a91d5a4484f8eb</anchor>
      <arglist>(ImplHCF *hcf, ChunkReprPtr &amp;parent)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ChunkRepr</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a922de933bb492e83d6f88c070fb41323</anchor>
      <arglist>(ImplHCF *hcf, ChunkReprPtr &amp;parent, Size fileOffset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanAddAttribute</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a67c247caf960366526f44879ff8afffc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanCreateChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>af7373968f65f7b40caa34764966cf67f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanFillData</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a041cfe40e18f73d369790d376e1e3cad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanLoadData</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>af3090d38ee038be94c67cd2b07bbf215</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WriteHeader</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>abea823a3984411a3b79d7efce21cee46</anchor>
      <arglist>(Size revertOffset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>LoadHeader</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>aae7df986a46d88030140faefc07fd234</anchor>
      <arglist>(Size revertOffset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateHeader</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ab230c1fbfd4a6bb82f4feecb1dfaaf2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DataUPack</type>
      <name>LoadData</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a2285e66d00b18627a1d9326e29df7f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImplHCF *</type>
      <name>m_hcf</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a9320f310cc2b076c4880c21fb6a3322a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkHeader</type>
      <name>m_header</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a3fbb848f9d6e576f40965cca11fe968e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_absolutOffset</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ad0ac965312820fcdb5882276739e7f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkReprWPtr</type>
      <name>m_parent</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>ae4f6d8fb949c5aebed81b3a00d2c1593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkReprPtr</type>
      <name>m_nextChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a1f8f6a94eab4296226b3bcc6c1bf7fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkReprPtr</type>
      <name>m_childChunk</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a07573b8df6957c911ddabf2ecf6e1084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeReprPtr</type>
      <name>m_firstAttrib</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>a6c7d1e6503954af02a5ae0b0cd8308be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DataUPack</type>
      <name>m_data</name>
      <anchorfile>classsw_1_1_chunk_repr.html</anchorfile>
      <anchor>af66faacf4cd504e6fdad2f92e2bac7b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ClearRenderTargetCommand</name>
    <filename>struct_clear_render_target_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>RenderTargetObject *</type>
      <name>RenderTarget</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>a396158318127902101155b516d57ada4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>ClearColor</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>aff0f83f839fae586f3a3c232da300e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>DepthValue</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>aaf097314bdca20f76ceea6fa3eb9d324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>StencilValue</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>a284b20c07aa5a057a11181b36dcf1e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ClearDepth</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>a8ed5bddef90f23867c8f0665ca833d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ClearStencil</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>a78577fa56360fa7841600e5a2fe3f89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ClearRenderTarget</name>
      <anchorfile>struct_clear_render_target_command.html</anchorfile>
      <anchor>a10b40f6ca20e3f63b60f6311fca50d23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::CommandLineArgs</name>
    <filename>structsw_1_1gui_1_1_command_line_args.html</filename>
    <member kind="function">
      <type></type>
      <name>CommandLineArgs</name>
      <anchorfile>structsw_1_1gui_1_1_command_line_args.html</anchorfile>
      <anchor>ad75f433964645fa4b29b99cf69d84ca0</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ProgramName</name>
      <anchorfile>structsw_1_1gui_1_1_command_line_args.html</anchorfile>
      <anchor>a30eb4405833f6169705f59239eecabc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ArgsCount</name>
      <anchorfile>structsw_1_1gui_1_1_command_line_args.html</anchorfile>
      <anchor>a40cbb15dc68f98138c8a48b0d3955631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>Arguments</name>
      <anchorfile>structsw_1_1gui_1_1_command_line_args.html</anchorfile>
      <anchor>a7eb6f32960101895a1229ef27764ddf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ComputeShader</name>
    <filename>class_compute_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>ComputeShader</name>
      <anchorfile>class_compute_shader.html</anchorfile>
      <anchor>a5ed49609315692c5fefb4559e4d868a1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_compute_shader.html</anchorfile>
      <anchor>ad9c0ba32169c040b9a6e1553b1342662</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~ComputeShader</name>
      <anchorfile>class_compute_shader.html</anchorfile>
      <anchor>aa529f5770062e4d2642ed88e75c0c528</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_compute_shader.html</anchorfile>
      <anchor>a8080ced0f7093804244e5ebaadfe0547</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; ComputeShader &gt;</name>
      <anchorfile>class_compute_shader.html</anchorfile>
      <anchor>a4eb464ca633d20cebb0cb8c23c08e862</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConstantBufferInitData</name>
    <filename>struct_constant_buffer_init_data.html</filename>
    <base>BufferInitData</base>
    <member kind="function">
      <type>BufferInfo</type>
      <name>CreateBufferInfo</name>
      <anchorfile>struct_constant_buffer_init_data.html</anchorfile>
      <anchor>ad87c6e0e81829c36a72f1bccc873ea12</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ControlShader</name>
    <filename>class_control_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>ControlShader</name>
      <anchorfile>class_control_shader.html</anchorfile>
      <anchor>a85a7566ffeb0d4dbce3fd317902532cd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_control_shader.html</anchorfile>
      <anchor>a15da77cb99cf404f01b97a7a02d4254a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~ControlShader</name>
      <anchorfile>class_control_shader.html</anchorfile>
      <anchor>a5d6cad8886dea990f5b9a37b6f23e970</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_control_shader.html</anchorfile>
      <anchor>a6973b5d226a70a69e262cad75364364d</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; ControlShader &gt;</name>
      <anchorfile>class_control_shader.html</anchorfile>
      <anchor>a26bac4cf7f3b33e5e08c7e5dfae32225</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Convert</name>
    <filename>class_convert.html</filename>
    <member kind="function">
      <type>std::enable_if&lt; !std::is_enum&lt; SrcType &gt;::value, std::string &gt;::type</type>
      <name>ToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>a797b60d9db536ff96a65a6996e5f1440</anchor>
      <arglist>(const SrcType &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; !std::is_enum&lt; SrcType &gt;::value, SrcType &gt;::type</type>
      <name>FromString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>ac15fecee3917ccc8f40c202ea7b72728</anchor>
      <arglist>(const std::string &amp;val, const SrcType &amp;defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_enum&lt; SrcType &gt;::value, std::string &gt;::type</type>
      <name>ToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>adeb9ead8ff5593f74c029f5ab05ee0b5</anchor>
      <arglist>(const SrcType &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt; std::is_enum&lt; SrcType &gt;::value, SrcType &gt;::type</type>
      <name>FromString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>a8f88c9113774390b3c5788d8b1e66088</anchor>
      <arglist>(const std::string &amp;val, const SrcType &amp;defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; std::is_enum&lt; SrcType &gt;::value, std::string &gt;::type</type>
      <name>ToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>a9d9c977ae5de9a80f9df89abbd0c4c5f</anchor>
      <arglist>(const SrcType &amp;val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; std::is_enum&lt; SrcType &gt;::value, SrcType &gt;::type</type>
      <name>FromString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>a45aec13d2ef5a3e2ec1d1abed3e00c0e</anchor>
      <arglist>(const std::string &amp;val, const SrcType &amp;defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; !std::is_enum&lt; SrcType &gt;::value, std::string &gt;::type</type>
      <name>ToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>adda06e4ad5800aa19049e8d2727df161</anchor>
      <arglist>(const SrcType &amp;val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; !std::is_enum&lt; SrcType &gt;::value, SrcType &gt;::type</type>
      <name>FromString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>ad5f44bbeb2f502b7c48e11fb9c679554</anchor>
      <arglist>(const std::string &amp;val, const SrcType &amp;defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; !std::is_enum&lt; std::wstring &gt;::value, std::string &gt;::type</type>
      <name>ToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>ab7dc56bf935eb8a236d0a28e514c09a2</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::enable_if&lt; !std::is_enum&lt; std::wstring &gt;::value, std::wstring &gt;::type</type>
      <name>FromString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>addb0f7161ba74862b817d727e3b41c90</anchor>
      <arglist>(const std::string &amp;value, const std::wstring &amp;defaultValue)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>EnumToString</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>a050609cef44839ce4888ea1ac958d1e6</anchor>
      <arglist>(SrcType defaultVal)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static SrcType</type>
      <name>StringToEnum</name>
      <anchorfile>class_convert.html</anchorfile>
      <anchor>ab180c893251fae5fb5e6659b069a0ad8</anchor>
      <arglist>(const std::string &amp;value, SrcType defaultValue)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CopyTextureCommand</name>
    <filename>struct_copy_texture_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>TextureObject *</type>
      <name>SourceTexture</name>
      <anchorfile>struct_copy_texture_command.html</anchorfile>
      <anchor>adc349e86ccc7f6606818d5075d56a393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureObject *</type>
      <name>DestinationTexture</name>
      <anchorfile>struct_copy_texture_command.html</anchorfile>
      <anchor>a17334251fbdc7b095aa4eb5edfc84d58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CosinusInterpolator</name>
    <filename>class_cosinus_interpolator.html</filename>
    <templarg></templarg>
    <base>IInterpolator</base>
    <member kind="function">
      <type></type>
      <name>CosinusInterpolator</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a8999650924132cb3afe7f93245500a37</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CosinusInterpolator</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a780c0709076e87937a93a48e30108382</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CosinusInterpolator</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a0ce21551b51de20fd4b6f6fcaa24bb6a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>Interpolate</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a6eeb95abe5ea5e7d1766a387808acad4</anchor>
      <arglist>(TimeType time, Key&lt; KeyType &gt; &amp;left, Key&lt; KeyType &gt; &amp;right) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a94e5703f470f6cb803e20377bdecf896</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>LeftTangent</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a8a7cdf61d7ea341237f1f582afe85b73</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>RightTangent</name>
      <anchorfile>class_cosinus_interpolator.html</anchorfile>
      <anchor>a4abd28601e8fb5cedbf5efc067c59595</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::CursorEvent</name>
    <filename>structsw_1_1input_1_1_cursor_event.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>OffsetX</name>
      <anchorfile>structsw_1_1input_1_1_cursor_event.html</anchorfile>
      <anchor>a59b50cb37d8ecf98a5463b9db49d4c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OffsetY</name>
      <anchorfile>structsw_1_1input_1_1_cursor_event.html</anchorfile>
      <anchor>ab43c8cdd63769448a860a3fe60aa1e20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::DataPack</name>
    <filename>structsw_1_1_data_pack.html</filename>
    <member kind="function">
      <type></type>
      <name>DataPack</name>
      <anchorfile>structsw_1_1_data_pack.html</anchorfile>
      <anchor>adc0bb8813de914b409881d8e5bf543c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>DataPtr</type>
      <name>Data</name>
      <anchorfile>structsw_1_1_data_pack.html</anchorfile>
      <anchor>a1ac491da5994ac1a54ce7775fee85d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>DataSize</name>
      <anchorfile>structsw_1_1_data_pack.html</anchorfile>
      <anchor>a872ad83194ae196a31dff5338c3d55d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::DataUPack</name>
    <filename>structsw_1_1_data_u_pack.html</filename>
    <member kind="function">
      <type></type>
      <name>DataUPack</name>
      <anchorfile>structsw_1_1_data_u_pack.html</anchorfile>
      <anchor>ae441a30fd0bd9aaf38d83c04ae1a6b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>DataUPtr</type>
      <name>Data</name>
      <anchorfile>structsw_1_1_data_u_pack.html</anchorfile>
      <anchor>a8934450cae6926afda4f80495bef7003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>DataSize</name>
      <anchorfile>structsw_1_1_data_u_pack.html</anchorfile>
      <anchor>ab31c25e77f1754f2545d5b6850e21063</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::DebugEvent</name>
    <filename>structsw_1_1input_1_1_debug_event.html</filename>
    <member kind="variable">
      <type>DeviceEvent</type>
      <name>EventContent</name>
      <anchorfile>structsw_1_1input_1_1_debug_event.html</anchorfile>
      <anchor>a97bce39f1721d7972b089d283289c269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>FrameNumber</name>
      <anchorfile>structsw_1_1input_1_1_debug_event.html</anchorfile>
      <anchor>a1ed021415463c0eb5efc7b45faa8ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>DeviceIdx</name>
      <anchorfile>structsw_1_1input_1_1_debug_event.html</anchorfile>
      <anchor>a9c55a2a1142624fd67190ed0dbdff774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceType</type>
      <name>DeviceType</name>
      <anchorfile>structsw_1_1input_1_1_debug_event.html</anchorfile>
      <anchor>ab5ed322da3a30d2539b1ab0e9540ee6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::DebugInput</name>
    <filename>classsw_1_1input_1_1_debug_input.html</filename>
    <base>sw::input::IInput</base>
    <member kind="function">
      <type></type>
      <name>DebugInput</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a47a8acb07486e5c77d90a99205a48959</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DebugInput</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a9a195017b9e42df89713ec6cb9985d7e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a80913bffb49301d13428cd8bdba43a85</anchor>
      <arglist>(const InputInitInfo &amp;initInfo) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const KeyboardState * &gt; &amp;</type>
      <name>GetKeyboardStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>ad0b2b22b3221471d1adb8bee59d491e7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const MouseState * &gt; &amp;</type>
      <name>GetMouseStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a75598a343bae4970e6a5e29fd2072c21</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const JoystickState * &gt; &amp;</type>
      <name>GetJoystickStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a4470f34294d6fb801990ff4cafb2aed2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a7763001ee153a3d1953155d72eeade74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a8dbb475dbf292d616e75ab4ddddf0e15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a43ca717dfa6ab841a8a46c20c00d680f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; const InputDeviceInfo * &gt;</type>
      <name>GetDevicesInfo</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>aa68bf21b1f4a87bc6afe429c7c8db584</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a6e0a2cb7a8a688d3dd2014e39019440f</anchor>
      <arglist>(float timeInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateDevices</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a2a98d0f3613eea018dbbf6cde453ddb6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const KeyboardState * &gt;</type>
      <name>m_keyboardsStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>ab2af9c285f9adbc562af8ba88f3c14d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const MouseState * &gt;</type>
      <name>m_mousesStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>ae0b36912ee2d7ed74ba928ccd0380f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const JoystickState * &gt;</type>
      <name>m_joysticksStates</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>aaa56fa38a2f20d1bdae654d44134264b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt;</type>
      <name>m_keyboards</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>aba0ae4e34c6c2ad214134de5dfe260d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MouseDeviceOPtr &gt;</type>
      <name>m_mouses</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a52f31b25bcfa75ad62df4f486f733c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JoystickDeviceOPtr &gt;</type>
      <name>m_joysticks</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a4586ca0691b2a7a16a5c1f7a4677008a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Timestamp</type>
      <name>m_eventNum</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a41f98bddd2661d091aa4801ab40be61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_frameNumber</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>ad72e6e6fe68c5c109399e6215103eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventCapture *</type>
      <name>m_eventCapture</name>
      <anchorfile>classsw_1_1input_1_1_debug_input.html</anchorfile>
      <anchor>a0564191e9ce36eca037a573cd2b5b0fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::DelegatesContainer</name>
    <filename>classsw_1_1gui_1_1_delegates_container.html</filename>
    <templarg>EventArgType</templarg>
    <base>sw::gui::DelegatesContainerBase</base>
    <member kind="typedef">
      <type>EventDelegate&lt; EventArgType &gt;</type>
      <name>DelegateType</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>ad9041cd56e87aeda49477d8fce440753</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DelegatesContainer</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>aafac1ac0e5728ca5565cfe2d98630c2f</anchor>
      <arglist>(EventType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DelegatesContainer</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>ac5bddd78a49baf185ac1d1f87f9fffb9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>a348a9dc5afaa64a3c9cf920269b00a4c</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDelegate</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>a31c4538e2b038b08e90cd47c505eb53d</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveDelegate</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>adfc584f732b08ee4023c3c44b6b56147</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>a38dee19c9616f76b3f44d4e3e93d20eb</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>acee8d0b59a79f815687daa47b9865767</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDelegates</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>a01a1a7726029e6feb65d54cec9264f22</anchor>
      <arglist>(UIElement *sender, IEventArgs *arguments) override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; DelegateType &gt;</type>
      <name>m_delegates</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container.html</anchorfile>
      <anchor>a33d538c7f9f34b3be00670a215a1eb07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::DelegatesContainerBase</name>
    <filename>classsw_1_1gui_1_1_delegates_container_base.html</filename>
    <member kind="function">
      <type></type>
      <name>DelegatesContainerBase</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>a0300d9c1bbd6f5ffc819fdc17be554c1</anchor>
      <arglist>(EventType eventID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DelegatesContainerBase</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>ad7737476efb685138d0231fb0bd4c33d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>EventType</type>
      <name>GetEventType</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>a06c30efdb6b8794cb7b8de2fe1cdeaff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DelegatesContainerBase *</type>
      <name>GetNextContainer</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>abadc5377c7814fd8cb7eff9b10d9a89f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddContainer</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>a862a82f5c6f2bb389a200f332e0e1811</anchor>
      <arglist>(DelegatesContainerBaseOPtr &amp;&amp;container)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveNext</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>adad904b98f5400c0c284b17bcfa965b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DelegatesContainerBaseOPtr</type>
      <name>StealRestOfList</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>a97b2cdcf5c50839a3f3ea5abe8bd6aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CallDelegates</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>ac75a8b2d655698144ca12c1a4723f365</anchor>
      <arglist>(UIElement *sender, IEventArgs *arguments)=0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DelegatesContainerBaseOPtr</type>
      <name>m_next</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>ab315f51f061c5ed5a045be1c1965b166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventType</type>
      <name>m_eventType</name>
      <anchorfile>classsw_1_1gui_1_1_delegates_container_base.html</anchorfile>
      <anchor>a15e0cbda109f3b926f30c2369a5baf2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::DependencyObject</name>
    <filename>classsw_1_1gui_1_1_dependency_object.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>DependencyObject</name>
      <anchorfile>classsw_1_1gui_1_1_dependency_object.html</anchorfile>
      <anchor>a82bff6bec994970882382f0d925e3d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DependencyObject</name>
      <anchorfile>classsw_1_1gui_1_1_dependency_object.html</anchorfile>
      <anchor>ad9c1979c5530f8709d1a75cab32632f6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EngineObject *</type>
      <name>m_dataContext</name>
      <anchorfile>classsw_1_1gui_1_1_dependency_object.html</anchorfile>
      <anchor>a4a9d17c5b92797bcf8b9316409dab31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_dependency_object.html</anchorfile>
      <anchor>a9610f2f49bbd6e8c1e563382f3100cf9</anchor>
      <arglist>(EngineObject)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DepthStencilInfo</name>
    <filename>struct_depth_stencil_info.html</filename>
    <member kind="function">
      <type></type>
      <name>DepthStencilInfo</name>
      <anchorfile>struct_depth_stencil_info.html</anchorfile>
      <anchor>a7f68831b9ca8ede7c8251d83fe36870f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_depth_stencil_info.html</anchorfile>
      <anchor>a3daa89d235aea129ec94e0f6bfaeae9b</anchor>
      <arglist>(const DepthStencilInfo &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EnableDepthTest</name>
      <anchorfile>struct_depth_stencil_info.html</anchorfile>
      <anchor>a66a6566ac82336225fb93d0fac169682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EnableStencilTest</name>
      <anchorfile>struct_depth_stencil_info.html</anchorfile>
      <anchor>a75ded0b41ad550e15f424a65d40a8312</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DepthStencilState</name>
    <filename>class_depth_stencil_state.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type></type>
      <name>DepthStencilState</name>
      <anchorfile>class_depth_stencil_state.html</anchorfile>
      <anchor>ae83e1d1a577ae8c78b30d84f153e0a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DepthStencilInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_depth_stencil_state.html</anchorfile>
      <anchor>a433e0f5b799a9168384e28ca91a3f24a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~DepthStencilState</name>
      <anchorfile>class_depth_stencil_state.html</anchorfile>
      <anchor>acdf1d6d8b81c6470405e4718be8fc4fa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_depth_stencil_state.html</anchorfile>
      <anchor>ace077cc97b23953c6cf2a46c99411569</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; DepthStencilState &gt;</name>
      <anchorfile>class_depth_stencil_state.html</anchorfile>
      <anchor>a57533712649019c6bfb161ab62e288bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DeserializerImpl</name>
    <filename>struct_deserializer_impl.html</filename>
    <member kind="function">
      <type></type>
      <name>DeserializerImpl</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a023e95934cda10bcda52af315d147600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeserializerImpl</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a023e95934cda10bcda52af315d147600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>rapidjson::Document</type>
      <name>root</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a96380c375835b696ee7b1a24431f2ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::stack&lt; rapidjson::Value * &gt;</type>
      <name>valuesStack</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>acd7d9ce7e283ace34c1ec8ac35db0476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>fileContent</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a0755c83f12a98d87597f727d631e69f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rapidxml::xml_document</type>
      <name>root</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>abf1a7be2a6489b93507c586dadb792a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::stack&lt; rapidxml::xml_node&lt;&gt; * &gt;</type>
      <name>valuesStack</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a1376105421c78106d427920eccbeb521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>errorString</name>
      <anchorfile>struct_deserializer_impl.html</anchorfile>
      <anchor>a06462d048d34e6704772ea5f39cdfb1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::Device</name>
    <filename>classsw_1_1input_1_1_device.html</filename>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classsw_1_1input_1_1_device.html</anchorfile>
      <anchor>ad64131c2c404529855aa414ccd26c4b3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Device</name>
      <anchorfile>classsw_1_1input_1_1_device.html</anchorfile>
      <anchor>ad5ded963bbdd70ec658997c9b4b43d32</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::DeviceEvent</name>
    <filename>structsw_1_1input_1_1_device_event.html</filename>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a6e7c3d23859f7fe39d439c985754210c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a9da31910f53d06e67cd8ad08f3299998</anchor>
      <arglist>(KeyEvent evt, Timestamp timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a108787062e57cff0e3d931d9855d95b9</anchor>
      <arglist>(CharacterEvent evt, Timestamp timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>adfb21ea0368ca6aad810396cd505a54c</anchor>
      <arglist>(ButtonEvent evt, Timestamp timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>af5a0726ac9f7840117a409f83b818a15</anchor>
      <arglist>(AxisEvent evt, Timestamp timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>ad78ae05f430b9db3a5e2f1af6a054128</anchor>
      <arglist>(CursorEvent evt, Timestamp timestamp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceEvent</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a081cd292a39e47f2e34d8f7b08cf3707</anchor>
      <arglist>(const DeviceEvent &amp;second)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>aefd1dba6f11f25f953aa99e26d258ee6</anchor>
      <arglist>(const DeviceEvent &amp;second)</arglist>
    </member>
    <member kind="variable">
      <type>KeyEvent</type>
      <name>Key</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a188d5e39197475dc048753f1cfdd3f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CharacterEvent</type>
      <name>Character</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>aa717c0d982121d29717d4c8edb5fb664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ButtonEvent</type>
      <name>Button</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a94c73b1d5bb9456474963ff9a3c0d55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AxisEvent</type>
      <name>Axis</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a6e73ae4e1d972e2d114f193e9f3ebf79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CursorEvent</type>
      <name>Cursor</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a4d067dab58ff460ab3eb64a31339e84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceEventType</type>
      <name>Type</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a832b0e96bb3c4aeeb364f9cbb030d428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timestamp</type>
      <name>LogicalTime</name>
      <anchorfile>structsw_1_1input_1_1_device_event.html</anchorfile>
      <anchor>a705f6c87f2287ffe83129fdf4bdba328</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dir</name>
    <filename>class_dir.html</filename>
    <member kind="function">
      <type></type>
      <name>Dir</name>
      <anchorfile>class_dir.html</anchorfile>
      <anchor>a980b2eede48ad286e81ac910871985ad</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dir</name>
      <anchorfile>class_dir.html</anchorfile>
      <anchor>a5bf277542d30873bde8b862480a0beb3</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::DirectInputModule</name>
    <filename>classsw_1_1input_1_1_direct_input_module.html</filename>
    <base>sw::input::IInput</base>
    <member kind="function">
      <type></type>
      <name>DirectInputModule</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a0e4128ad5e0b2bbfafb15652b6c12f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DirectInputModule</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a7398a2c56367dc4d3d1cd930fbc6ec4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a747b7271ea0a4aec81903467de198279</anchor>
      <arglist>(const InputInitInfo &amp;initInfo) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const KeyboardState * &gt; &amp;</type>
      <name>GetKeyboardStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a3834f76346fcfe4e8f4b0a4a4e8013a2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const MouseState * &gt; &amp;</type>
      <name>GetMouseStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ab9fdb14dde70fb5af5966ee6466845c2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const JoystickState * &gt; &amp;</type>
      <name>GetJoystickStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a105228bbcec1d285ba3bcf8b02d5aed4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a4788454ebd61058cf9b4dc475b73eb37</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a5f5f5f9bf0cfc9c6d5ff89a4eb1f8071</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ab0d5558bcc00f1e5db6821e08f55d7ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; const InputDeviceInfo * &gt;</type>
      <name>GetDevicesInfo</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ad55a74f54710d458d3516ecda0c5a760</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>aef3f242f29d6c17babd7b21f3228e94b</anchor>
      <arglist>(float timeInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateDevices</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ac0e42db4051c0e282e53d501b063c7b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CleanDirectInput</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a59a61abdc4c8e3ec393b1e22822644e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateKeyboard</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a7be67eb79b2ba80e8a4f79f4759fe662</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateMouse</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a535f5e7ed9ce0d1b8e6fd9cab7cab2c1</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateJoystick</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a3c66bf5eb95add12c71f1326df1db8d9</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HWND</type>
      <name>m_windowHandle</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a59760d0fdca705fc00204c57a367c734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LPDIRECTINPUT8</type>
      <name>m_directInput</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>abff6d202bccf1f8a4d9e949315e89b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LPDIRECTINPUTDEVICE8</type>
      <name>m_keyboardInput</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a7067f254672e051fabeacdd38e6af739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LPDIRECTINPUTDEVICE8</type>
      <name>m_mouseInput</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>aed946973133e19bd496e41cce8a2e49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const KeyboardState * &gt;</type>
      <name>m_keyboardsStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a29062cca84c5731b7d063a3d3a573db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const MouseState * &gt;</type>
      <name>m_mousesStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ab256b71095403dc2095c4d1e3e688817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const JoystickState * &gt;</type>
      <name>m_joysticksStates</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>aa0185ec0e9c29561389339bdb1ffd3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt;</type>
      <name>m_keyboards</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a458ead595f38e72c2b4d66a01511a668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MouseDeviceOPtr &gt;</type>
      <name>m_mouses</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>a11eec58cc9a63a37a80759c6e33777a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JoystickDeviceOPtr &gt;</type>
      <name>m_joysticks</name>
      <anchorfile>classsw_1_1input_1_1_direct_input_module.html</anchorfile>
      <anchor>ae202a5d219ffc266245836f49bb53e05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectProperty</name>
    <filename>class_direct_property.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>DirectProperty</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>a16953e87fe5940f72f84a208c74ef410</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DirectProperty</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>aabaade1523d56cd0a575eab8560445c9</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DirectProperty</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>a6d7ab4ba1eab4aa0c83014e0f88c11ec</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>KeyType</type>
      <name>GetValue</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>a63e9fcdfcdef565df5b8f5d954094239</anchor>
      <arglist>(EngineObject *object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>a6bdd123071c0a15bb0a1a29ebeeb9e27</anchor>
      <arglist>(EngineObject *object, KeyType &amp;value)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>rttr::property</type>
      <name>m_property</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>a64f90fb5692f85e71706b55435c24fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>rttr::variant</type>
      <name>m_object</name>
      <anchorfile>class_direct_property.html</anchorfile>
      <anchor>ad7b5e45ed02c189408f65afa42ab20d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DiscreteInterpolator</name>
    <filename>class_discrete_interpolator.html</filename>
    <templarg></templarg>
    <base>IInterpolator</base>
    <member kind="function">
      <type></type>
      <name>DiscreteInterpolator</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>ad1be91f844a831cd616cebec20bdda28</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DiscreteInterpolator</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>a83a44bbb8e2b0a8b5f3759afc7133c2a</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DiscreteInterpolator</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>acef81fba827fab4bd6f30723c645a264</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>Interpolate</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>a5184c2be36af3b02c4244e82496a0822</anchor>
      <arglist>(TimeType time, Key&lt; KeyType &gt; &amp;left, Key&lt; KeyType &gt; &amp;right) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>ac56b2e77b009f4fab45e6c845718ab9e</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>LeftTangent</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>ac931aa15fd8815a677a64591d575bbde</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>RightTangent</name>
      <anchorfile>class_discrete_interpolator.html</anchorfile>
      <anchor>a32fe39de333c0010e1b67104d28e8dc8</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::InputDispatcher::DispatchedEvent</name>
    <filename>structsw_1_1input_1_1_input_dispatcher_1_1_dispatched_event.html</filename>
    <member kind="function">
      <type></type>
      <name>DispatchedEvent</name>
      <anchorfile>structsw_1_1input_1_1_input_dispatcher_1_1_dispatched_event.html</anchorfile>
      <anchor>a71279d71ad253cb9cfde79674bb39ef6</anchor>
      <arglist>(Device *device, DeviceEvent evt)</arglist>
    </member>
    <member kind="variable">
      <type>DeviceEvent</type>
      <name>Event</name>
      <anchorfile>structsw_1_1input_1_1_input_dispatcher_1_1_dispatched_event.html</anchorfile>
      <anchor>a6b9b3b564544e53727c2aa8a8312aa3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Device *</type>
      <name>ProducerDevice</name>
      <anchorfile>structsw_1_1input_1_1_input_dispatcher_1_1_dispatched_event.html</anchorfile>
      <anchor>ac752ad9b9134a893f82b2819af19902a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::DockPanel</name>
    <filename>classsw_1_1gui_1_1_dock_panel.html</filename>
    <base>sw::gui::IPanel</base>
    <member kind="function">
      <type></type>
      <name>DockPanel</name>
      <anchorfile>classsw_1_1gui_1_1_dock_panel.html</anchorfile>
      <anchor>a947be16fa238133620ebd950455f2b83</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DockPanel</name>
      <anchorfile>classsw_1_1gui_1_1_dock_panel.html</anchorfile>
      <anchor>a1d88d19337c895fa222ece87af2ad6e3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DrawCommand</name>
    <filename>struct_draw_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>VertexBuffer</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>a41e285c1aff565ff2d400556f49de5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>IndexBufer</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>a46871f431aba8c2aa7173ffbdb4750c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ShaderInputLayout *</type>
      <name>Layout</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>ab12a662155e1075640ccd403c79731ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>BufferOffset</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>ac8c570303ff66487514af17e5448c769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>NumVertices</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>aa3db75d1dacbaa7daf0d5ccc2c3df30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>BaseVertex</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>a1e48c528db45fc403ebb7df5483fb7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PrimitiveTopology</type>
      <name>Topology</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>ac76f9dd7d224138689b230b6f33a0ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ExtendedIndex</name>
      <anchorfile>struct_draw_command.html</anchorfile>
      <anchor>af96bdf420707766c55badd05629c1706</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::DrawingContext</name>
    <filename>classsw_1_1gui_1_1_drawing_context.html</filename>
    <member kind="function">
      <type></type>
      <name>DrawingContext</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a6342d398bffdbed565e1aa91c8b6476a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawingContext</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a003b272b5f3cb0e669de51111c1e5860</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a952182a3fd2acfc01a6b17a5c6876d86</anchor>
      <arglist>(const Rect &amp;position, Brush *background)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>ab1d39b59b36a2700b1d24fe471ea1d0e</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, const DirectX::XMFLOAT4 &amp;borderWidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRoundedRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a3d6032262f4828ce030cd107e82b4f00</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, const DirectX::XMFLOAT4 &amp;borderWidth, const DirectX::XMFLOAT4 &amp;corners)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEllipse</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>aac7115c34e53bf5bee519261c8ec9b63</anchor>
      <arglist>(const Rect &amp;position, Brush *background)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEllipse</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a5d2a3462149c388b667a51f5d843ea02</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, float borderWidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a952182a3fd2acfc01a6b17a5c6876d86</anchor>
      <arglist>(const Rect &amp;position, Brush *background)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>ab1d39b59b36a2700b1d24fe471ea1d0e</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, const DirectX::XMFLOAT4 &amp;borderWidth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawRoundedRectangle</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a3d6032262f4828ce030cd107e82b4f00</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, const DirectX::XMFLOAT4 &amp;borderWidth, const DirectX::XMFLOAT4 &amp;corners)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEllipse</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>aac7115c34e53bf5bee519261c8ec9b63</anchor>
      <arglist>(const Rect &amp;position, Brush *background)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawEllipse</name>
      <anchorfile>classsw_1_1gui_1_1_drawing_context.html</anchorfile>
      <anchor>a5d2a3462149c388b667a51f5d843ea02</anchor>
      <arglist>(const Rect &amp;position, Brush *background, Brush *border, float borderWidth)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DrawInstancedCommand</name>
    <filename>struct_draw_instanced_command.html</filename>
    <base>DrawCommand</base>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>PerInstanceBuffer</name>
      <anchorfile>struct_draw_instanced_command.html</anchorfile>
      <anchor>aa13d34bb8b5bc4ae402c465c49deb426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>NumInstances</name>
      <anchorfile>struct_draw_instanced_command.html</anchorfile>
      <anchor>ae8f9d8a65a32d628b7c099026735c3bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DummyInterpolator</name>
    <filename>class_dummy_interpolator.html</filename>
    <templarg>KeyType</templarg>
    <base>IInterpolator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>Interpolate</name>
      <anchorfile>class_dummy_interpolator.html</anchorfile>
      <anchor>a3ef357d1ce3683ca0eb982603fdaa4bc</anchor>
      <arglist>(TimeType time, Key&lt; KeyType &gt; &amp;left, Key&lt; KeyType &gt; &amp;right)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_dummy_interpolator.html</anchorfile>
      <anchor>a993ff9e8820fb91ce40d312ec3b7e2f2</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>LeftTangent</name>
      <anchorfile>class_dummy_interpolator.html</anchorfile>
      <anchor>a8e3717836e9b586f71e752e9693aefa2</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>RightTangent</name>
      <anchorfile>class_dummy_interpolator.html</anchorfile>
      <anchor>abc3696e1491c64d6cfd29c2b0d881fa5</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11APIObjects</name>
    <filename>class_d_x11_a_p_i_objects.html</filename>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_swapchain_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a5fb8ca2f5ae7529df1de6c20760e431f</anchor>
      <arglist>(const DXGI_SWAP_CHAIN_DESC &amp;swap_chain_desc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_viewport_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a74c2526f56b0cc0e4786b209ced5b5a0</anchor>
      <arglist>(const D3D11_VIEWPORT &amp;view_port_desc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_feature_levels</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a9663abd153b4d0281aedf0e6717cebe7</anchor>
      <arglist>(D3D_FEATURE_LEVEL *feature_levels, unsigned int elements)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_window_resolution</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>afd6eca719b0c1ec8b04ec2bcb4fd32af</anchor>
      <arglist>(unsigned int window_width, unsigned int window_height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_depth_stencil_format</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>aa36b62dc3e55aa272c6cc2f41d1ef46f</anchor>
      <arglist>(DXGI_FORMAT depth_stencil_format)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_vertex_layout</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a402e18fb4588609b55039f2d112b3101</anchor>
      <arglist>(DX11_DEFAULT_VERTEX_LAYOUT layout)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_vertex_layout</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a99276ba731d84e44ea70c02349ba847d</anchor>
      <arglist>(D3D11_INPUT_ELEMENT_DESC *layout, unsigned int array_size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_sampler_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a68d7ce2b8041d2a02e0147cd78a58515</anchor>
      <arglist>(D3D11_SAMPLER_DESC sampler_desc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_rasterizer_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>aeb82f538b6d255aae6888813397c8319</anchor>
      <arglist>(const D3D11_RASTERIZER_DESC &amp;rasterizer_desc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ID3D11VertexShader *</type>
      <name>load_vertex_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>adc6208cb1a1181059f746c1bda66ed76</anchor>
      <arglist>(const std::wstring &amp;file_name, const std::string &amp;shader_name, const char *shader_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ID3D11VertexShader *</type>
      <name>load_vertex_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab75fd083375c3af4f53a7b9dde47632c</anchor>
      <arglist>(const std::wstring &amp;file_name, const std::string &amp;shader_name, ID3D11InputLayout **layout, D3D11_INPUT_ELEMENT_DESC *layout_desc, unsigned int array_size, const char *shader_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ID3D11PixelShader *</type>
      <name>load_pixel_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a2b3bb20aab56cee1dff34eb2956e8acc</anchor>
      <arglist>(const std::wstring &amp;file_name, const std::string &amp;shader_name, const char *shader_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>InitDevicesAndSwapChain</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>af122438a9a74c1fbfe97137dfe786a52</anchor>
      <arglist>(HWND window, bool fullscreen, bool single_thread=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_viewport</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a38467a5cff8e80ed1879dbd7b144d615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_z_buffer_and_render_target</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a4b3aefe785652e239cccab9aee238aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_vertex_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a4c6a05f80ccaf8ea68e336244bd76316</anchor>
      <arglist>(const std::wstring &amp;file_name, const std::string &amp;shader_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_pixel_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a5f25efb2d1d996ae5185c3c209ab239d</anchor>
      <arglist>(const std::wstring &amp;file_name, const std::string &amp;shader_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_sampler</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a1cec2107effa68d07d92e8db4012855d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DX11APIObjects</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a43296a71511d2add2ee0e7621f33f731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11APIObjects</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>aea8fd1dd6b3c9d4f85fcf20da68ec940</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_DX11</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>aee2110fba2c139838f773b424e8cc20b</anchor>
      <arglist>(int width, int height, HWND window, bool fullscreen, const std::wstring &amp;pix_shader_file, const std::string &amp;pix_shader_name, const std::wstring &amp;vert_shader_file, const std::string &amp;vert_shader_name, bool single_thread=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DX11_INIT_RESULT</type>
      <name>init_DX11</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a1164c9fa6cebe606a3cc4535d21b46d9</anchor>
      <arglist>(int width, int height, HWND window, bool fullscreen, bool single_thread=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>release_DirectX</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>afdc3c0039417cc6bf466e89f359e4b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>begin_scene</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>acb9d00829fd558bf0200103ca63b8391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>end_scene_and_present</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a973ff7b0322aefd98c6247aede273411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetDebugName</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a9484a8c2a43b89ef9af5b170fd2a94cf</anchor>
      <arglist>(ID3D11DeviceChild *child, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsDebugLayerEnabled</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a62d53a05673e518efba17f41aa754ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static DXGI_SWAP_CHAIN_DESC</type>
      <name>get_swap_chain_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ae0f0db386f0e7bd4d07c4f1b98c07b04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D11_VIEWPORT</type>
      <name>get_viewport_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a5b806e85e8b829ab14f29de204b61c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D_FEATURE_LEVEL</type>
      <name>get_current_feature_level</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a78d267af2231bd82549f120fa5b852e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D11_TEXTURE2D_DESC</type>
      <name>get_z_buffer_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>afbab62f74b493a216d47a6a4f257cd40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D11_DEPTH_STENCIL_VIEW_DESC</type>
      <name>get_z_buffer_view_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a2348b875c559fac8c3853ff9abbc9e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D11_SAMPLER_DESC</type>
      <name>get_sampler_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a36c912e3d9f61f12976ecd010bacfd31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static D3D11_RASTERIZER_DESC</type>
      <name>get_rasterizer_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>adbe06c58918b12dfd5d2610090b955e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static DX11APIObjects *</type>
      <name>this_ptr</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a1db5e21336aab4057c36042838b8aeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>m_useDebugLayer</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab3e7a4b8e4305e5d1c40d79890f28980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned int</type>
      <name>_window_width</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab8f95b57dfb74dc2d81c22093b300daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned int</type>
      <name>_window_height</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a54022208794bd070d5288dde3cb486f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>_pixel_shader_model</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>afcfaabab11087abe0e1984a7ebda57eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>_vertex_shader_model</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab8f18eee9954913ff3d552714bb4312e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static DXGI_SWAP_CHAIN_DESC</type>
      <name>_swap_chain_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>aa4520866737642cf111b2dce865f9794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_VIEWPORT</type>
      <name>_view_port_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ae7f1756180ddc42d6176c9572f4bf91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D_FEATURE_LEVEL *</type>
      <name>_feature_levels</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a9de85e1670d70c466aeb0a3cad4c5b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned int</type>
      <name>_num_feature_levels</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a2ad7e583bf1cbe0455895fb8c552564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D_FEATURE_LEVEL</type>
      <name>_current_feature_level</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a047e6c79886fd67c21710ca678f63b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_TEXTURE2D_DESC</type>
      <name>_z_buffer_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a4e9ea21ed8905170cf54c6fa539ed836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_DEPTH_STENCIL_VIEW_DESC</type>
      <name>_z_buffer_view_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a6cb3bf84820db3bfc7a64daea1dfa39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_INPUT_ELEMENT_DESC *</type>
      <name>_vertex_layout_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ae42ce54fbdb7d39a5384e71c76bddec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned int</type>
      <name>_layout_elements_count</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a3cf96367ad6c9384e6b1e015f0e7b3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_SAMPLER_DESC</type>
      <name>_sampler_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a496c9d64d501c6f267423197b38713e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static D3D11_RASTERIZER_DESC</type>
      <name>_rasterizer_desc</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a358a21a9d3f8e45d7f1ba4676dc9f74c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Debug *</type>
      <name>debug_interface</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a3645b83f2b6f7bbbad8351ff736f9c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Device *</type>
      <name>device</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab484f6bea91f06b996a32d73fbb80cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11DeviceContext *</type>
      <name>device_context</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a28bcb8170c5ed0495cc42bb22b3d300f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static IDXGISwapChain *</type>
      <name>swap_chain</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ade44f2410db7ffaf4d10778aaf13b008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11RenderTargetView *</type>
      <name>render_target</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a94fc7ced778758e282f4109968c10ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11DepthStencilView *</type>
      <name>z_buffer_view</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>ab845c937be718500a3803f501764251e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Texture2D *</type>
      <name>back_buffer</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>af6104dbee4ae752a6d81bea7bb2c9ad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Texture2D *</type>
      <name>z_buffer</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a08e6440d615b9025e7f6a7a7f37a0a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11SamplerState *</type>
      <name>default_sampler</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a7862fce35328422c8d8fd2d4f3624fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11InputLayout *</type>
      <name>default_vertex_layout</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a496e279f00f087a0cc8c01d29faa3d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11VertexShader *</type>
      <name>default_vertex_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a7e3bf0edafc41780cdb3012a4795642a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11PixelShader *</type>
      <name>default_pixel_shader</name>
      <anchorfile>class_d_x11_a_p_i_objects.html</anchorfile>
      <anchor>a8a7921bef03f64b14ede79b35e59a82f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11AuxiliaryObjects</name>
    <filename>class_d_x11_auxiliary_objects.html</filename>
    <base>DX11APIObjects</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init_buffers</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a371eb21fffc935ce80630d2fb42da0cf</anchor>
      <arglist>(unsigned int size_per_frame, unsigned int size_per_mesh)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init_depth_states</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a413ef479b52e142c1719c507f2a4357a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>release_DirectX</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>aede0f754d61801d08ab6a4ec63563e84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Buffer *</type>
      <name>const_per_frame</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a8658e0dd754267c74c00885f242baa5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11Buffer *</type>
      <name>const_per_mesh</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a9f8730812833a98a083ba50fa46864f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11DepthStencilState *</type>
      <name>depth_enabled</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a9515d8b74f6336e8c3ce36222d675036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ID3D11DepthStencilState *</type>
      <name>depth_disabled</name>
      <anchorfile>class_d_x11_auxiliary_objects.html</anchorfile>
      <anchor>a836a56c277d60b0b8ccc5fa3249ae8c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11BlendingState</name>
    <filename>class_d_x11_blending_state.html</filename>
    <base>BlendingState</base>
    <base>DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11BlendingState</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a9286e8fda4bcda23b2e67d4cd9019235</anchor>
      <arglist>(ComPtr&lt; ID3D11BlendState &gt; state, const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11BlendState *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a4549075d0400136b481a983a143f9aa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a598d6d8960e836aa5f2d01cfaa9abccd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const BlendingInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>aa5f64bad5fad7ab14f77a803c9883b7f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11BlendingState *</type>
      <name>Create</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a89e5e7dbdd0535e706f0b7f79168f5e6</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11BlendingState</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>aa27a40ca2d3f5908c1ed5c54a24c872d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a54848c332a116cbbe2c8448e95d5a962</anchor>
      <arglist>(BlendingState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11BlendState &gt;</type>
      <name>m_state</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a03e4c70c8fa035af1a568efa794e8d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BlendingInfo</type>
      <name>m_info</name>
      <anchorfile>class_d_x11_blending_state.html</anchorfile>
      <anchor>a9a2df423f0649e635612ed9f163a143f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11Buffer</name>
    <filename>class_d_x11_buffer.html</filename>
    <base>BufferObject</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11Buffer</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a6c5650308e08d009cb44c411b018bc98</anchor>
      <arglist>(const std::wstring &amp;name, const BufferInfo &amp;descriptor, ID3D11Buffer *buff)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11Buffer *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a96d5e7757e9648b932802e745b041615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a1f05f8c6e7a8dbbf8a27491976a6342c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const BufferInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>ad28972e25b1525867239e8aa4432b321</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11Buffer *</type>
      <name>CreateFromMemory</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a93b5271bbe272d7e6a4bc63865d5349e</anchor>
      <arglist>(const std::wstring &amp;name, const uint8 *data, const BufferInfo &amp;bufferInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11Buffer</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a07cc446bbc057a42cb52435ca4aad2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>aad67c9b2b83ee103149a74f59075c80d</anchor>
      <arglist>(BufferObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11Buffer *</type>
      <name>m_buffer</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a7f967917db1384f9767dc9606875538c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BufferInfo</type>
      <name>m_descriptor</name>
      <anchorfile>class_d_x11_buffer.html</anchorfile>
      <anchor>a47563956bf3c429a9a43dd0973324482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11ComputeShader</name>
    <filename>class_d_x11_compute_shader.html</filename>
    <base>ComputeShader</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11ComputeShader</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ab12fff251a189b9b838204f461384c86</anchor>
      <arglist>(ID3D11ComputeShader *shader)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11ComputeShader *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ae7d76009d0971bee8525f7feea41d7a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ac7bd6825224a53488d510ec764442a6e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>a1229868ed717c6590797d2d5e520f3f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>a3ec27c21aa6de46d03ac78777f23a526</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11ComputeShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ad857789fb23f4a841caf62b7b0534e7f</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;cs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11ComputeShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ad03cd202ce4e8a3bde446e1bb1ca8e9e</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11ComputeShader</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>a98a0938d5f6a2549727b2f97a2f39d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>a2eb1ed9471f553705c171507d112eb13</anchor>
      <arglist>(ComputeShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11ComputeShader *</type>
      <name>m_computeShader</name>
      <anchorfile>class_d_x11_compute_shader.html</anchorfile>
      <anchor>ae906c4eddb1643d25b064f3fd0520ee7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11ConstantsMapper</name>
    <filename>class_d_x11_constants_mapper.html</filename>
    <member kind="function">
      <type></type>
      <name>DX11ConstantsMapper</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a54f9b9fc65fe13897877b9ff8ab66796</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX11ConstantsMapper</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a7267cdfdc15241b2238f615599648aa0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_USAGE</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a251af5c25c22df785acfe4ba2bff28dd</anchor>
      <arglist>(ResourceUsage usage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DXGI_FORMAT</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a728271f857898dce35426509523db123</anchor>
      <arglist>(ResourceFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D_PRIMITIVE_TOPOLOGY</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a3a7c18f8437f82715937717625d63cf0</anchor>
      <arglist>(PrimitiveTopology topology)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_BIND_FLAG</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a41eb2391f4588521da11e77845737160</anchor>
      <arglist>(ResourceBinding binding)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_RTV_DIMENSION</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a7b956393626a2bda1703e1d01eccae81</anchor>
      <arglist>(TextureType texType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DXGI_FORMAT</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a91fc9321de97fdd27dc4b64646690b46</anchor>
      <arglist>(DepthStencilFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_FILL_MODE</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a80ee9e259841f0c47310651af3b6ee55</anchor>
      <arglist>(FillMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_CULL_MODE</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a7e8a475fa85fa0bc535689b5e36d9550</anchor>
      <arglist>(CullMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_BLEND</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a4c3399fc1b032997fe438f960bad3a2e</anchor>
      <arglist>(BlendFactor factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_BLEND_OP</type>
      <name>Get</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>ad1eaeab4f54bb9ee37d8edc217cfcbfc</anchor>
      <arglist>(BlendOperation op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ResourceFormat</type>
      <name>ConvertBack</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>af6b9d30cbefecf9172ba8730208d9135</anchor>
      <arglist>(DXGI_FORMAT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_SRV_DIMENSION</type>
      <name>ConvertSRV</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a11dddcb254094070f2a4fa3ca49b81be</anchor>
      <arglist>(TextureType texType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_DSV_DIMENSION</type>
      <name>ConvertDSV</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a2edb0231771f556f02791472cb4f3a8f</anchor>
      <arglist>(TextureType texType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DXGI_FORMAT</type>
      <name>ConvertTypeless</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a79cba05cc67baedbe627eac23a86bd2c</anchor>
      <arglist>(DepthStencilFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DXGI_FORMAT</type>
      <name>ConvertDepthOnly</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a5a1da4ff9b64240c68f0e311657510d4</anchor>
      <arglist>(DepthStencilFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DXGI_FORMAT</type>
      <name>ConvertStencilOnly</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a9e133a4124da1e665850d2361f254174</anchor>
      <arglist>(DepthStencilFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>BitsPerPixel</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>a92bc9867cfa44f1f7be8722abb6f5b32</anchor>
      <arglist>(DXGI_FORMAT fmt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>BytesPerPixel</name>
      <anchorfile>class_d_x11_constants_mapper.html</anchorfile>
      <anchor>af7e03d4a3a8c3ab710322830ca05e657</anchor>
      <arglist>(DXGI_FORMAT fmt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11DepthStencilState</name>
    <filename>class_d_x11_depth_stencil_state.html</filename>
    <base>DepthStencilState</base>
    <base>DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11DepthStencilState</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>aa7b786fcd099fa2d8fcca55f4ca3e558</anchor>
      <arglist>(ComPtr&lt; ID3D11DepthStencilState &gt; state, const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11DepthStencilState *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a8430f14bd609024792252a54bf059fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a7c10391b65ef7cb0d66bd25100c43cad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const DepthStencilInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a5efb32e488d5f791ec2c68153877053a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11DepthStencilState *</type>
      <name>Create</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a514eb38dd0c9fd7604f878631afd31c8</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11DepthStencilState</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a1eaccb4a6ee908c1f370d7f58cd72679</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a15416d5efb7aba1275ef2ed9059c325f</anchor>
      <arglist>(DepthStencilState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11DepthStencilState &gt;</type>
      <name>m_state</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a39976115284487892541f83b35a896c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DepthStencilInfo</type>
      <name>m_info</name>
      <anchorfile>class_d_x11_depth_stencil_state.html</anchorfile>
      <anchor>a610dbe8aff6cb173b73d9b9f08841944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11Initializer</name>
    <filename>class_d_x11_initializer.html</filename>
    <base>IGraphicAPIInitializer</base>
    <base>DX11AuxiliaryObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11Initializer</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a273373ecfa4f92e58e7787fc919f9094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX11Initializer</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a25b0dda9626276701984d212abf8ce57</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IRenderer *</type>
      <name>CreateRenderer</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a62545366c175094b2f50c7a55d1d5cfb</anchor>
      <arglist>(RendererUsage usage) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SwapChain *</type>
      <name>CreateSwapChain</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>ac2af9a07698d130f17ca9f109b65a8be</anchor>
      <arglist>(SwapChainInitData &amp;swapChainData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitAPI</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a9a3ea81ed5d7b851d2eaf68ddccf9748</anchor>
      <arglist>(GraphicAPIInitData &amp;initData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ReleaseAPI</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a84204a02f6e2909b4dc53295b6224ab2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>GetRenderTargetHandle</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a022dfbb50e4c4b1376b1f3dba36bd876</anchor>
      <arglist>(RenderTargetObject *renderTarget) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Nullable&lt; bool &gt;</type>
      <name>InitDevices</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>aa4f8f7ff10992f5f2e873bf97a39d700</anchor>
      <arglist>(GraphicAPIInitData &amp;initData)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11RasterizerState *</type>
      <name>m_rasterizer</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>a17b90f3e67d6bae7791c3bd3a5917e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11DepthStencilState *</type>
      <name>m_depthState</name>
      <anchorfile>class_d_x11_initializer.html</anchorfile>
      <anchor>aa8f03396bdf2f0a4602d07c736e05b07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11InputLayout</name>
    <filename>class_d_x11_input_layout.html</filename>
    <base>ShaderInputLayout</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11InputLayout</name>
      <anchorfile>class_d_x11_input_layout.html</anchorfile>
      <anchor>af13ebece68ca34575033d10b941fd5ad</anchor>
      <arglist>(ID3D11InputLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11InputLayout *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_input_layout.html</anchorfile>
      <anchor>a0ee8030a71a5da03e7fea0422f4492ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11InputLayout</name>
      <anchorfile>class_d_x11_input_layout.html</anchorfile>
      <anchor>a4156d2c29fbe90c10d5b44ec1a70892c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_input_layout.html</anchorfile>
      <anchor>a524a34d190e8473e3194e515f95cae44</anchor>
      <arglist>(ShaderInputLayout)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11InputLayout *</type>
      <name>m_vertexLayout</name>
      <anchorfile>class_d_x11_input_layout.html</anchorfile>
      <anchor>a1cd0b027a76dd4bcda0eca8159691e18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11InputLayoutDescriptor</name>
    <filename>class_d_x11_input_layout_descriptor.html</filename>
    <base>InputLayoutDescriptor</base>
    <member kind="function">
      <type></type>
      <name>DX11InputLayoutDescriptor</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>a7366a56b565ba97c2e12ab99d74cabb5</anchor>
      <arglist>(const std::wstring &amp;layoutName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX11InputLayoutDescriptor</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>aad0a9726fd4e159cd8b851d8a22f7714</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetNumElements</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>a5566a27ede6d66a0e14bd25574c42428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>D3D11_INPUT_ELEMENT_DESC *</type>
      <name>GetDescriptorPtr</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>ac47c6092c29cb7885795981584dc3d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>AddRow</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>ae62649c3fe403d007bc298ace369e92f</anchor>
      <arglist>(const char *semanticName, ResourceFormat format, unsigned int inputSlot, unsigned int byteOffset, bool perInstance, unsigned int instanceDataStep)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CountSemantic</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>aafbff0f17462df5d7136a34ecf60e2f0</anchor>
      <arglist>(const char *semanticName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; D3D11_INPUT_ELEMENT_DESC &gt;</type>
      <name>m_inputElement</name>
      <anchorfile>class_d_x11_input_layout_descriptor.html</anchorfile>
      <anchor>a92c25ac7fea66afc02f701d48af3017c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11PixelShader</name>
    <filename>class_d_x11_pixel_shader.html</filename>
    <base>PixelShader</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11PixelShader</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a1905e84c549620995bea7f76ff43ff9f</anchor>
      <arglist>(ID3D11PixelShader *shader)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11PixelShader *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>acd42cac3e62185053105dc9b933e2ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a2d6068ffe5898882d4dd27810de85a6d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a86c1ca5bba5155191568eb856f2adef3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a2f41bcee6fbebbb48799e5422ab25f02</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileName</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a525b23c9c764c2e29714fe4325825881</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShaderName</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>aa0d220837212a66c0188b0d76dbb2597</anchor>
      <arglist>(const std::string &amp;shaderName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11PixelShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>ae520bd1baea2bdbb1f7a06c61c7f22c5</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11PixelShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a2a0d1ecdc41e8358e25f0ebc8c760342</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11PixelShader</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>aa225f723faf05860e6904c5f87cb4e1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a349b1da32b637d451f97f7ff03ea6200</anchor>
      <arglist>(PixelShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11PixelShader *</type>
      <name>m_pixelShader</name>
      <anchorfile>class_d_x11_pixel_shader.html</anchorfile>
      <anchor>a167d1e8129c5934795bddd4aa8f73fb0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11RasterizerState</name>
    <filename>class_d_x11_rasterizer_state.html</filename>
    <base>RasterizerState</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11RasterizerState</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>a89088ab06fb54ed44b6423104f0c771c</anchor>
      <arglist>(ComPtr&lt; ID3D11RasterizerState &gt; state, const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11RasterizerState *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>ae43b626bce7b6e6378e8c2ba86bbdb32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>a7d36fefa9e923400b1383d5ff1dcc1ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RasterizerStateInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>abbdef36d1da935e193a3931fd4787988</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11RasterizerState *</type>
      <name>Create</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>a77152ecc2999a18987c7c8eab92ed1d6</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11RasterizerState</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>abb517b71c6a7318f08d58a020734dbe4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>a0c241d9c7ed8188a1224fe0baf3a3dfe</anchor>
      <arglist>(RasterizerState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11RasterizerState &gt;</type>
      <name>m_state</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>ab5533f871458a607b8910744fab35f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RasterizerStateInfo</type>
      <name>m_info</name>
      <anchorfile>class_d_x11_rasterizer_state.html</anchorfile>
      <anchor>a4854c042d0c1c3bb91adb41bd1bb42ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11Renderer</name>
    <filename>class_d_x11_renderer.html</filename>
    <base>IRenderer</base>
    <base protection="protected">DX11AuxiliaryObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11Renderer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a8d9db337bddb789c15548b1d5d6ecd48</anchor>
      <arglist>(RendererUsage usage=USE_AS_IMMEDIATE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX11Renderer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a7bce9ff1e17adb7356d81fa774e045fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SupportsDefferedContextRendering</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>ac5d8726e467ba02f2e49195c4e561866</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>abbca2c63aec0e859e245e543b14b0b0f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Draw</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>abc8d1ada92f7bbeb21137fb3badf01c5</anchor>
      <arglist>(const DrawCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DrawInstanced</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>aff1b43fdd94771b7f17a3f0fa14226c0</anchor>
      <arglist>(const DrawInstancedCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a7d1c82b612be62025425cd5a7f7ad78b</anchor>
      <arglist>(const SetRenderTargetCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a8f6472297fe6808b445f0408f335d482</anchor>
      <arglist>(const SetRenderTargetExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ClearRenderTarget</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a0b63ff263f94116467942ce79672ac56</anchor>
      <arglist>(const ClearRenderTargetCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateBuffer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a6d3012e2a4ece85a893ca2350142100f</anchor>
      <arglist>(const UpdateBufferCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BindBuffer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>ae04485f2dc3c92a4e131130acd675a1a</anchor>
      <arglist>(const BindBufferCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateAndBindBuffer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>af8913af500fa25a972aae1407aecff9a</anchor>
      <arglist>(const UpdateBindBuffer &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetDefaultBuffers</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a6f4d95c2216ec981b1fd144bdaad88e2</anchor>
      <arglist>(const SetDefaultBuffersCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>ac1bac4fa1ceae449e36efbb5ad019411</anchor>
      <arglist>(const SetShaderStateCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>af479a0ed6767d11978e2ba0a836daed7</anchor>
      <arglist>(const SetShaderStateExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a2a3edd0d9694fd621fb569d8e173d816</anchor>
      <arglist>(const SetRenderStateCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>aa876a26918ca6528634c72d9b2a085f8</anchor>
      <arglist>(const SetRenderStateExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyTexture</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>aacd5f547601ee6b036c676d53bfde70f</anchor>
      <arglist>(const CopyTextureCommand &amp;command) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetVertexBuffer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a7f31ddca46d74d8558136c4342215130</anchor>
      <arglist>(BufferObject *buffer, unsigned int offset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetIndexBuffer</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a2bedc727736a973b1fcefb73c4249649</anchor>
      <arglist>(BufferObject *buffer, unsigned int offset, bool extendedIndex)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetRenderTarget</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a16f7ec0c7784e381e885a6574e717a06</anchor>
      <arglist>(RenderTargetObject *const targets[MAX_BOUND_RENDER_TARGETS], RenderTargetObject *depthStencil)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetTextures</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a25ee33eece25aa0400b79b464292e2d2</anchor>
      <arglist>(TextureObject *const texturesArray[MAX_BOUND_RENDER_TARGETS], const uint8 shaderTypes[MAX_BOUND_RENDER_TARGETS])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11DeviceContext *</type>
      <name>m_localDeviceContext</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>a2f976f5fd4b892b532898a8c649d94c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_valid</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>ad829990214c845a9af459b61c73a1a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RendererUsage</type>
      <name>m_usageType</name>
      <anchorfile>class_d_x11_renderer.html</anchorfile>
      <anchor>aea3e84a90d2c35f5fa678043e956084a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11RenderTarget</name>
    <filename>class_d_x11_render_target.html</filename>
    <base>RenderTargetObject</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11RenderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a232f33a1ff3e30c46d74197068fa2a97</anchor>
      <arglist>(ComPtr&lt; ID3D11RenderTargetView &gt; renderTarget, ComPtr&lt; ID3D11DepthStencilView &gt; depthStencil, TextureObject *colorBuffer, TextureObject *depthBuffer, TextureObject *stencilBuffer)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetWidth</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>aaf00c642ca54d34d3fca5ea00b83b498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetHeight</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a2dbdf2c7639f09dd7e732d37617fb53f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a00bf94abd1d80edf8d72df19ba83de96</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a64dd46935cbb8c58ef90681f4d508340</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11RenderTargetView *</type>
      <name>GetRenderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a0a9fbae06f676f3e6498d3327b7c306e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ID3D11DepthStencilView *</type>
      <name>GetDepthStencil</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>ab6e4fe5575f6c490674f53124be961af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11RenderTarget *</type>
      <name>CreateScreenRenderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a3d7f1140a862df6a9444f7bbbab929e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11RenderTarget *</type>
      <name>CreateRenderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a964b118e0963323b0d4215ea4f0dca91</anchor>
      <arglist>(const std::wstring &amp;name, const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11RenderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>af74019dba9b971ff5a34f4609263e753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a78c4b48970ae577a7688f7954b30d84c</anchor>
      <arglist>(RenderTargetObject)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>ValidateDescriptor</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a46f645c06b3e89583f6d906043fee963</anchor>
      <arglist>(const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11RenderTargetView &gt;</type>
      <name>m_renderTarget</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a320726042ded4cb3ed973c91b688474d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11DepthStencilView &gt;</type>
      <name>m_depthStencilView</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>ad1d3439961edbe08dc6a863c759a91a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_height</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a343f2232e8c596b55cf094725479a763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_width</name>
      <anchorfile>class_d_x11_render_target.html</anchorfile>
      <anchor>a07a3e3195b889b775040659d7b8e88b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11SwapChain</name>
    <filename>class_d_x11_swap_chain.html</filename>
    <base>SwapChain</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11SwapChain</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>ad5a8ebcc1011b6e71bcda771e9aa6bc1</anchor>
      <arglist>(IDXGISwapChain *chain, DX11RenderTarget *windowRT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX11SwapChain</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>aeed203cecf5a0c0e01c691d0b15b61f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Present</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>ab6407d155a3d67504b9c12dc42538152</anchor>
      <arglist>(int syncInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>aaba3941e0fcca0663d58122c419af286</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11SwapChain *</type>
      <name>CreateScreenSwapChain</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>a8331589ab2da2bc6df91ecf70bb367dc</anchor>
      <arglist>(RenderTargetObject *screenRT)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IDXGISwapChain *</type>
      <name>m_swapChain</name>
      <anchorfile>class_d_x11_swap_chain.html</anchorfile>
      <anchor>a923937083daf9936f4e20e2b2785768a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11Texture</name>
    <filename>class_d_x11_texture.html</filename>
    <base>TextureObject</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11Texture</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a23443b310f39d4925cfdabf7b4e48274</anchor>
      <arglist>(TextureInfo &amp;&amp;texInfo, ID3D11Texture2D *tex, ID3D11ShaderResourceView *texView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DX11Texture</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a6137a1d7467d136d071f94d2af4c76fd</anchor>
      <arglist>(TextureInfo &amp;&amp;texInfo, ComPtr&lt; ID3D11Texture2D &gt; tex, ComPtr&lt; ID3D11ShaderResourceView &gt; texView)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>afb604d5e07b6ecf39853c64b059eedf4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const TextureInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a4b4fed6ffb1071643e7bc769f12fbec8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const filesystem::Path &amp;</type>
      <name>GetFilePath</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a957d2b36f1d34c98b19f37161e9acbf1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ID3D11ShaderResourceView *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a168481946021751863938bf017adcd74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ID3D11Texture2D *</type>
      <name>GetTex</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a4f55deb4e2483f4adf4cecf1f7bd9c66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11Texture *</type>
      <name>CreateFromMemory</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a5866d43f9f523024d3abc467789230f5</anchor>
      <arglist>(const MemoryChunk &amp;texData, TextureInfo &amp;&amp;texInfo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D3D11_TEXTURE2D_DESC</type>
      <name>FillDesc</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a12894a79fecdae55831f83161c756130</anchor>
      <arglist>(const TextureInfo &amp;texInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11Texture</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>a59eec188c00184fcd35d08873fe046b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Construct</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>afc73dadad322555c43430eaf8e3d9a98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11ShaderResourceView &gt;</type>
      <name>m_textureView</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>aaa0599f58eb5b51d75578d164ade5210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ComPtr&lt; ID3D11Texture2D &gt;</type>
      <name>m_texture</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>acf8dc1d7cfb0e4c4f20bf534a17cb206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TextureInfo</type>
      <name>m_descriptor</name>
      <anchorfile>class_d_x11_texture.html</anchorfile>
      <anchor>adf838804eb594442afbc0982be03bf77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DX11VertexShader</name>
    <filename>class_d_x11_vertex_shader.html</filename>
    <base>VertexShader</base>
    <base protection="protected">DX11APIObjects</base>
    <member kind="function">
      <type></type>
      <name>DX11VertexShader</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a31379298d1f4090285f9bd0d592c1cb5</anchor>
      <arglist>(ID3D11VertexShader *shader)</arglist>
    </member>
    <member kind="function">
      <type>ID3D11VertexShader *</type>
      <name>Get</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a26dd32730052ff6b6bbb1915ea51d695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a43ca385d9f4fb23ed01cfa8745996b17</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a1ee2c4e61cb37103dbe17cd8d46decf2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>ad941edfbabdaabaa94b618ea38454ec6</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileName</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a436be802fe527f96d2c04f3d20722fdb</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShaderName</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>ad039d688564f8fc4354cbd995c218691</anchor>
      <arglist>(const std::string &amp;shaderName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11VertexShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a0393ab0d1f20a5cab615a874c5711952</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11VertexShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a5f941c812bdd0b94d58d7f6fce54081b</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, ShaderInputLayout **layout, InputLayoutDescriptor *layout_desc, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DX11VertexShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>a14a8a02b7338650de0f377aa8154fbf4</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DX11VertexShader</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>abe968aaa3221c98dbab4b91eb6971593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>ac9162b0c2f0b66e66506264cd2db5117</anchor>
      <arglist>(VertexShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ID3D11VertexShader *</type>
      <name>m_vertexShader</name>
      <anchorfile>class_d_x11_vertex_shader.html</anchorfile>
      <anchor>ab090ee5b6a08bb4d8f1aba959be889c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EngineObject</name>
    <filename>class_engine_object.html</filename>
    <member kind="function">
      <type>TypeID</type>
      <name>GetType</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>aafc8171efb45eb8ebd776ec09051b08d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetTypeName</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>a5e128d1530c3772e6bd826e3ff32b1ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Serialize</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>a5dd6ce8a45796814cccbfee320fd5c5e</anchor>
      <arglist>(ISerializer *ser) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Deserialize</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>aa75a619db892e51fa9cb28aa4dceee38</anchor>
      <arglist>(IDeserializer *deser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Size</type>
      <name>MemorySize</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>ae9412b884612f08341e1f638e3cbed90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetType *</type>
      <name>DynamicCast</name>
      <anchorfile>class_engine_object.html</anchorfile>
      <anchor>a93de3587dbe7d3b8045c83224b9bfcb6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EngineSerializationContext</name>
    <filename>struct_engine_serialization_context.html</filename>
    <base>SerializationContext</base>
    <member kind="typedef">
      <type>std::map&lt; rttr::type, std::vector&lt; rttr::property &gt; &gt;</type>
      <name>TypePropertyMap</name>
      <anchorfile>struct_engine_serialization_context.html</anchorfile>
      <anchor>a5b50c2cd81bcd5f0bf03c8249b1699f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EngineSerializationContext</name>
      <anchorfile>struct_engine_serialization_context.html</anchorfile>
      <anchor>a9751509f5bd6f028154104db0725c35e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>SaveWholeMap</name>
      <anchorfile>struct_engine_serialization_context.html</anchorfile>
      <anchor>ad31465f87bf3efcc02a5b28584721710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EditorLoad</name>
      <anchorfile>struct_engine_serialization_context.html</anchorfile>
      <anchor>ad641b8d35a40f0cba7fdd056ca3f0714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TypePropertyMap</type>
      <name>TypeProperties</name>
      <anchorfile>struct_engine_serialization_context.html</anchorfile>
      <anchor>acca96c68548466a3b623475da2fd50dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvaluationShader</name>
    <filename>class_evaluation_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>EvaluationShader</name>
      <anchorfile>class_evaluation_shader.html</anchorfile>
      <anchor>a68d6f2a13e31ea7ebf026955938ee4c2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_evaluation_shader.html</anchorfile>
      <anchor>af6d48a4b499cad823a02a39b8225068b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~EvaluationShader</name>
      <anchorfile>class_evaluation_shader.html</anchorfile>
      <anchor>a8142e7d152100a2f631e0c2fbc637331</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_evaluation_shader.html</anchorfile>
      <anchor>a4df4efe8b43b430613ed3330a2e51835</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; EvaluationShader &gt;</name>
      <anchorfile>class_evaluation_shader.html</anchorfile>
      <anchor>a0499daedf895f4671f1108ac7b9c786f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::EventCapture</name>
    <filename>classsw_1_1input_1_1_event_capture.html</filename>
    <member kind="function">
      <type></type>
      <name>EventCapture</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a51d7363048c6262711a93954b55c12e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventCapture</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a744b6992b71f89327c23730a280fbffb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueUpKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a6ba82023086cca19b2bfa0b034985007</anchor>
      <arglist>(Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueDownKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a2258c243cc7fa36a2174ed8e420e46d8</anchor>
      <arglist>(Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a174ec0129997a28d4dbefb397c5b9bd7</anchor>
      <arglist>(KeyState state, Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseClick</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aae2bbd86da7f0e87942bf8e4b715f9e2</anchor>
      <arglist>(Mouse::PhysicalButtons button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseUp</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a96e009f993862c2fc5be89981add2ef5</anchor>
      <arglist>(Mouse::PhysicalButtons button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a53b4ca1e94f61722495f5878e84350b7</anchor>
      <arglist>(KeyState state, Mouse::PhysicalButtons key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseMove</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>adb2793b16c6ab8ff0db6c7c0b3808dcf</anchor>
      <arglist>(int16 deltaX, int16 deltaY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GoToNextFrame</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a349468cf178d3024518a2f5969d58302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DebugEvent &amp;</type>
      <name>QueryEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aeb047a2502308821bdd67e0baac34636</anchor>
      <arglist>(Size frameNum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNext</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aba409f355ad87343816f89f9011c214e</anchor>
      <arglist>(Size frameNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>ac4df921fb9f05264b0cbe55ae04451f8</anchor>
      <arglist>(const DeviceEvent &amp;event, Size frameNum, DeviceType deviceType, uint8 deviceIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a3fea7885f5b9240a13c423e1562ed53e</anchor>
      <arglist>(const DebugEvent &amp;event)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventQueue&lt; DebugEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a9dce0973a67aac6f05b3b9db96959eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_frameNumber</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>afa2604f8d47efa873c8d54e53da301dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Timestamp</type>
      <name>m_nextTimeStamp</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>ae8da928af3bbb0eea5934bd86d359a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueUpKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a6ba82023086cca19b2bfa0b034985007</anchor>
      <arglist>(Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueDownKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a2258c243cc7fa36a2174ed8e420e46d8</anchor>
      <arglist>(Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueKeyEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a174ec0129997a28d4dbefb397c5b9bd7</anchor>
      <arglist>(KeyState state, Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseClick</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aae2bbd86da7f0e87942bf8e4b715f9e2</anchor>
      <arglist>(Mouse::PhysicalButtons button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseUp</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a96e009f993862c2fc5be89981add2ef5</anchor>
      <arglist>(Mouse::PhysicalButtons button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a53b4ca1e94f61722495f5878e84350b7</anchor>
      <arglist>(KeyState state, Mouse::PhysicalButtons key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueMouseMove</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>adb2793b16c6ab8ff0db6c7c0b3808dcf</anchor>
      <arglist>(int16 deltaX, int16 deltaY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GoToNextFrame</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a349468cf178d3024518a2f5969d58302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DebugEvent &amp;</type>
      <name>QueryEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aeb047a2502308821bdd67e0baac34636</anchor>
      <arglist>(Size frameNum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNext</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>aba409f355ad87343816f89f9011c214e</anchor>
      <arglist>(Size frameNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>ac4df921fb9f05264b0cbe55ae04451f8</anchor>
      <arglist>(const DeviceEvent &amp;event, Size frameNum, DeviceType deviceType, uint8 deviceIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_capture.html</anchorfile>
      <anchor>a3fea7885f5b9240a13c423e1562ed53e</anchor>
      <arglist>(const DebugEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::EventHandlers</name>
    <filename>classsw_1_1gui_1_1_event_handlers.html</filename>
    <member kind="function">
      <type></type>
      <name>EventHandlers</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a7b29d840b7ff15fb4210ca9230293b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DelegatesContainerBase *</type>
      <name>FindContainer</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a454173936e63151b895b361d66346091</anchor>
      <arglist>(EventType eventID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a1de1046248158eb3cee85dc973b48b23</anchor>
      <arglist>(EventType eventID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DelegatesContainerBase *</type>
      <name>AddContainer</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>ae0f2c0410219d7a970facfbc543a1a3f</anchor>
      <arglist>(DelegatesContainerBaseOPtr &amp;&amp;container)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RemoveContainer</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>ae019bb2b671487dff063fab7043922ec</anchor>
      <arglist>(EventType eventID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseEvent</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a92109f9cd45e05599f1bb8e6038dd8c0</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, IEventArgsOPtr &amp;&amp;arguments)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DelegatesContainerBaseOPtr</type>
      <name>m_delegatesList</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a4f825883dc982498a9346ac6af1494d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>EventProxy</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>ac86f551235b8e32571b676282ff4448e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>DelegatesContainerBase *</type>
      <name>AddContainer</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>ae0f2c0410219d7a970facfbc543a1a3f</anchor>
      <arglist>(DelegatesContainerBaseOPtr &amp;&amp;container)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RemoveContainer</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>ae019bb2b671487dff063fab7043922ec</anchor>
      <arglist>(EventType eventID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseEvent</name>
      <anchorfile>classsw_1_1gui_1_1_event_handlers.html</anchorfile>
      <anchor>a92109f9cd45e05599f1bb8e6038dd8c0</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, IEventArgsOPtr &amp;&amp;arguments)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::EventProxy</name>
    <filename>classsw_1_1gui_1_1_event_proxy.html</filename>
    <templarg>EventArgType</templarg>
    <member kind="typedef">
      <type>EventDelegate&lt; EventArgType &gt;</type>
      <name>DelegateType</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>a02b2a819c84d51e2e4f70ac680ec44cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; EventArgType &gt;</type>
      <name>ArgumentsOwnerPtr</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>a6050b92c39fdacd2e12d0704591a1cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventProxy</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>a3b87de9ce60e08ee2fdbc1c12482fc97</anchor>
      <arglist>(EventHandlers &amp;delegatesContainer, const RegisteredEvent *eventInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>ab6fe94f9522496d84e2fcd994048547b</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator-=</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>a8a982b9a603c2993c6a701df21d8de7e</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDelegate</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>ae85243a22a2d1e2a522d5af871f19d1f</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveDelegate</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>add896fac550f981ccb427313e760b89a</anchor>
      <arglist>(DelegateType delegate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RaiseEvent</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>a5189ed3761fe6ff61c8b2d7c94ae56d6</anchor>
      <arglist>(UIElement *sender, ArgumentsOwnerPtr &amp;&amp;arguments)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventHandlers &amp;</type>
      <name>m_handlers</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>ae25a49f7a9fe56cd5395902c40c1ef01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RegisteredEvent *</type>
      <name>m_eventInfo</name>
      <anchorfile>classsw_1_1gui_1_1_event_proxy.html</anchorfile>
      <anchor>ae990a03e6bb7e3af4ecc8f77c64f4372</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::EventQueue</name>
    <filename>classsw_1_1input_1_1_event_queue.html</filename>
    <templarg>EventType</templarg>
    <member kind="function">
      <type></type>
      <name>EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2c288135325c3b0595b972362a0fbc3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a43f10f948b1356107c920384f252d7c6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a152bc081bbf217f1474b62ed05f0cc6f</anchor>
      <arglist>(const EventType &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearReadEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af91afddaada3456c0b2b8842df2cfc94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NoMoreEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a9655a61a22e041a53c786d57ab33d556</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>EventsLeft</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2aea27204db98f9677d28202108886dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const EventType &amp;</type>
      <name>FrontEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>abb930cb60bd6a8ace1eaadbedfe3cdb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const EventType &amp;</type>
      <name>PopEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af00d85a0cccbac11b550159fece999d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; EventType &gt; &amp;</type>
      <name>GetEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a32d84df992e0550bac7059faabc12d79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetReadPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>ae4e5884ec8113f20339b482c9af0ee6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; EventType &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>aa85d4de07eefdf3c65fac0f59b41a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32</type>
      <name>m_readPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a00e3138115e46381379002ef964b93a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EventQueue&lt; sw::input::DebugEvent &gt;</name>
    <filename>classsw_1_1input_1_1_event_queue.html</filename>
    <member kind="function">
      <type></type>
      <name>EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2c288135325c3b0595b972362a0fbc3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a43f10f948b1356107c920384f252d7c6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a152bc081bbf217f1474b62ed05f0cc6f</anchor>
      <arglist>(const sw::input::DebugEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearReadEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af91afddaada3456c0b2b8842df2cfc94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NoMoreEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a9655a61a22e041a53c786d57ab33d556</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>EventsLeft</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2aea27204db98f9677d28202108886dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sw::input::DebugEvent &amp;</type>
      <name>FrontEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>abb930cb60bd6a8ace1eaadbedfe3cdb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sw::input::DebugEvent &amp;</type>
      <name>PopEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af00d85a0cccbac11b550159fece999d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; sw::input::DebugEvent &gt; &amp;</type>
      <name>GetEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a32d84df992e0550bac7059faabc12d79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetReadPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>ae4e5884ec8113f20339b482c9af0ee6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; sw::input::DebugEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>aa85d4de07eefdf3c65fac0f59b41a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32</type>
      <name>m_readPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a00e3138115e46381379002ef964b93a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EventQueue&lt; sw::input::DeviceEvent &gt;</name>
    <filename>classsw_1_1input_1_1_event_queue.html</filename>
    <member kind="function">
      <type></type>
      <name>EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2c288135325c3b0595b972362a0fbc3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventQueue</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a43f10f948b1356107c920384f252d7c6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a152bc081bbf217f1474b62ed05f0cc6f</anchor>
      <arglist>(const sw::input::DeviceEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearReadEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af91afddaada3456c0b2b8842df2cfc94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NoMoreEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a9655a61a22e041a53c786d57ab33d556</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>EventsLeft</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a2aea27204db98f9677d28202108886dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sw::input::DeviceEvent &amp;</type>
      <name>FrontEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>abb930cb60bd6a8ace1eaadbedfe3cdb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const sw::input::DeviceEvent &amp;</type>
      <name>PopEvent</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>af00d85a0cccbac11b550159fece999d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; sw::input::DeviceEvent &gt; &amp;</type>
      <name>GetEvents</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a32d84df992e0550bac7059faabc12d79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetReadPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>ae4e5884ec8113f20339b482c9af0ee6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; sw::input::DeviceEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>aa85d4de07eefdf3c65fac0f59b41a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32</type>
      <name>m_readPointer</name>
      <anchorfile>classsw_1_1input_1_1_event_queue.html</anchorfile>
      <anchor>a00e3138115e46381379002ef964b93a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::EventsSystem</name>
    <filename>classsw_1_1gui_1_1_events_system.html</filename>
    <member kind="function">
      <type></type>
      <name>~EventsSystem</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>ad205cfaacf4e9ed9478f72dfada76c85</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const RegisteredEvent *</type>
      <name>RegisterEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>af841b6743cc33901cfebd187d46dd894</anchor>
      <arglist>(const char *eventName, RoutingStrategy strategy, TypeID ownerType, TypeID eventTypeId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RaiseEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>ab72bf3887a4ed00f090849120da6a15b</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, IEventArgsOPtr &amp;&amp;arguments)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RaiseForwardEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>ae06ed3c6d150ea82ae24a9859ad201a1</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, IEventArgs *arguments)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RaiseEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>abd3e39543ed6194e4a6e51287f138649</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EventsSystem &amp;</type>
      <name>Get</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a98ea4800eebdba3fd6b79022e9f50e97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseDirectEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a1b4b3d29b2cfe91ea106a2a8157c2146</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseBubbleEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>ae745b73d5d5e1bb8c8d0c5df433b806d</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseTunnelEvent</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a8fff8eddb3d30fce51a771c54da13133</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RaiseTunnelEventForParents</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a8112f2caf53c3939bacba21cde504a9d</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, UIElement *raiseForElement, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RaiseEventImpl</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a94153b58c3d5807c2a220ea1d810e960</anchor>
      <arglist>(const RegisteredEvent *eventInfo, UIElement *sender, ArgumentType *arguments, EventHandlerPointer&lt; ArgumentType &gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>EventsSystem</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>acca952355e6a2b0693140a2d40f2b1ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventType</type>
      <name>m_counter</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a0ebc984b45e49ce09c20fd58038faa02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>m_registerMutex</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>a5ef5ce9a35ec59e0b7d5f564cb46079f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; RegisteredEvent &gt;</type>
      <name>m_registeredEvents</name>
      <anchorfile>classsw_1_1gui_1_1_events_system.html</anchorfile>
      <anchor>aefbe0cdf7ebaabe0f7d2da9753c2a95f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ExampleRealFormatHeader</name>
    <filename>struct_example_real_format_header.html</filename>
    <member kind="function">
      <type></type>
      <name>ExampleRealFormatHeader</name>
      <anchorfile>struct_example_real_format_header.html</anchorfile>
      <anchor>aa0f83da8b01929f54a2910531e787d12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>HeaderLetters</name>
      <anchorfile>struct_example_real_format_header.html</anchorfile>
      <anchor>a7981f7429f08e6749083a5ff6ec1dadc</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>Version</type>
      <name>Version</name>
      <anchorfile>struct_example_real_format_header.html</anchorfile>
      <anchor>aa746dd965f134631c7bbb1373ecae40b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FakeTimeline</name>
    <filename>class_fake_timeline.html</filename>
    <base>TimelineBase</base>
    <member kind="function">
      <type></type>
      <name>FakeTimeline</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a71a87e9dabd22f9f3c29f9cf69d05a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FakeTimeline</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a18c1d866b2b3a62d9d0fee7f6589052f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentTIme</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a8e22b41021ae34b695b2e7df83422f88</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>ace2d10efba41de73ff266a09711886a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Start</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a0c96b04ffdd9b3eec445292a76bc01cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Stop</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a9908400cb5a7d45c7b8ef7612c30f8d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Pause</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>aa1a987bfe6c54259c4ad53e5fb950833</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetTimeline</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>ad04e60008306c7283a088ee61df10e70</anchor>
      <arglist>(TimelineBasePtr &amp;parent) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsPaused</name>
      <anchorfile>class_fake_timeline.html</anchorfile>
      <anchor>a10602449da69f99888252327825abdcc</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>filesystem::File</name>
    <filename>classfilesystem_1_1_file.html</filename>
    <member kind="function">
      <type></type>
      <name>File</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>ad9be17bf7959c6c2d3829c49817873e2</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>File</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>ac6a4223e539b471ba7262d37fe96edd1</anchor>
      <arglist>(Path &amp;&amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~File</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a5357292ba3df1cceba760d4d144780bb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a7c5884e0906f42feca54a0b0bb5cf1b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>FileSize</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a442f415d2f71e517d8a289e521020ecd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Remove</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a574179bb7f1595f2c5d855ba2a76c4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Move</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>ad2639f2a08b33ea4f5be041b7bd09373</anchor>
      <arglist>(const Path &amp;newPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Copy</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a0bfeb2f747c5b0a6f94a510987feb005</anchor>
      <arglist>(const Path &amp;newPath)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Path</type>
      <name>m_filePath</name>
      <anchorfile>classfilesystem_1_1_file.html</anchorfile>
      <anchor>a333014a1983907e8b8f1c070735493c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::FileHeader</name>
    <filename>structsw_1_1_file_header.html</filename>
    <member kind="function">
      <type></type>
      <name>FileHeader</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>a4758860d7164f7afa4ec0e80234bd409</anchor>
      <arglist>(Version version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckLittleEndian</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>aa051bbef241804fe2c57e53fa1afc24b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>LetterShortcut</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>a7c9c76cbe828a758d0af74673070b032</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>LittleEndian</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>a0acca7eda9e45c7d8c8e3610f3d48a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>FileSize</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>a432e4fb8d1daae0082244f7221c17f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>RootChunkOffset</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>ac4794c8c7d309b07f196acc6347b6ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Version</type>
      <name>VersionHCF</name>
      <anchorfile>structsw_1_1_file_header.html</anchorfile>
      <anchor>ae51b39f7b7fbbd8d120e281817936ee1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GeometryShader</name>
    <filename>class_geometry_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>GeometryShader</name>
      <anchorfile>class_geometry_shader.html</anchorfile>
      <anchor>a66a923888995907ac17b53ab698fb3fc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_geometry_shader.html</anchorfile>
      <anchor>a7659decd6abc575eb7480dbd8e6baaec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~GeometryShader</name>
      <anchorfile>class_geometry_shader.html</anchorfile>
      <anchor>a1edc14a60f530fd9ab9be4fc677880fc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_geometry_shader.html</anchorfile>
      <anchor>af569d7ea5670ec3d4399af7f21997269</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; GeometryShader &gt;</name>
      <anchorfile>class_geometry_shader.html</anchorfile>
      <anchor>a2e749782c5891b16c5c8b6bfeb6164a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::GradientBrush</name>
    <filename>classsw_1_1gui_1_1_gradient_brush.html</filename>
    <base>sw::gui::Brush</base>
    <member kind="function">
      <type></type>
      <name>GradientBrush</name>
      <anchorfile>classsw_1_1gui_1_1_gradient_brush.html</anchorfile>
      <anchor>a2d9f9e68526f82650695b11588741cfe</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GradientBrush</name>
      <anchorfile>classsw_1_1gui_1_1_gradient_brush.html</anchorfile>
      <anchor>af0be22c3991994dac0bd1725adb4d319</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GraphicAPIInitData</name>
    <filename>struct_graphic_a_p_i_init_data.html</filename>
    <member kind="function">
      <type></type>
      <name>GraphicAPIInitData</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>a8067cdb9ee393f5934a1f0699f6dc301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultSettings</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>ad41e91bdafd4b2a3c476bda5473c88fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SwapChainInitData</type>
      <name>SwapChain</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>a9b8c2ba7a40aea9c50c76b4cf5bdff0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>SingleThreaded</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>ac24aad0d19567c5f856eea3b8b93f712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>UseDebugLayer</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>a7b7adea0de75fe357b25ebb10628c5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CreateSwapChain</name>
      <anchorfile>struct_graphic_a_p_i_init_data.html</anchorfile>
      <anchor>a4c860c51d79c30ef5bf1c856781ec389</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::Grid</name>
    <filename>classsw_1_1gui_1_1_grid.html</filename>
    <base>sw::gui::IPanel</base>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classsw_1_1gui_1_1_grid.html</anchorfile>
      <anchor>a537ed23fb56ca35dbdf8bb7f48a9cfcb</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Grid</name>
      <anchorfile>classsw_1_1gui_1_1_grid.html</anchorfile>
      <anchor>a180f9a9ef5d33bf0724d460ab206c840</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::GUISystem</name>
    <filename>classsw_1_1gui_1_1_g_u_i_system.html</filename>
    <member kind="function">
      <type></type>
      <name>GUISystem</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ad8cbaf6722f06305a6662c0fa9871404</anchor>
      <arglist>(int argc, char **argv, INativeGUI *gui)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GUISystem</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a5a39147263bbf442b4b8f0535ed69194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetMemorySize</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a41be43c02053a3d35ef995ea3e915b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumCommandLineArgs</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a56b3f2bc389dc4cfc520b2b1ad1deae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>CommandLineArg</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>abf2b77f0c653ccd9bb447e3baa413da4</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ProgramPath</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a650447a43c2b1d75e1489330702ed617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnFocusChanged</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a64aa95bdaa98957e70b2ce00a7896aa9</anchor>
      <arglist>(INativeWindow *window, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnResized</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a3f41bda778d766ea0bd559dc2e1176a1</anchor>
      <arglist>(INativeWindow *window, uint16 newWidth, uint16 newHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMaximized</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ae321da75c6aa7001bb5fb1b360c24a32</anchor>
      <arglist>(INativeWindow *window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMinimized</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a0763b3d7af4f389884b59946010f9ff9</anchor>
      <arglist>(INativeWindow *window)</arglist>
    </member>
    <member kind="function">
      <type>HostWindow *</type>
      <name>CreateNativeHostWindow</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ae6cc3822893c4d4c3ea664d8af0f3804</anchor>
      <arglist>(uint16 width, uint16 height, const std::string &amp;windowTitle)</arglist>
    </member>
    <member kind="function">
      <type>HostWindow *</type>
      <name>CreateNativeHostWindow</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>adb45f5687d123543ced66f197748f8a2</anchor>
      <arglist>(NativeWindowDescriptor &amp;windowDesc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a3ed892f5db4d3383f4703d4f9d10d660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MainLoop</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4ff76aa79da14c603e1e05c2836f906e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MainLoopCore</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4a00d49f9267b75aa30a410d9eb7c446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvents</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a3605d2e3803dadd0eac5ffc0fabf9d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GUISystem &amp;</type>
      <name>Get</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>afa38da6ad68dc2fc717a32a6116b3991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a346864a59a4ebe1bfa926c28ec2afacf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnInitialized</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a5a8e2ef18bf903e862f90d7037189a99</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnClosing</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>aeebe4b0c657af31125d843e119377ec5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnIdle</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>aa4b776cecbab01d82b83ac76dcf4402a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DefaultInitWithoutWindow</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>adff422d2f644f9232b78d728a370ae42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DefaultInit</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a267ecf8f1e746444acdbcb86444f57d9</anchor>
      <arglist>(uint16 width, uint16 height, const std::string &amp;windowTitle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitNativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ab6c3ae4f9d83743e68be5c8a60b04f7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitGraphicAPI</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a75294593a2fd6e20e83fba7819d9653e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitRenderingSystem</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a42407f41cd6797d52ee6753c6c73d45e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IGraphicAPIInitializer *</type>
      <name>m_graphicApi</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a7cdbe3c0d4e73f00847f9a6883412067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>INativeGUI *</type>
      <name>m_nativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a8ae3ba8802726518ebaa1b06b7d0dc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>input::IInput *</type>
      <name>m_input</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4d4a7c3502a37dc5a000ec97c9feb09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceManager *</type>
      <name>m_resourceManager</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a9e5aa342499f22a3b788cb497751f94f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RenderingSystemOPtr</type>
      <name>m_renderingSystem</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a5552445d6bde4681525d839a55434e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; HostWindow * &gt;</type>
      <name>m_windows</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ae4210cf85ec93de9ef0ee88cba5497f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HostWindow *</type>
      <name>m_focusedWindow</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4b6a0c1d3871d0b0243fd288b29c6c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CommandLineArgs</type>
      <name>m_cmdArgs</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a6253888e980c605ba9ae50d09d80d551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static GUISystem *</type>
      <name>m_instance</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a5de1ff5eebc1f9ee698b40d8ca6befff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>GUISystemTester</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a6f776639fb5397b13d5792ea64102274</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a346864a59a4ebe1bfa926c28ec2afacf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnInitialized</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a5a8e2ef18bf903e862f90d7037189a99</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnClosing</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>aeebe4b0c657af31125d843e119377ec5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnIdle</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>aa4b776cecbab01d82b83ac76dcf4402a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DefaultInitWithoutWindow</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>adff422d2f644f9232b78d728a370ae42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>DefaultInit</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a267ecf8f1e746444acdbcb86444f57d9</anchor>
      <arglist>(uint16 width, uint16 height, const std::string &amp;windowTitle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitNativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>ab6c3ae4f9d83743e68be5c8a60b04f7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitGraphicAPI</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a75294593a2fd6e20e83fba7819d9653e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DefaultInitRenderingSystem</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a42407f41cd6797d52ee6753c6c73d45e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a3ed892f5db4d3383f4703d4f9d10d660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MainLoop</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4ff76aa79da14c603e1e05c2836f906e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MainLoopCore</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a4a00d49f9267b75aa30a410d9eb7c446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvents</name>
      <anchorfile>classsw_1_1gui_1_1_g_u_i_system.html</anchorfile>
      <anchor>a3605d2e3803dadd0eac5ffc0fabf9d6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::HCF</name>
    <filename>classsw_1_1_h_c_f.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>WriteMode</name>
      <anchorfile>group___hierarchical_chunked_format.html</anchorfile>
      <anchor>gac541f202a45393a2e8b72f2b53d04d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DirectToFile</name>
      <anchorfile>group___hierarchical_chunked_format.html</anchorfile>
      <anchor>ggac541f202a45393a2e8b72f2b53d04d87a122e6afe4108f732c9fa22e1f9ed4cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Indirect</name>
      <anchorfile>group___hierarchical_chunked_format.html</anchorfile>
      <anchor>ggac541f202a45393a2e8b72f2b53d04d87aa6a6d5f91bed97edecfe0a13b7a21915</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HCF</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a96c590fcddd503074c5c03b8f85a9073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HCF</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>ae1f916cf4a160d9eea8cef592241ec00</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>GetRootChunk</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a90c9263a0d1ee99ef154f988580785ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>CreateRootChunk</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a33d8336c441f36dd168659bd7c2b531f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a6642925b71b1d5c76fc67f8e27fe9777</anchor>
      <arglist>(const filesystem::Path &amp;filePath, bool readOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a76c6163e95ab48b141198d31820e348e</anchor>
      <arglist>(DataPtr data, Size size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a34087115b44b8de1d090597f0fd97078</anchor>
      <arglist>(const filesystem::Path &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a34bb72602507fdf723ca3fd88e0a0330</anchor>
      <arglist>(const filesystem::Path &amp;filePath, WriteMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a277688f84052328ac336de5857253750</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a0fab5d1fa9e1c5f9a8278cd988008417</anchor>
      <arglist>(AttributeType type, const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a65ab4f1bde0e94a68b0f48c11e902a73</anchor>
      <arglist>(const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>READ_ONLY</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>aae31282b27301d9649af62cd789ccf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>READ_WRITE</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a192d33a1b012e2972a3af5285d0c9f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Size</type>
      <name>UserDefinedAttributes</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a39c91f1dd054f434b36acbc0c0776407</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>ab4006251f47e697a1c93bae05849a5d8</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ImplHCF</type>
      <name>m_impl</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a7fce152e0a587352705f8e45c95378d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a6642925b71b1d5c76fc67f8e27fe9777</anchor>
      <arglist>(const filesystem::Path &amp;filePath, bool readOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a76c6163e95ab48b141198d31820e348e</anchor>
      <arglist>(DataPtr data, Size size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a34087115b44b8de1d090597f0fd97078</anchor>
      <arglist>(const filesystem::Path &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenFile</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a34bb72602507fdf723ca3fd88e0a0330</anchor>
      <arglist>(const filesystem::Path &amp;filePath, WriteMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a277688f84052328ac336de5857253750</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a0fab5d1fa9e1c5f9a8278cd988008417</anchor>
      <arglist>(AttributeType type, const AttributeStruct &amp;content)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_h_c_f.html</anchorfile>
      <anchor>a65ab4f1bde0e94a68b0f48c11e902a73</anchor>
      <arglist>(const AttributeStruct &amp;content)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::HostLogic</name>
    <filename>classsw_1_1gui_1_1_host_logic.html</filename>
    <member kind="function">
      <type></type>
      <name>HostLogic</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a28a44de08e9330b38847cbbef319fabe</anchor>
      <arglist>(HostWindow *hostWindow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HostLogic</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a56bc06b8517a54327eb57f65eaec77a6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveControl</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a86d0b2129020a7ef7832b018f3ff3149</anchor>
      <arglist>(UIElement *control)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterControlName</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a13205b58ed5e10145adc09454ec68deb</anchor>
      <arglist>(UIElement *control, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetControlName</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a9a5396410328206c2257ff6d437cd860</anchor>
      <arglist>(UIElement *control)</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetMemorySize</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ac2dcc841629b764a33c778c8e38adb4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ac2178548fcb4efdb7ff3c414f172d92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a9cb6e59271744333bef58c3b276a2b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnResized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ad306f72441c5f48b6dc421f436bd6e50</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMaximized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ad4ba3d556fe5f7f92f91c21a5a82ff38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMinimized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a6bdea48369c8e0c829e835df99950784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleKeyInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a3833fe4e9d91bbe07fcbfb74769f8a1d</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleCharInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a7d991105386c2cbde97c6e4aeaae382f</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseButtonInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ac8b1b5391aaf9ec4d6d23abf15c53af2</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseWheelInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a9d9683913a8cde32d3ff0f51376de897</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseMoveInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ab41ae8569184c878d548771fd41c120c</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>UIElement *</type>
      <name>HitTesting</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>aa8ffd2a29bb5e124efdb6d9fa8e045cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; UIElement * &gt;</type>
      <name>m_controlsTree</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>af282d2b52262c008715498deb99bbed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; UIElement * &gt;</type>
      <name>m_mousePath</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a19504186932633b97bb16558a5af4960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; UIElement * &gt;</type>
      <name>m_keyboardFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a36f14696e85f57141760ea3039d96581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>UIElement *</type>
      <name>m_mouseCapture</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a19bff3bfc5e7bef744eaee111e062b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; UIElement * &gt;</type>
      <name>m_invalidated</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ad40b5a9abdcf32699c0e7cb1db20110d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; UIElement *, std::string &gt;</type>
      <name>m_controlsNames</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>aca0f62660afb69b1828f4c326fb549e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostLogicTester</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>aa315a93f90de5a53bd2eed8b6421042f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; UIElement *, std::string &gt;</type>
      <name>m_controlsNames</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>aca0f62660afb69b1828f4c326fb549e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ac2178548fcb4efdb7ff3c414f172d92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a9cb6e59271744333bef58c3b276a2b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnResized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ad306f72441c5f48b6dc421f436bd6e50</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMaximized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ad4ba3d556fe5f7f92f91c21a5a82ff38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMinimized</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a6bdea48369c8e0c829e835df99950784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleKeyInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a3833fe4e9d91bbe07fcbfb74769f8a1d</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleCharInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a7d991105386c2cbde97c6e4aeaae382f</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseButtonInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ac8b1b5391aaf9ec4d6d23abf15c53af2</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseWheelInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>a9d9683913a8cde32d3ff0f51376de897</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleMouseMoveInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_logic.html</anchorfile>
      <anchor>ab41ae8569184c878d548771fd41c120c</anchor>
      <arglist>(const input::DeviceEvent &amp;event, input::Device *device)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::HostWindow</name>
    <filename>classsw_1_1gui_1_1_host_window.html</filename>
    <base>sw::gui::UIElement</base>
    <member kind="function">
      <type></type>
      <name>HostWindow</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a7c159b508db8e60365a59f652b7c3884</anchor>
      <arglist>(INativeWindow *nativeWindow, input::IInput *input, ResourceManager *resourceManager, IGraphicAPIInitializer *graphicApi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HostWindow</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a6184c3486d0b63e0be0d6f5be7eab87b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetMemorySize</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a50851ebb5372a60872629afa08593e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EngineObject *&amp;</type>
      <name>DataContext</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a505a657b4f538655f6e86debd4cc75c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveControl</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a1e8863b980a81b088a12dbd5d528ee9e</anchor>
      <arglist>(UIElement *control)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterControlName</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>ae471b825fb616d8e76441ffa6e8e8d65</anchor>
      <arglist>(UIElement *control, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetControlName</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>acae058143534203496675589c3be375f</anchor>
      <arglist>(UIElement *control)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; RenderTargetObject &gt;</type>
      <name>GetRenderTarget</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a50bb4e9c3811a83b1593b14610f36942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; SwapChain &gt;</type>
      <name>GetSwapChain</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>ac69bfdb1d402490fb6901b910278758e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>INativeWindow *</type>
      <name>GetNativeWindow</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a82ae7cc05342c2cc6b66be8c404221a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HitTest</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a8007d0d14f90d476220984c9c546359a</anchor>
      <arglist>(const Position &amp;point) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnRender</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a7f3545c3135b58b5cd5a550b182512ee</anchor>
      <arglist>(DrawingContext &amp;context) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Size2D</type>
      <name>Measure</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a94e569b5dc7aa6abb5fbfbb3bbbce649</anchor>
      <arglist>(Size2D availableSize) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Arrange</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a189dcbb722598b422132dd2a9176a916</anchor>
      <arglist>(Rect &amp;finalRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Size</type>
      <name>GetNumChildren</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>adaef2a896c0ba55b7bb27aa40ee4efa9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UIElement *</type>
      <name>GetUIChild</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a2bf9c70da939f652f665213fa3bfbe3b</anchor>
      <arglist>(Size idx) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AddChild</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>af5317760a265022baab798baeed799d6</anchor>
      <arglist>(UIElementOPtr &amp;&amp;child) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>af991e29a3de0504425cff55858508563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a9c25dc9c8c1516b55de4d9100c3e9f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnResized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>aa827d54529c825a70e8e952f81428481</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMaximized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a8fa37ecdc2763ca416a00c5493d836a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMinimized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a3d545ec7876f898889bef46bd06c8876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a3174664c6c5d45fbd14b5944c5c3658b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>afa51e3535688be5b3b6da68d3255c734</anchor>
      <arglist>(UIElement)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>INativeWindow *</type>
      <name>m_nativeWindow</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a139f5c298390f0e8ccab5101c2027810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>input::IInput *</type>
      <name>m_input</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a1bc9713b7a4fd12e409b3798391645c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ResourceManager *</type>
      <name>m_resourceManager</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a204acf7e3b87850b763aeadbb1725176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ResourcePtr&lt; RenderTargetObject &gt;</type>
      <name>m_renderTarget</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>ac1463f1be05eb67524543cef61aba476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ResourcePtr&lt; SwapChain &gt;</type>
      <name>m_swapChain</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>ac967c1574b1040fb8596a2444779cc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HostLogic</type>
      <name>m_hostLogic</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>ac8323d354cf0060ce7c0f349144230bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostWindowTester</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a438eb35174977c75898f7cda73ad203c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>af991e29a3de0504425cff55858508563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a9c25dc9c8c1516b55de4d9100c3e9f99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnResized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>aa827d54529c825a70e8e952f81428481</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMaximized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a8fa37ecdc2763ca416a00c5493d836a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnMinimized</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a3d545ec7876f898889bef46bd06c8876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleInput</name>
      <anchorfile>classsw_1_1gui_1_1_host_window.html</anchorfile>
      <anchor>a3174664c6c5d45fbd14b5944c5c3658b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HostWindowTester</name>
    <filename>class_host_window_tester.html</filename>
    <member kind="function">
      <type></type>
      <name>HostWindowTester</name>
      <anchorfile>class_host_window_tester.html</anchorfile>
      <anchor>a6d0a3214b24fb63e9896304c790f4265</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HostWindowTester</name>
      <anchorfile>class_host_window_tester.html</anchorfile>
      <anchor>a74e930595504c6834ae0ab1e53d8d356</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>sw::gui::HostWindowOPtr</type>
      <name>CreateWindow</name>
      <anchorfile>class_host_window_tester.html</anchorfile>
      <anchor>ab000675ba8a5fe7d4c9a80418ca046bc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IAnimation</name>
    <filename>class_i_animation.html</filename>
    <member kind="function">
      <type></type>
      <name>IAnimation</name>
      <anchorfile>class_i_animation.html</anchorfile>
      <anchor>a20e0afdbef837a8ade6cbc4f790f09f6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAnimation</name>
      <anchorfile>class_i_animation.html</anchorfile>
      <anchor>ae5a3debe8e58a4821345cf0e326b6c47</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Animate</name>
      <anchorfile>class_i_animation.html</anchorfile>
      <anchor>a65da0e603e8f93c55e3f44fb9fa4b4a2</anchor>
      <arglist>(EngineObject *object, TimelineBase *timeline)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Animate</name>
      <anchorfile>class_i_animation.html</anchorfile>
      <anchor>a525eb9b448b3780ad962ddb8d48b7690</anchor>
      <arglist>(EngineObject *object, TimeType time)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::IAttribute</name>
    <filename>classsw_1_1_i_attribute.html</filename>
    <member kind="function">
      <type></type>
      <name>IAttribute</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>ac6dd1e60ee085e88188ed627e0dbce74</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAttribute</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>a7edebe6e18940192d297394c37ef0f0f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ParseMemory</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>a483b3259ffa195d4f484e13f58b93de6</anchor>
      <arglist>(DataPtr data, Size size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>abf6f0e0fd6c0e151548f4ee109b96029</anchor>
      <arglist>(DataPtr data, Size size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Size</type>
      <name>ComputeSize</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>ae9c6f230c1fd2f29aece92de9d626308</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AttributeType</type>
      <name>GetType</name>
      <anchorfile>classsw_1_1_i_attribute.html</anchorfile>
      <anchor>a0c6e3295195a7612e90c56ac745d6960</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IBuffer</name>
    <filename>class_i_buffer.html</filename>
    <base>ResourceObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>class_i_buffer.html</anchorfile>
      <anchor>a32f2ba857528f4b287d38a2fde496992</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const BufferInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_i_buffer.html</anchorfile>
      <anchor>ab1ca0d78d6e4921ebb92c03506c72cd9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IBuffer</name>
      <anchorfile>class_i_buffer.html</anchorfile>
      <anchor>a6504e6c294b4c22a74e90c6b5d826f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~IBuffer</name>
      <anchorfile>class_i_buffer.html</anchorfile>
      <anchor>a62617022602daa701cc312e937a43121</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ICollection</name>
    <filename>class_i_collection.html</filename>
    <templarg></templarg>
    <base>IEnableProperty</base>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~ICollection</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>a759bff7424dd316222af0a49a808dcce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Add</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>a56e04ae1fd7784b7a319675da681fa38</anchor>
      <arglist>(ElementType object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Insert</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>aa5e330ebe91e5db89454aee6510a0381</anchor>
      <arglist>(ElementType object, int32 index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Remove</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>aca37ca0845d15259ccacc87aec695b07</anchor>
      <arglist>(ElementType object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Remove</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>aeb4c96776f83a1259ec34f9d41a50e17</anchor>
      <arglist>(int32 index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Move</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>ab1da67df3051024b3ebd7146c6373e8b</anchor>
      <arglist>(int32 srcIdx, int32 dstIdx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32</type>
      <name>Find</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>af5fbda48ee8a52c1432fa1b4b1f64e73</anchor>
      <arglist>(ElementType object)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Clear</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>a3e3b10113ec808f8843561553fe8f9cb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32</type>
      <name>Length</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>adf50ac4e70aa2e1ae64e1930947fdfe8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ElementType &amp;</type>
      <name>operator[]</name>
      <anchorfile>class_i_collection.html</anchorfile>
      <anchor>a79532ee1e1b8d99603d0876029f5a469</anchor>
      <arglist>(int32 idx)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::IControl</name>
    <filename>classsw_1_1gui_1_1_i_control.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>IControl</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ac253a5a7d96776e515412d7f22de0e72</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IControl</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ad4588d70f33a134d7788e9ce384d3de3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HitTest</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ad57bea1788cab6a2ed9b74731552ae9b</anchor>
      <arglist>(Position mouse, const Rect &amp;parentArea)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetName</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a0083a4a990353c42040130b9e703266c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLoaded</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a4d95a23873a5cbfb504ed6ee23bc4aaa</anchor>
      <arglist>(IControl *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Unloaded</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>af53d3826f372583ad986056b9ee72629</anchor>
      <arglist>(IControl *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a56503fcab155c2885e6ff9508f0d8b34</anchor>
      <arglist>(IControl *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a119ad6c397bdccd01a087de2e33ecf14</anchor>
      <arglist>(IControl *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseEnter</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a9ecded0919f60a739d375fc554502432</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseLeave</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ad693c4d0560d5ba1c536a265fa2c4f3f</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>accc1565cd99cb341a37e3ce9fd915db7</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a2704f9d078f7b449f2d5e3b822fce229</anchor>
      <arglist>(IControl *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>aad5390a0a981501a1eaed94b56249250</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a3a3569f5e4086a7a711477b5eae5e29c</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>af4879e51f9836036d6f342669006eee9</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ad7c515676203efcca3782dc52c0508ad</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a9925372ef323ac2e191d7cee5f333ae5</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>MouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ab83dd8b18aa1f6eacb88588a61ef7508</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseEnter</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a2fd50429017d11985a21bac9e19d29ba</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseLeave</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a6220213b5a335fc65c6ebb7d5bc06547</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>aad16acf71bab1c64bc89eacd35a55a07</anchor>
      <arglist>(IControl *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a35bd5e15394c707583ad6ce25d36c04e</anchor>
      <arglist>(IControl *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a581d8b085b785cf341f3f490ce093d82</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a2a6ba93068c9cc6cb4e0544f04874c1e</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a98bacdb2df9a5642b2f8019e3a574cc7</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a210e35114ba90af7f2fc88a2d53ec084</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ac1acaed0545eec669b919a29b420deb4</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewMouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>aa013eb2465265c8b1cbdaae2fad28225</anchor>
      <arglist>(IControl *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>acc094456318708346da1ca95b57f28fa</anchor>
      <arglist>(IControl *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a520bdf2b842e416f066eff238b0e304e</anchor>
      <arglist>(IControl *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewKeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ab4d7ccb10cd4a78558d7bc3a4ddba6ba</anchor>
      <arglist>(IControl *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PreviewKeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ac12d9f59e1eaca8c777cfd0c857846cb</anchor>
      <arglist>(IControl *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IControl *</type>
      <name>GetParent</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a57088af8a5f5a3d9a92679617a1a6b75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TopLevelControl *</type>
      <name>GetRootControl</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a60630f6708ef3b4aa1961c267ca932ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HostWindow *</type>
      <name>GetHost</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a3c997bc5bc8aa4418f85fecc656cadda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IControl *</type>
      <name>m_parent</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a8caff5341a09497541f9284a155e169b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_width</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a4f2e8825aab5d83a9e9585cf2d34168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_maxWidth</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a75757d078d8c2173b84c0b5d4ec87019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_minWidth</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>ab6e8ab8a90e1378d9699d59e790ae0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_height</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a427ada64790850b6354291736875483c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_maxHeight</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a2c6edfd5d3f498ba084b59792226ec0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_minHeight</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>aa747fec09cf5ee74b48ba9b37102c6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isVisible</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a91a2380b872a240c88425d00235aae6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isEnabled</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>abef20fec6ddf9b6f918a4278582ecd72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isMouseOver</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a1c71deae7ead898474a03f32829da218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isFocused</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a01519f7d5fecdbd95d6cda205d074395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isFocusable</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a6c102bc71214b548518693d8577cac4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VerticalAlignment</type>
      <name>m_verticalAlignement</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>abc3999294575abb155578e4bd1e98742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HorizontalAlignment</type>
      <name>m_horizontalAlignement</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a1a5fe6baee6d2b5d750c10a0a394a1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Thickness</type>
      <name>m_margin</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>a7741047d067e47dc5eac0619796dae3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EngineObject *</type>
      <name>m_dataContext</name>
      <anchorfile>classsw_1_1gui_1_1_i_control.html</anchorfile>
      <anchor>add6f6e93660ddfcd601023c3ddf86fed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IDeserializer</name>
    <filename>class_i_deserializer.html</filename>
    <member kind="function">
      <type></type>
      <name>IDeserializer</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ab450651239fbc2f66f286dc43b3633ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IDeserializer</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>abf181d4ba43fb47eb97773e4911fb5c7</anchor>
      <arglist>(std::unique_ptr&lt; SerializationContext &gt; serContext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IDeserializer</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a8b07bce45e062bf07ecac8e6b63cb980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromFile</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ac5dde3fe855454ea25728dc7dc1e4c01</anchor>
      <arglist>(const std::string &amp;fileName, ParsingMode mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFromString</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a4e3d069c5a72237c7c21bfbea2d98563</anchor>
      <arglist>(const std::string &amp;contentString)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetName</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>aa2e4cdafc62e9a6d4f83af8abc2009b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterObject</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a9f06467f4430ae832344ad1b04796171</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterArray</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a2facc14593dac9a7dac4597445e66f0f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterObject</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a986d7680cf1c7300e67cc69819c95396</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterArray</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a0b6984b71325caafceabdef4f2efc80e</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Exit</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a1398abe89ed24718488048bf2b3d12ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>FirstElement</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a7c0530b1cc565bb3812ed5852d45ea8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NextElement</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a0d470007aac145969afcec2f5042bef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PrevElement</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a08c7998e4ce782de1db21574acb138a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LastElement</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ac4aae4473eada8a7dc0f9dc9dbd719cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>aa8cfd54d2e775719fc907ab5aea54544</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a3f0fa5f5ca66fd5fc2f6b217bc2c93ac</anchor>
      <arglist>(const std::string &amp;name, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ae6b89f6fa2bd6ca252977c1c98efd402</anchor>
      <arglist>(const std::string &amp;name, uint32 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a8f59944ee3add863e223ad50e51d534d</anchor>
      <arglist>(const std::string &amp;name, uint64 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a168885fe6ff2eb4ffc3cc533b44a00e2</anchor>
      <arglist>(const std::string &amp;name, int32 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a6ce5fec73935835c04015d9fdbfaeaea</anchor>
      <arglist>(const std::string &amp;name, int64 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a9071ad0b604a13fd20c3bc870c6aefdf</anchor>
      <arglist>(const std::string &amp;name, bool defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a8a808cae748afd52f88450808f82f130</anchor>
      <arglist>(const std::string &amp;name, double defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a349815c56ab725e224cc99309f99b74a</anchor>
      <arglist>(const char *name, std::string &amp;defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a138b49be185ea5b2fc99725abb8a03fd</anchor>
      <arglist>(const char *name, const char *defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ab9cdf8ded3d639c4121e2c2634d6a028</anchor>
      <arglist>(const char *name, uint32 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a720b6ebf3f73531284465911c2e01702</anchor>
      <arglist>(const char *name, uint64 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a1d8835ef7f164074a1034b40e163add0</anchor>
      <arglist>(const char *name, int32 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>int64</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a79994501bea6576582dc752cad99e04b</anchor>
      <arglist>(const char *name, int64 defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ad6fd37d46026c83a269ac2084c98e876</anchor>
      <arglist>(const char *name, bool defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAttribute</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a184b88687f0eb16e32576373f7106001</anchor>
      <arglist>(const char *name, double defaultValue)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetError</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>aae34245a4f01ffcae44c04aae37528e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ContextType *</type>
      <name>GetContext</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>aeb74b772044d2b4f2326e0a3e08a2cff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DeserializerImpl *</type>
      <name>impl</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>a157b8e47821fedb5f485263363742d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; SerializationContext &gt;</type>
      <name>context</name>
      <anchorfile>class_i_deserializer.html</anchorfile>
      <anchor>ad311eea943c70e35778c3c96d3eccaa0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IEnableProperty</name>
    <filename>class_i_enable_property.html</filename>
    <member kind="function">
      <type>Property&lt; PropertyType &gt;</type>
      <name>GetTypedProperty</name>
      <anchorfile>class_i_enable_property.html</anchorfile>
      <anchor>adac0466c0238f4235c0cae2818bcb282</anchor>
      <arglist>(const char *propertyName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::IEventArgs</name>
    <filename>structsw_1_1gui_1_1_i_event_args.html</filename>
    <member kind="function">
      <type></type>
      <name>IEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_i_event_args.html</anchorfile>
      <anchor>a030cabed8a18be278673b17d4013519f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Handled</name>
      <anchorfile>structsw_1_1gui_1_1_i_event_args.html</anchorfile>
      <anchor>ab5b2de2abc96831f6a13210290863895</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IGraphicAPIInitializer</name>
    <filename>class_i_graphic_a_p_i_initializer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IGraphicAPIInitializer</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>a57be6b1938ceeb858dff43de39af2908</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IRenderer *</type>
      <name>CreateRenderer</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>a16075bfd88a95d8e09efc3217fe442a2</anchor>
      <arglist>(RendererUsage usage)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SwapChain *</type>
      <name>CreateSwapChain</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>ac810f23c01a14595dd3a9aaeb20cdaf6</anchor>
      <arglist>(SwapChainInitData &amp;swapChainData)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>InitAPI</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>a097f3d67032f20cde40e4c753ae6d5f4</anchor>
      <arglist>(GraphicAPIInitData &amp;initData)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ReleaseAPI</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>a4e04ea74f245ccce5ef0fac7aecf9396</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>GetRenderTargetHandle</name>
      <anchorfile>class_i_graphic_a_p_i_initializer.html</anchorfile>
      <anchor>a2ef7c093a797d4572e9fd01519f1ee59</anchor>
      <arglist>(RenderTargetObject *renderTarget)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::IInput</name>
    <filename>classsw_1_1input_1_1_i_input.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~IInput</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a89c2ad782f15f7253fb7d7a78dbf858f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>acd793a563d1bbb700142625ebad8fb38</anchor>
      <arglist>(const InputInitInfo &amp;initInfo)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const KeyboardState * &gt; &amp;</type>
      <name>GetKeyboardStates</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a73f4d779130a7c35cc2fd5265c6f616a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const MouseState * &gt; &amp;</type>
      <name>GetMouseStates</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a14c522b4aed233e7968ae0b426431b53</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const JoystickState * &gt; &amp;</type>
      <name>GetJoystickStates</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a068de09550e19ef2c04585a0ae921fa4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a779594b000713addec2895210de957d5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a5cd3b069a7cbcbed53aceda3fd7c439f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>aa82139d256711a0a3f72419d14716f41</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const InputDeviceInfo * &gt;</type>
      <name>GetDevicesInfo</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a00508c2598a3f5b239419f1be0d5b490</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a2e09a647bbcc6f1f0f62335b1c3d5a07</anchor>
      <arglist>(float timeInterval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>UpdateDevices</name>
      <anchorfile>classsw_1_1input_1_1_i_input.html</anchorfile>
      <anchor>a74d8a26ae30c78baccaa6ae7d5dfe347</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IInterpolator</name>
    <filename>class_i_interpolator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>IInterpolator</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>a051c51264c570fd665c29ef54b15cfcb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IInterpolator</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>abd0eebec8b2813a290c31ba040955699</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KeyType</type>
      <name>Interpolate</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>ab2122f52c08c057d6c1c38f202761f6f</anchor>
      <arglist>(TimeType time, Key&lt; KeyType &gt; &amp;left, Key&lt; KeyType &gt; &amp;right)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>ae0087607fe150178444f048aec02e151</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KeyType</type>
      <name>LeftTangent</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>a497c891e7b2fd459dc876865ae8924b9</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KeyType</type>
      <name>RightTangent</name>
      <anchorfile>class_i_interpolator.html</anchorfile>
      <anchor>afed1fdbbabca8a20641c238d0791b3b1</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::ImageBrush</name>
    <filename>classsw_1_1gui_1_1_image_brush.html</filename>
    <base>sw::gui::Brush</base>
    <member kind="function">
      <type></type>
      <name>ImageBrush</name>
      <anchorfile>classsw_1_1gui_1_1_image_brush.html</anchorfile>
      <anchor>ad0fa13dcba5124636526665f54ad8e70</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageBrush</name>
      <anchorfile>classsw_1_1gui_1_1_image_brush.html</anchorfile>
      <anchor>afec62ac4e82e3c9627ccb53e25a0d808</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_image_brush.html</anchorfile>
      <anchor>a6a90491211ffbd5ff24a63f9977946b8</anchor>
      <arglist>(Brush)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::ImplHCF</name>
    <filename>classsw_1_1_impl_h_c_f.html</filename>
    <member kind="function">
      <type></type>
      <name>ImplHCF</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>ac9048056e673375eca3d1a26b192e7f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImplHCF</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>ae84b51718514498879bdcc6f6a2cc08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>GetRootChunk</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a9b1ef0fa685238c693d3f628fbe74c96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Chunk</type>
      <name>CreateRootChunk</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a13ee65c327966e345e917eddf5d96500</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenFile</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a6f9cffba00193c9a5138e8c72adf8cc2</anchor>
      <arglist>(const filesystem::Path &amp;filePath, bool writeDirect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteFile</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a0aae7b2e382e5ffa1878aa4e6a0bcd65</anchor>
      <arglist>(const filesystem::Path &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadFile</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>acde3369c9b50a0d0e791d4035d3ed9db</anchor>
      <arglist>(const filesystem::Path &amp;filePath, bool readOnly)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddGlobalAttribute</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>ada07ce4d0938710f5a2b8af3c03c2bac</anchor>
      <arglist>(AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Attribute</type>
      <name>AddAttribute</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>aafb56dc9cba7702fcde0b0ab897b18b3</anchor>
      <arglist>(AttributeReprPtr &amp;list, AttributeType type, const DataPtr data, Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>ComputeWholeSize</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a5488e854c647b992ef2c1485921abd34</anchor>
      <arglist>(Attribute attrib)</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>ReserveMemory</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a872c703a75e8f8391f9e26571e660de6</anchor>
      <arglist>(Size dataSize)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>GetFile</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>aa67787af763ba735851fcae64ee39ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAddGlobalAttrib</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>add63fb187aacdc912df8981c43d83249</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_directWrite</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a642e6d41240902d494eb20f109014238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_attributesWritten</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a6adda43cc1f2e99f60fa2a9d0817337b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_fileReadOnly</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a63e8551c83ba43bbc2cb5fb60ed08bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a11bd74b21109f0136a89353a77b7b3b7</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>FRIEND_CLASS_TESTER</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>afc5d336deece8776d8e234c0e2f1d2b8</anchor>
      <arglist>(ImplHCF)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileHeader</type>
      <name>m_header</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a57cc85c655ab679a1315445f64dd1921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ChunkReprPtr</type>
      <name>m_rootChunk</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a2ee389e2808933797c73e389271c68b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AttributeReprPtr</type>
      <name>m_fileAttributes</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>ae4e360570edd0a65cad1dec57a0f018e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FILE *</type>
      <name>m_file</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a2f67fb53be8300aa834f1f38f56c1eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_writePtr</name>
      <anchorfile>classsw_1_1_impl_h_c_f.html</anchorfile>
      <anchor>a193d94b843fcb6726ebcbf85dec6c494</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::INativeGUI</name>
    <filename>classsw_1_1gui_1_1_i_native_g_u_i.html</filename>
    <member kind="function">
      <type></type>
      <name>INativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>a91fb801d23e22f2d7bf64669a25527d3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~INativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>a48cba805c194cbbcdd0cfec82a2cfa5d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>MainLoop</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>ad14361cbe7365a843ece4d3f0b44f462</anchor>
      <arglist>(bool blockingMode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>aff977e8913b47be6883109325ca652d4</anchor>
      <arglist>(const NativeGUIInitData &amp;initData)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual sw::input::IInput *</type>
      <name>UseNativeInput</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>aa9a5bf452aecc9251938b5398ba3f55c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual INativeWindow *</type>
      <name>CreateWindow</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_g_u_i.html</anchorfile>
      <anchor>a9cf4339d9c85809770bb4958668e5364</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::INativeWindow</name>
    <filename>classsw_1_1gui_1_1_i_native_window.html</filename>
    <member kind="function">
      <type></type>
      <name>INativeWindow</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a178c1985590a29dcf82904af2586ad13</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~INativeWindow</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a3c6f45bb1e4ee16d449e721451710080</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16</type>
      <name>GetWidth</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a37a3bcce8c4ddde6428765e1ed000735</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16</type>
      <name>GetHeight</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>ac0098919221e716e9251d8365d41d17f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16</type>
      <name>GetClientWidth</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a680715524cce14eb35b81c743fdba776</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16</type>
      <name>GetClientHeight</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>aa1f13a02f69e30202e526e41a8c9199d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WindowHandler</type>
      <name>GetHandle</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a56ca728a544e11bccded2124483a0066</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>GetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a8b5bae32fee152da2156bc44703a7904</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Show</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>ad728b1720d847a96886a504a8fd9014a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Hide</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a55c16eda5aa2b36c61d4288bf85bd4f5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_i_native_window.html</anchorfile>
      <anchor>a03d8fd6fc3d3453ce6cc3339e24b2735</anchor>
      <arglist>(const std::string &amp;newTitle)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IndexBufferInitData</name>
    <filename>struct_index_buffer_init_data.html</filename>
    <base>BufferInitData</base>
    <member kind="function">
      <type></type>
      <name>IndexBufferInitData</name>
      <anchorfile>struct_index_buffer_init_data.html</anchorfile>
      <anchor>a3bb015dc8cc19e5bbd41b270dcf1229b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferInfo</type>
      <name>CreateBufferInfo</name>
      <anchorfile>struct_index_buffer_init_data.html</anchorfile>
      <anchor>af964bb3fd419472cefa88e0048897e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PrimitiveTopology</type>
      <name>Topology</name>
      <anchorfile>struct_index_buffer_init_data.html</anchorfile>
      <anchor>a9a94a136c55a0f113d45026bdc5907cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Use4BytesIndex</name>
      <anchorfile>struct_index_buffer_init_data.html</anchorfile>
      <anchor>a72d3516056a0297df5ed9d276c6d331f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InputDeviceInfo</name>
    <filename>struct_input_device_info.html</filename>
  </compound>
  <compound kind="class">
    <name>sw::input::InputDispatcher</name>
    <filename>classsw_1_1input_1_1_input_dispatcher.html</filename>
    <class kind="struct">sw::input::InputDispatcher::DispatchedEvent</class>
    <member kind="function">
      <type></type>
      <name>InputDispatcher</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>afca6eac0724c8d249d4194259f8785aa</anchor>
      <arglist>(IInput *input)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDispatcher</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a827d3f4007d96ca68d4c9250e7e22a27</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>DispatchedEvent</type>
      <name>NextEvent</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a14c729343c2c57fe77c33b04beae0784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NoEventsLeft</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a6fc3dbbf0faa27427cc41f46b6227acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboards</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>ac573912d2d12da8c55e8626386c405ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouses</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>ac4cad67e4f7433e2314ba3894883dd8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoysticks</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>aefa69186067f910f6c1049d76e2b5f78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DispatchedEvent</type>
      <name>FindEvent</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a7c2af8b56ebf2adf0f2e6348f7eb6a96</anchor>
      <arglist>(Timestamp timestamp)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Timestamp</type>
      <name>FindMinTimestamp</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a46a9ccb60258aaf08074d1c10771083e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>m_keyboards</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>ab931c9bdb86ce8edc6d217be896596b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>m_mouses</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>added4eb7606373e6acb0f31a74073ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>m_joysticks</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>aabc175e75d326871797eb85fbc3a8488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Timestamp</type>
      <name>m_nextTimestamp</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a8bbca5eb82d3f8802787cf782ba88171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_eventLeft</name>
      <anchorfile>classsw_1_1input_1_1_input_dispatcher.html</anchorfile>
      <anchor>a8083d2634227652fb79a1c23a7c5a81e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::InputEventArgs</name>
    <filename>structsw_1_1gui_1_1_input_event_args.html</filename>
    <base>sw::gui::IEventArgs</base>
    <member kind="function">
      <type></type>
      <name>InputEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_input_event_args.html</anchorfile>
      <anchor>aca3df02863178340f0011193a45acd52</anchor>
      <arglist>(input::Device *device)</arglist>
    </member>
    <member kind="variable">
      <type>input::Device *</type>
      <name>Device</name>
      <anchorfile>structsw_1_1gui_1_1_input_event_args.html</anchorfile>
      <anchor>a21d76774fc5d5f25e83384f2c409667c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::InputInitInfo</name>
    <filename>structsw_1_1input_1_1_input_init_info.html</filename>
    <member kind="variable">
      <type>AppInstanceHandle</type>
      <name>AppInstance</name>
      <anchorfile>structsw_1_1input_1_1_input_init_info.html</anchorfile>
      <anchor>a034a647356dd3427461cbcc6d56d8e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WindowHandle</type>
      <name>WndHandle</name>
      <anchorfile>structsw_1_1input_1_1_input_init_info.html</anchorfile>
      <anchor>ad66483606f24eba505cd91ff22acbc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventCapture *</type>
      <name>EventCapturer</name>
      <anchorfile>structsw_1_1input_1_1_input_init_info.html</anchorfile>
      <anchor>a0ffabe227df3bb875e7b3fc920beca6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InputLayoutDescriptor</name>
    <filename>class_input_layout_descriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>InputLayoutDescriptor</name>
      <anchorfile>class_input_layout_descriptor.html</anchorfile>
      <anchor>a88cdedda020a40e5955b610e5770b790</anchor>
      <arglist>(const std::wstring &amp;layoutName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InputLayoutDescriptor</name>
      <anchorfile>class_input_layout_descriptor.html</anchorfile>
      <anchor>ad4db95b137f91f9582406a29671cf469</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>AddRow</name>
      <anchorfile>class_input_layout_descriptor.html</anchorfile>
      <anchor>a1a3bfaef3f1af8deb7ea7a0f14fead8f</anchor>
      <arglist>(const char *semanticName, ResourceFormat format, unsigned int inputSlot, unsigned int byteOffset, bool perInstance, unsigned int instanceDataStep)=0</arglist>
    </member>
    <member kind="function">
      <type>std::wstring &amp;</type>
      <name>GetName</name>
      <anchorfile>class_input_layout_descriptor.html</anchorfile>
      <anchor>a3da627989fe79a6b255feb4cb43555ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::wstring</type>
      <name>m_inputLayoutName</name>
      <anchorfile>class_input_layout_descriptor.html</anchorfile>
      <anchor>adffe88e6dbe09e3dcefd09b3757066db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::InputLayoutInfo</name>
    <filename>structsw_1_1_input_layout_info.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>SemanticName</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>ade7e26651089d5a8f8859c7426c12fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceFormat</type>
      <name>Format</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>a77a94f6160141cefb3dadcf9579eab4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>InputSlot</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>a71fd3df5aa7d03d61d3c15de088f7677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ByteOffset</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>a72193bf0727ed6bdb1f12bc23095dc50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PerInstance</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>a4c51daefd6768adde20ebb2823b63f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>InstanceDataStep</name>
      <anchorfile>structsw_1_1_input_layout_info.html</anchorfile>
      <anchor>aebcd6abeb7112ee96e532fa10b8d3d5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::IPanel</name>
    <filename>classsw_1_1gui_1_1_i_panel.html</filename>
    <base>sw::gui::IControl</base>
    <member kind="function">
      <type></type>
      <name>IPanel</name>
      <anchorfile>classsw_1_1gui_1_1_i_panel.html</anchorfile>
      <anchor>a39495e84e0de1f8c633b3a25e6fa70c9</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IPanel</name>
      <anchorfile>classsw_1_1gui_1_1_i_panel.html</anchorfile>
      <anchor>ada668dfc1b9e97b064e60cf19be4e1cc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IProperty</name>
    <filename>class_i_property.html</filename>
    <member kind="function">
      <type></type>
      <name>IProperty</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>a64b01d6482ecdc7b99c0034b52b470ef</anchor>
      <arglist>(const rttr::property metaInfo, IEnableProperty *object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IProperty</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>aa3f79d788e25df843e2d4f309a9fae9b</anchor>
      <arglist>(IEnableProperty *object)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetPropertyName</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>a93a3fc3868c97958645f5b3d26abca4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>rttr::type</type>
      <name>GetPropertyType</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>a97af57a04b3348d1a6ec59b856914364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>ac4692ae15ea702b219c1732c247134ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParamType ClassType::*</type>
      <name>GetMemberPointer</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>a0d7d9e9c73b28cd33c252bd95cbab472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const rttr::property</type>
      <name>m_metaInfo</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>ab603711e80637e652c2b729ca2e2f79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IEnableProperty *</type>
      <name>m_ownerObj</name>
      <anchorfile>class_i_property.html</anchorfile>
      <anchor>a2676d9e13c68ba10416f5a0321eccc4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IRenderer</name>
    <filename>class_i_renderer.html</filename>
    <member kind="function">
      <type></type>
      <name>IRenderer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>af4eb80bd2fff39acd7f79c0eef4bed2f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IRenderer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a92e2efdc26a3df3a617b22d84e189947</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>SupportsDefferedContextRendering</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>af58030ae42df9f4a2f8571d2c58706be</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a6b4dccebe343a2c7f1b7a1a2312eae16</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Draw</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a13ff59b0e3d84ada60487e9063d4ebb6</anchor>
      <arglist>(const DrawCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DrawInstanced</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a10218843f1d336555ce100a623a3f53e</anchor>
      <arglist>(const DrawInstancedCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a00ea39d205b8fff795c60b9b69cdcbb6</anchor>
      <arglist>(const SetRenderTargetCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>abd7a860892037c38784bf78239721ef0</anchor>
      <arglist>(const SetRenderTargetExCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ClearRenderTarget</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>aff988f17ef68b56a257fa0a4fc1c7b13</anchor>
      <arglist>(const ClearRenderTargetCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>UpdateBuffer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>ad41ab691f0aea8b8d6da8ef2ccd808fd</anchor>
      <arglist>(const UpdateBufferCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>BindBuffer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a5c3462e53abc424a5d1f6bdf78b921f0</anchor>
      <arglist>(const BindBufferCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>UpdateAndBindBuffer</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a4ddfe28489b2949885b704eaa7231239</anchor>
      <arglist>(const UpdateBindBuffer &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetDefaultBuffers</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a8185836380e981b75ae3b3b7f2bc8d60</anchor>
      <arglist>(const SetDefaultBuffersCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>ab01e3d193ac1ace1433748007169babd</anchor>
      <arglist>(const SetShaderStateCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>ae7e84b3f8ca994d0fc2dc762a3faca4a</anchor>
      <arglist>(const SetShaderStateExCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a432278b5d459e1ec35aa245e2d9d2a29</anchor>
      <arglist>(const SetRenderStateCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>a1feaa370f4b91b65b404d8614307cce1</anchor>
      <arglist>(const SetRenderStateExCommand &amp;command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyTexture</name>
      <anchorfile>class_i_renderer.html</anchorfile>
      <anchor>ae8d495d212ff3b62ad94f0ce04559a1f</anchor>
      <arglist>(const CopyTextureCommand &amp;command)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IRenderTarget</name>
    <filename>class_i_render_target.html</filename>
    <base>ResourceObject</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>IRenderTarget</name>
      <anchorfile>class_i_render_target.html</anchorfile>
      <anchor>ada4f362580ec31e9afab0f0af6df1fa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~IRenderTarget</name>
      <anchorfile>class_i_render_target.html</anchorfile>
      <anchor>a8e4128cecef1c30cd36794ba48c3343a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_i_render_target.html</anchorfile>
      <anchor>a4e814217f61f1e5f167609dc143d356a</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DefaultInterpolators::is_param_animation_enabled</name>
    <filename>struct_default_interpolators_1_1is__param__animation__enabled.html</filename>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>value</name>
      <anchorfile>struct_default_interpolators_1_1is__param__animation__enabled.html</anchorfile>
      <anchor>a6d8e8d2bc8ded69dd2f3119d00231163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ISerializer</name>
    <filename>class_i_serializer.html</filename>
    <member kind="function">
      <type></type>
      <name>ISerializer</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a33d03a7fb1adc4f34a0f09516f9b6d50</anchor>
      <arglist>(std::unique_ptr&lt; SerializationContext &gt; serContext)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ISerializer</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a7a86cdfeda6e6a80e7d193d94d4cc552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnterObject</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a3374685df2f145db057359f08303907c</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnterArray</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a92a16a7d0af5cad13af650b874e93b83</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Exit</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a6bcc8d5b329c84d873c5ec87e12f76ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a4391f988eeb5082b45097cb05d209588</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a6c2d03bcf63519b8675e37b1c6cadeb9</anchor>
      <arglist>(const std::string &amp;name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>afa13ef3b4a19fcb7031c016b695e746b</anchor>
      <arglist>(const std::string &amp;name, uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a1db713ead27186c9d902cad3de77d74b</anchor>
      <arglist>(const std::string &amp;name, uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a75535604ac456793b014fb8b066910dc</anchor>
      <arglist>(const std::string &amp;name, int32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a981b69108024bc80c9904ba9ac397e94</anchor>
      <arglist>(const std::string &amp;name, int64 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>ace8d2223dd9fffba1251cabbce03a986</anchor>
      <arglist>(const std::string &amp;name, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAttribute</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>af73f2ad937a54b2cc429f173352faac3</anchor>
      <arglist>(const std::string &amp;name, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveFile</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a888970d2040c294567edbdffed3e731a</anchor>
      <arglist>(const std::string &amp;fileName, WritingMode mode=WritingMode::Sparing)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>SaveString</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a16a6d6c5ec89db127a81a76372974a7d</anchor>
      <arglist>(WritingMode mode=WritingMode::Sparing)</arglist>
    </member>
    <member kind="function">
      <type>ContextType *</type>
      <name>GetContext</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a9bb3161c90bcf9b9c2aa7ff4f4cb3731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SerializerImpl *</type>
      <name>impl</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>afa0056f1f42ffac372dd92a53236e975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; SerializationContext &gt;</type>
      <name>context</name>
      <anchorfile>class_i_serializer.html</anchorfile>
      <anchor>a7c3f7ca74df08b72d0581e4b3da84580</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IShader</name>
    <filename>class_i_shader.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type>const std::wstring &amp;</type>
      <name>GetShaderFile</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>a848962d4b8141208813e9cad6ff711fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetShaderEntry</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>ad35f41c56fff64165e79f034c9509bfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>ab65bf019db9b10ae27ac141ed29616e0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>a49baa5a399cbfa895f048e06c479a248</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>ae67f472929f2a1103fd449a5783e7c51</anchor>
      <arglist>(const std::wstring &amp;file_name)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IShader</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>af9577e73289f2807dc973c7e250893f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~IShader</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>ad2879df7ac2d9bf5c0e463a4305a3e76</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_shaderEntry</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>a8ddf166da0258410e88a0f4c65aaced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::wstring</type>
      <name>m_shaderFile</name>
      <anchorfile>class_i_shader.html</anchorfile>
      <anchor>a75d9c492a3bc08c9c6695a4bd7a394cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IShaderInputLayout</name>
    <filename>class_i_shader_input_layout.html</filename>
    <base>ResourceObject</base>
    <member kind="function" protection="protected">
      <type></type>
      <name>IShaderInputLayout</name>
      <anchorfile>class_i_shader_input_layout.html</anchorfile>
      <anchor>a3ee2f9807a82095da9f170762e6b5eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~IShaderInputLayout</name>
      <anchorfile>class_i_shader_input_layout.html</anchorfile>
      <anchor>a014b63d27597f7994acbb75f878fadb7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_i_shader_input_layout.html</anchorfile>
      <anchor>a29315131d3b3f2f7c7b59728fadb8bbb</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::JoystickDevice</name>
    <filename>classsw_1_1input_1_1_joystick_device.html</filename>
    <base>sw::input::Device</base>
    <member kind="function">
      <type></type>
      <name>JoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a0736f31a03198f1e4ed595efcb7bfea6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a5343b0b4f638ee01b30626e1f22d40de</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const InputDeviceInfo &amp;</type>
      <name>GetInfo</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a718635395025fcdc2e794573e3a90953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JoystickState &amp;</type>
      <name>GetState</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>aac73f709bb7556adf0be9a89240f1745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyAllEvents</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a8c9fe8ef4ca80e8ff78f3555fd2077ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DeviceEvent</type>
      <name>ApplyNextEvent</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a42af6c67fd460195134d232d56a186a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Timestamp</type>
      <name>GetNextEvtTimestamp</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a0ad7a6780c78c3901e8c9608fb1b7aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>ab9a613600447a152ed3a1063d50d0a4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventQueue&lt; DeviceEvent &gt; &amp;</type>
      <name>GetEventsQueue</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a8e7822e21e9f21ab9fe611ffe70dd616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputDeviceInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>a38dff512cccc23751df6445a3a07ea0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>JoystickState</type>
      <name>m_state</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>afea284c045f4eb397f1a398b97b755b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventQueue&lt; DeviceEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_joystick_device.html</anchorfile>
      <anchor>ae3744765828d444e653ceffed1d6bb15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::JoystickState</name>
    <filename>classsw_1_1input_1_1_joystick_state.html</filename>
    <member kind="function">
      <type></type>
      <name>JoystickState</name>
      <anchorfile>classsw_1_1input_1_1_joystick_state.html</anchorfile>
      <anchor>ad90d092f5d9a05f711466d03b2474722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JoystickState</name>
      <anchorfile>classsw_1_1input_1_1_joystick_state.html</anchorfile>
      <anchor>a4e83fd9469d4e047b1f0cea2dcf87248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_joystick_state.html</anchorfile>
      <anchor>a5515ee55a5749f46dec31fd77e570db3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Key</name>
    <filename>struct_key.html</filename>
    <templarg>ValueType</templarg>
    <member kind="function">
      <type></type>
      <name>Key</name>
      <anchorfile>struct_key.html</anchorfile>
      <anchor>a62604d348b1879e8e00c440131c05240</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Key</name>
      <anchorfile>struct_key.html</anchorfile>
      <anchor>a08a5488f4bfcee9d15f4e24939684d1b</anchor>
      <arglist>(TimeType t, ValueType val)</arglist>
    </member>
    <member kind="variable">
      <type>TimeType</type>
      <name>Time</name>
      <anchorfile>struct_key.html</anchorfile>
      <anchor>a748848e5b54191b2a0e75d43667ea30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ValueType</type>
      <name>Value</name>
      <anchorfile>struct_key.html</anchorfile>
      <anchor>a6d3bbe3067ede60b16c4b74d8f6165c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::Keyboard</name>
    <filename>structsw_1_1input_1_1_keyboard.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalKeys</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga328c1724443473b2c64b39a059667e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NONE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5c59ede777f443e1f1e8bdeab219fd62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_ESCAPE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9ecbc97c2a407309bafee22a481eb171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7b310595aad2cb7b479b8377626aab2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae03dde91044cc94957cc89f6971a8eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_3</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a881fd5326fc9c3075f6bbfbba38066e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_4</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a099e5e10a558ea799613f4313009f64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_5</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a08bf822f801bf1ac2acd47eb61d9d72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_6</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a87c13e7f8e0ff74733d7fe0e1dbf4d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_7</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5550957fdf99c2b40ec557ec166c25cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_8</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9cded81a0386956fe7ac6c43a1869729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_9</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a36dc4dfddbcb385123c89783212e8fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_0</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ac973d87bf5a35893acabc32ab062d38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MINUS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a6bdf4107025735a65aa60426b7b7110a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_EQUALS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a28d2e0da74054fb4404cea5b74bcf248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_BACK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06acae8f4eca614decb57d7cc7832e130e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_TAB</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7f91d5d3addd89ed2580a2fe4bcde698</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_Q</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7a5bc4cebb3957e1c2320cc71c2519ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_W</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a37ba1bbe153eefbeb95c7e7a24c19057</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_E</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afc311a42f5670f54ec097deaf3f85d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_R</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4b61b3109bab1872c4315c0c623dfea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_T</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a0bddc14a1b92b401ea45653a69a28ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_Y</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a1937818ba28cc19bf10f53490143fb98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_U</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aca7b1cd91741726357790b4e758ae435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_I</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ac68f69fc5b4c0146a81f01b525af4bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_O</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a85dd690deb4933c9d524cabe243e684d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_P</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a492ce2438c47b336caf936b4ff7842e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LBRACKET</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a17e4d4c0dfec7faa681f44de95aaea12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RBRACKET</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a994ca7e7e6184b46be8d865b9243803e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RETURN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad7da1420ccb4174a2b2f64e38c91928b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LCONTROL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a110b16dc31c2095f889e0268fc22f8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_A</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a80494086029f08c4a8b9ad71eb7d3d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_S</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a769a2cfd072087045f174cdd7e3c7b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_D</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a8952b0118aee5489467c4b0b7496f847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7b632a04067cf24ad1778b61c9c7811a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_G</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4abf670676e220f1c8fff6273f970e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_H</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a6689d25acb55c74d21621887e58dd800</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_J</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a0d6467740685c12c85e21175998ebaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_K</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06abcbeafe54dabf29a080ec99fa7090e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_L</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a08ec6e2385c76ca47000fcb8c0bec83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SEMICOLON</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a967858bca64d5538b4891c6cd3475c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_APOSTROPHE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a17acb738513f6216971e308e623b6228</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_GRAVE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afd95f90676f884e5c35e78795da5374d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LSHIFT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3805c47f527a42e8d19468c124db6f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_BACKSLASH</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a30646fd40941f91ae7f9f16e81affa28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_Z</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06af9f20917366a332bb0acd58b17acdaeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_X</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a255fb5f10cf11671497cbcd0026fd934</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_C</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9462a21737510ecd629b708134b288ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_V</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a384fe7c98f15daaf19336f138efcf9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_B</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a2bc950286ef20a87f39731faa0f26df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_N</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a509f3cfa6a868ba64180c68b4a8c9432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_M</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4a4ef1989d54fed4a8bc6a9cf4373614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_COMMA</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5ef5712bb3948527dfefe65b53445ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PERIOD</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a609f334cc2957b484c45dc72133b0717</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SLASH</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7beab668e19a181dbc27ee02c81b3ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RSHIFT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad4f19bde1cddb2629caeec72bf114b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MULTIPLY</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad52d6e509f71c56c486395b8604fdf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LMENU</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a368e8469c6db93712c3abe9934c3dfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SPACE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06add1981f36d48f755f10f9e1328d43e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_CAPITAL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a902b2a424684578a4250dcc1e691a5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a009ed35f3d33db504f85d4b8c456834f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a44d526f45e73c07bad1a6a2d0e8fa799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F3</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afdcc87e3bdd4d4c7389ef9df561822b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F4</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5464873e293a78e20c6ddbaa68008214</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F5</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae8b7c482106dd89a0e2ad1207a3128ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F6</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afe21a01f15bedde6dcb44d6249369bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F7</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4b65275cd4c87ae3dbb0b968e6af6ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F8</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aff0b3307509245d9a04bf857fb566b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F9</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ac7991402b11b70b7d8a574b151dab48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F10</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06acb55a6040ca8e66d3b73825278c56f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMLOCK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae47f02460782a2ddffeb16da71ee2e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SCROLL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aa7a0cc0d524810df7efe5f74c1334fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD7</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7844df9b052de57319d128ecee3c6651</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD8</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a284d028f64b8a33b550346f15076138e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD9</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad8b973affd4ed2b4cba2e67bd592363d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SUBTRACT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9a6a469132d0a65514aa038c1936a8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD4</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5f935f8efc15bbf714536ec5e2a1e918</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD5</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9cae86c000dede18559165bbf7635c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD6</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06adad8571a90ff58d1fd9aae8cd015b78f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_ADD</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a337cc02a153eca9c48310755791783d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a1ad769f66fa742d3773f90c830b81ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a09865eb40cbbf2a615e2ecb9a604e9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD3</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad441b574abc866e28f7a9e2ee8c7366d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPAD0</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7e733ce3003e6ac08c485b6a906ee52a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_DECIMAL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad163ba292af69efb084316a8c75de74c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_OEM_102</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a12f6322bba528b40f1b47c134594b94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F11</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a14153daa6bd61a4e8d237af03715020e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F12</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad6ff4bd0d81c10cc1f54cfa2a39a6302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F13</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae591c75e0413a9943dd4d8deeaefde9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F14</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3517979350d8960e26ac96750e795b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_F15</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ab0871163a19be2e677e1807b7a28d670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_KANA</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aee020cdbbe59837dbd284bc73a788cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_ABNT_C1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7fb91cb7774269750eb14a34f0a56a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_CONVERT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a63a6b98d053614fbfa54e420a068d6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NOCONVERT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a464c693c2ba764622eb898cedde5cb51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_YEN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a63598b1dceeecc9adaa01401db65cac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_ABNT_C2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4a8e06a13b8b0281820de4f049eb03bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADEQUALS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae3181c85fc578a76aa61feaf92ef5886</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PREVTRACK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad1c9f9f2fcb45b844431c7d6dee893ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_AT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a66c48803e6be1b4dd7b2e06f59f5edd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_COLON</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aa5f33d523033735cb241c06e41a9d771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_UNDERLINE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7e9d70f6c9b410d6ac4b65b8be962b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_KANJI</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a2767650bbbbcf5592ba90e75ff44693a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_STOP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a8767a318c1ef2f6461e39730e0d7000c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_AX</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aa1c87ecc796b70bfd4fc2c34693fcaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_UNLABELED</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06abcac7d991027c2f3f5d3068b9dd3b704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NEXTTRACK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06af7062693e5b748d9982794b04b1046ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADENTER</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad06a601aaf6c104d7df4884e7f0019c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RCONTROL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a07633dc6921698c2d802eeac40e4f751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MUTE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3e5edc10e66c1313d27acd8a565f85b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_CALCULATOR</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a1a56a6c10eca9e701a437fce90865092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PLAYPAUSE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4d08c56d13c8679f20664e8e58d49215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MEDIASTOP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a546e64a391e28537a3aa3dfbc4678460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_VOLUMEDOWN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ac73d3ba0c937c70198b379aedbd8d0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_VOLUMEUP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9b6025b4e4017fe0b2ba56fd697de542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBHOME</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afd8c749112a1fd4b7f86dfe898ea29d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADCOMMA</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5f9550d6fb2a33ed7f729d658883ddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_DIVIDE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9272f634a9d1bf27ff61135d35c19c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SYSRQ</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a57764137e7ae1ae4b2ebb5d767d5c391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RMENU</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a8f6dd7ca061b5d3ad1c431efc9c578f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PAUSE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a922883da637971856ca4421f4858d1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_HOME</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a91af8e44c804c1221427753859d39a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_UP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a0e162a4d83676de445b45c0364b2b9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRIOR</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7baf4272054d10dd3d51a7db503430e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LEFT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a67c659cb45600b4f3b4e1f31a5926fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RIGHT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9a244020e6152c33ed24f8ea2c198af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_END</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a549c7e58caa065ecc3f4ae0f5f9e906e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_DOWN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a46d40fe39d3323848e38c68d1a93ddc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NEXT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4fcd89ef0b3d9e2d68e34c5e09956e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_INSERT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3a8a1b17094aa3a9f5c9274887669cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_DELETE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad83aefeaceba69b89cb2470b92e7ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LWIN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a6bbd464c35a1340e6111884b600899a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RWIN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4340a5ece044e572bf4d76889015d303</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_APPS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a22433cb0cbe1308f3397d815c64689d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_POWER</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a4617fd3179ae33d2db97d1fecc8024cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_SLEEP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a261fb4160dcd9cabc22a55f61c4ab0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WAKE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a28cd917825685963eeaa4dcfa92831c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBSEARCH</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a052941d6291fd9ded734f9642af311e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBFAVORITES</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a993da657f7df194d7c439ec9a92bff69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBREFRESH</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06afae6324c0e98f2402b27c5092d45c4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBSTOP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a73baeab68ac32950ebbb8c61dd061b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBFORWARD</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a8e154755f8f709d06d6a428dccd35383</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_WEBBACK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3876e5edb56765989fc469d7a472b2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MYCOMPUTER</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a44929be271bee8663ac803aeee11482a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MAIL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a21ea264d69a0bcf329d01edd116378d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_MEDIASELECT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ae8915a583c3539f76ad37a760c391476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_BACKSPACE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9e056c074aa61daa6368318d6d6d35ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADSTAR</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06af97f009d41fb9add2d8a72b588e3dd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LALT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3a1e3aa15e1f469c2a58dea799d24934</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_CAPSLOCK</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ad36fdc925e5720e26ee9f1928ef036fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADMINUS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a3d806120e249a012ef08c0088373bb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADPLUS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a7899013954476dc99f07047725d781b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADPERIOD</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aa43353010fe6e092cfce326640b7bce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_NUMPADSLASH</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aeca1e1e002e460cc198a578b3ea8f4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RALT</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aeaee8183afc845fe86e1646137fb1939</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_UPARROW</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a444b9b5c517dc3d56911f45ebbedddfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PGUP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a9a4fa0574e5f58382e2da304c6488af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_LEFTARROW</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06ac2a196d35f0a43ad3215259e0e1c2885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RIGHTARROW</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06add1f06a5eda1ee0e6478928fa961c6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_DOWNARROW</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a99ea86fb7917ddaa06f88334d5b7dcc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PGDN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a91ccc398e023f543f7cbb4af29a798b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PAGEUP</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a05f2f8f7c1612c90e0766a887d2cc3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PAGEDOWN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06aed66ba0766e446add20be1abc2eb5af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRINTSCREEN</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga328c1724443473b2c64b39a059667e06a5aef63bc075d61984bbf61c4f6043c56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::KeyboardDevice</name>
    <filename>classsw_1_1input_1_1_keyboard_device.html</filename>
    <base>sw::input::Device</base>
    <member kind="function">
      <type></type>
      <name>KeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a18a2717340840a58df024428ab702fca</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a362107355bc78e3cb07134cbc7b700a1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const InputDeviceInfo &amp;</type>
      <name>GetInfo</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a7ef62fc6d9edab50c5906885d1df9047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyboardState &amp;</type>
      <name>GetState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>accaf2df412f7aae68b905e79eb952590</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventQueue&lt; DeviceEvent &gt; &amp;</type>
      <name>GetEventsQueue</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a635e70f1ba6956899dcd0f7ab3e44351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyAllEvents</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a4152fd1c4eb23e4b69995a943cf48c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DeviceEvent</type>
      <name>ApplyNextEvent</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>ad1cbe8abd1a8e11b3d699dacd4811de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Timestamp</type>
      <name>GetNextEvtTimestamp</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a85d7d2fb6cf4ed752ed2b91a81b1037a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a3ed06fed74190560de8835a5b02ed10b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>ac351480caecb5ef714dd2e770a80dc32</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputDeviceInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>acc6c44b90d24896e4666de0216bf3976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeyboardState</type>
      <name>m_state</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a18f0b3d9744436ec7026a9bea70b5a43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventQueue&lt; DeviceEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>a11308cd124443c4e805df24aa1ffaa9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_device.html</anchorfile>
      <anchor>ac351480caecb5ef714dd2e770a80dc32</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::KeyboardEventArgs</name>
    <filename>structsw_1_1gui_1_1_keyboard_event_args.html</filename>
    <base>sw::gui::InputEventArgs</base>
    <member kind="function">
      <type></type>
      <name>KeyboardEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_keyboard_event_args.html</anchorfile>
      <anchor>a937d2edd5b07f09a3214bc2ad01fa05b</anchor>
      <arglist>(input::KeyboardDevice *keyboard)</arglist>
    </member>
    <member kind="variable">
      <type>input::KeyboardDevice *</type>
      <name>Keyboard</name>
      <anchorfile>structsw_1_1gui_1_1_keyboard_event_args.html</anchorfile>
      <anchor>a1d823986f48e0dd5b8f44ae615443e6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::KeyboardState</name>
    <filename>classsw_1_1input_1_1_keyboard_state.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyboardState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a6a892808dc09a4eba277e75f3cef01d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyboardState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a0d3157c99c1eb78bffbbad1cd6274eaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>GetKeyboardState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a37c731087eca4166bf27f4c0dee4ac7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a41296ce3688b678e175976f2bf21d7bb</anchor>
      <arglist>(Keyboard::PhysicalKeys key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyEvent</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a0dedbc65255a97eb4e2e8cc8504fe91f</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>KeyState *</type>
      <name>KeysState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>affe406dd0ee2584ba882cd11f7779af5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a04c4f2af6b1c878f4351d761be9c1999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeyState</type>
      <name>m_keyboardState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a8b1ecfe2a54ff1e2473b617c4b4ac3f3</anchor>
      <arglist>[KEYBOARD_STATE_KEYS_NUMBER]</arglist>
    </member>
    <member kind="function">
      <type>KeyState *</type>
      <name>KeysState</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>affe406dd0ee2584ba882cd11f7779af5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_keyboard_state.html</anchorfile>
      <anchor>a04c4f2af6b1c878f4351d761be9c1999</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::KeyEvent</name>
    <filename>structsw_1_1input_1_1_key_event.html</filename>
    <member kind="variable">
      <type>KeyState</type>
      <name>State</name>
      <anchorfile>structsw_1_1input_1_1_key_event.html</anchorfile>
      <anchor>ac580c344c86f2f4302ee9f0345d53aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Keyboard::PhysicalKeys</type>
      <name>Key</name>
      <anchorfile>structsw_1_1input_1_1_key_event.html</anchorfile>
      <anchor>ab7326125a94aa78b4f1c96963d0bb18a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::KeyEventArgs</name>
    <filename>structsw_1_1gui_1_1_key_event_args.html</filename>
    <base>sw::gui::KeyboardEventArgs</base>
    <member kind="function">
      <type></type>
      <name>KeyEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_key_event_args.html</anchorfile>
      <anchor>ac21aefc95ed93a74599ce61bf3fc3cb6</anchor>
      <arglist>(input::KeyboardDevice *device, input::Keyboard::PhysicalKeys key)</arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState &amp;</type>
      <name>State</name>
      <anchorfile>structsw_1_1gui_1_1_key_event_args.html</anchorfile>
      <anchor>acbb8f81178008c7ab3137cc07b1586fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>input::Keyboard::PhysicalKeys</type>
      <name>Key</name>
      <anchorfile>structsw_1_1gui_1_1_key_event_args.html</anchorfile>
      <anchor>a43e372b0ea4f7fe63199460947063f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsUp</name>
      <anchorfile>structsw_1_1gui_1_1_key_event_args.html</anchorfile>
      <anchor>aa4e3c18a8af2cc436b91f6a446875121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsDown</name>
      <anchorfile>structsw_1_1gui_1_1_key_event_args.html</anchorfile>
      <anchor>a12f4c1ac5921fc40cc919c1246bea1f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeySet</name>
    <filename>struct_key_set.html</filename>
    <templarg>KeyType</templarg>
    <member kind="typedef">
      <type>IInterpolator&lt; KeyType &gt;</type>
      <name>Interpolator</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>ad3a53374a52140cb9708822c31e9934b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeySet</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>af474d9b5d0d96126f1d5be6119afdb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Key&lt; KeyType &gt; *</type>
      <name>GetKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a7ddcddbd133caf1236c2dc24a11972fa</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a03bac8c432942615f2ebbe04b20c62da</anchor>
      <arglist>(TimeType time, const KeyType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>addd33c1020d8739704f06362d7fe2451</anchor>
      <arglist>(TimeType time, const KeyType &amp;value, InterpolatorType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>ad82118e26e55431a61117cb4825fe17f</anchor>
      <arglist>(TimeType time, const KeyType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a44dbb03e80a26cc1d885155e65efd4d5</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function">
      <type>KeyType</type>
      <name>Evaluate</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a035c258fe38e1c7f8196946005d5942e</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeInterpolator</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>abb5e846bd0ba9de4e21898513a6e0d66</anchor>
      <arglist>(Size idx, UPtr&lt; Interpolator &gt; &amp;&amp;interpolator)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Key&lt; KeyType &gt; &gt;</type>
      <name>Keys</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a289446d919a332fd96dc80b30b1d9613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; UPtr&lt; Interpolator &gt; &gt;</type>
      <name>Interpolators</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>ac304ddb99909cb0a18fdbf5080849465</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Key&lt; KeyType &gt; &gt;::iterator</type>
      <name>FindKey</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a405f3d3b277d8df1986d3edba1d5bed6</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Key&lt; KeyType &gt; &gt;::iterator</type>
      <name>FindPlace</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a7d65e67ef16fe6a25abc760ee75a6304</anchor>
      <arglist>(TimeType time)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddDefaultInterpolator</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a4721eb7a863f941be48d5761d299101c</anchor>
      <arglist>(Size keyIndex)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateInterpolator</name>
      <anchorfile>struct_key_set.html</anchorfile>
      <anchor>a249ca44a0a6e7889aebe55f297f485ff</anchor>
      <arglist>(Size index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::KeyState</name>
    <filename>classsw_1_1input_1_1_key_state.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyState</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>acbc77e1188cf96b7a106095eb8f5119d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPressed</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>aade360c87658a0e3dcaa20aaefa54eac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUp</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>aebc2edf21519235d9e87b5c02eeb8298</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKeyDownEvent</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a6e5bc2d65272e2d67d5d0ce4a865f620</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKeyUpEvent</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>abf35c14128f254536812bb7aa3f730ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>af6bbce4789c36e0c1c55ffd74f9a7971</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a57dd11aa544f34e91c18fd56d69df06c</anchor>
      <arglist>(KeyState newState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Press</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a8c77504162c2175a357b237236caf940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnPress</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>ae61514f8147275b0c87868f000470cd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HoldState</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a1a81189919cfeade36e4f33e52da68ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>ae204ebeeb9d35edd3ba876892e13f144</anchor>
      <arglist>(bool newState)</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>KeyStateFlag</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga7f35a7c275660995add6d442ad83e3c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>Pressed</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga7f35a7c275660995add6d442ad83e3c6a3e752ae12f79348a4ddc91e403fe41f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>DownEvent</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga7f35a7c275660995add6d442ad83e3c6abbde74b5acfe60c34058fa21c532025c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>UpEvent</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga7f35a7c275660995add6d442ad83e3c6af5d19b1acbe71fe7ead30ccd175cd1f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int8</type>
      <name>m_state</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a7413cb4a5c8459e6a694a70458699659</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Press</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a8c77504162c2175a357b237236caf940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnPress</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>ae61514f8147275b0c87868f000470cd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HoldState</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>a1a81189919cfeade36e4f33e52da68ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classsw_1_1input_1_1_key_state.html</anchorfile>
      <anchor>ae204ebeeb9d35edd3ba876892e13f144</anchor>
      <arglist>(bool newState)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::LinearGradient</name>
    <filename>classsw_1_1gui_1_1_linear_gradient.html</filename>
    <base>sw::gui::GradientBrush</base>
    <member kind="function">
      <type></type>
      <name>LinearGradient</name>
      <anchorfile>classsw_1_1gui_1_1_linear_gradient.html</anchorfile>
      <anchor>a07d62eacdf8029e7bb1c999e6f61556b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinearGradient</name>
      <anchorfile>classsw_1_1gui_1_1_linear_gradient.html</anchorfile>
      <anchor>a1b4f6d352a1770632443ab36bed5c7fb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_linear_gradient.html</anchorfile>
      <anchor>af9152c7ae61ae4de85c1a92e7f3475a9</anchor>
      <arglist>(GradientBrush)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinearInterpolator</name>
    <filename>class_linear_interpolator.html</filename>
    <templarg></templarg>
    <base>IInterpolator</base>
    <member kind="function">
      <type></type>
      <name>LinearInterpolator</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>ad220a72d77df79714b4b792ff0c0feaa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearInterpolator</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a9200da1471a20a18467bc38c48e015da</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinearInterpolator</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a6a9f3b8cbf29780d9604df66fa95cb0a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>Interpolate</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a125c0872e29cbd9ce9c72a399778d008</anchor>
      <arglist>(TimeType time, Key&lt; KeyType &gt; &amp;left, Key&lt; KeyType &gt; &amp;right) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a82ae1a446bb6184c3c354d2fce2e9294</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>LeftTangent</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a17c42e2691c12598e04148aff3dec85b</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual KeyType</type>
      <name>RightTangent</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>a0fea528710643b009ded053344712bc1</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>KeyType</type>
      <name>Tangent</name>
      <anchorfile>class_linear_interpolator.html</anchorfile>
      <anchor>aa2217cfff505332df3346e8d2f12f2db</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;left, const Key&lt; KeyType &gt; &amp;right) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MaterialObject</name>
    <filename>struct_material_object.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>ad87ec8561a13f6f98d6a46c8eeeaf112</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MaterialObject</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>afecd9ab2dd1dd5ff78a0c6b04f5d8403</anchor>
      <arglist>(unsigned int id=WRONG_ID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MaterialObject</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>a3caff4e34394e1ea3759f63cbcb63bc1</anchor>
      <arglist>(const MaterialObject *material)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNullMaterial</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>a78c54ca82d12fc9ab3ac30b13fec75d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>ac01e2646a3ee703f24cd0ffcade70058</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>friend</type>
      <name>ObjectDeleter&lt; MaterialObject &gt;</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>a9a430818514ba189632609a358483c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>Diffuse</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>a74c47357c06a05c18faaeb3496f62bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>Ambient</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>af96965e36d811ea39e0a552e54fe0afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>Specular</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>ac216affcfd490341c251138f60777015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>Emissive</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>afab36a770ab0dad5ecc09fa8bff8ffcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Power</name>
      <anchorfile>struct_material_object.html</anchorfile>
      <anchor>a705e66efef167038ddd293c8f8d31a02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MemoryChunk</name>
    <filename>class_memory_chunk.html</filename>
    <member kind="function">
      <type></type>
      <name>MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a7a7e3c90a09df7e6cfcd78eb951d8fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>ad995e9733e739b196397364a4d8c0fd3</anchor>
      <arglist>(int8 *&amp;&amp;dataPointer, uint32 dataSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>aa4e4285fdb3287bafe4cbd1ad6263196</anchor>
      <arglist>(uint32 dataSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a938c1538277789303a9933424e55beef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MemoryChunk &amp;</type>
      <name>operator=</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a36a9c8e9dc0bed71eedd2de8d8225ee4</anchor>
      <arglist>(const MemoryChunk &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a73700959988c3f08ce997812414eab32</anchor>
      <arglist>(const MemoryChunk &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryChunk</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a121f27c920592ae251a11e0cc408fd29</anchor>
      <arglist>(MemoryChunk &amp;&amp;chunk)</arglist>
    </member>
    <member kind="function">
      <type>MemoryChunk &amp;</type>
      <name>operator=</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a16151ee2b66b75d148c8d044c4ef86f6</anchor>
      <arglist>(MemoryChunk &amp;&amp;chunk)</arglist>
    </member>
    <member kind="function">
      <type>Type *</type>
      <name>GetMemory</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a7aeed3b0b5dd92a5d329f5b0b164224e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Type *</type>
      <name>GetMemory</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a3298239a73437fe47125e97cd6881b14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetMemorySize</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a6422a2c74bf4e42f81945efc5213e682</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>Get</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a42554db8628ff59a938091ad2d8ae713</anchor>
      <arglist>(uint32 index)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>Count</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>ac5a803361336a16426f0d7041471c69f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNull</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a37e43431bb9a24c4dcaa3e27a2a4b2c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MemoryCopy</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a9d54239afac54bd6fca2a477ecff5c13</anchor>
      <arglist>(const int8 *dataPointer, uint32 dataSize)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8 *</type>
      <name>m_memory</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>a948f0573fbc6c97e9122334f5f4f5222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_size</name>
      <anchorfile>class_memory_chunk.html</anchorfile>
      <anchor>aae6097157368497def9770e88beafbf3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockBlendingState</name>
    <filename>classsw_1_1_mock_blending_state.html</filename>
    <base>BlendingState</base>
    <member kind="function">
      <type></type>
      <name>MockBlendingState</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a12c4b2ec2653ca438eb1ebb877d50cd8</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>af856dfcb6d92befb38708ed8c39a10c3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const BlendingInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a40c19d4d939d381d0499554d790b01f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockBlendingState *</type>
      <name>Create</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a5fe9c21956e72d080656e450e10798cb</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockBlendingState</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a4253f269f1660f7034c8a5f03dc06a4e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a38db03395ddffbe2f33f667fb0078d37</anchor>
      <arglist>(BlendingState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BlendingInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1_mock_blending_state.html</anchorfile>
      <anchor>a2a4c7b9e5befd86940d0729fa2ff7869</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockBuffer</name>
    <filename>classsw_1_1_mock_buffer.html</filename>
    <base>BufferObject</base>
    <member kind="function">
      <type></type>
      <name>MockBuffer</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>a32ed1e33d8bca583fa28bbf01654af0d</anchor>
      <arglist>(const std::wstring &amp;name, const BufferInfo &amp;descriptor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>a881f18fc8e2d920276ad6de042b5cadd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const BufferInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>a920888e03c83390f225abf229d146a38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockBuffer *</type>
      <name>CreateFromMemory</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>a2266e87b626dff0b389000dfd56222cb</anchor>
      <arglist>(const std::wstring &amp;name, const uint8 *data, const BufferInfo &amp;bufferInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockBuffer</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>af35c912b8623fe10f98197e588f8d48d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>ac4bdac47a22e71ba095780ca7622072e</anchor>
      <arglist>(BufferObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BufferInfo</type>
      <name>m_descriptor</name>
      <anchorfile>classsw_1_1_mock_buffer.html</anchorfile>
      <anchor>ae5a65979484e11a76b93fae3e6e70f4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockComputeShader</name>
    <filename>classsw_1_1_mock_compute_shader.html</filename>
    <base>ComputeShader</base>
    <member kind="function">
      <type></type>
      <name>MockComputeShader</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>aee97cab470ee555c7351b41fc69341c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>ad51775191eda659a7fa628bd1e837e96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>a0e1f18dfb5a7fb93b944e77ef54bb0c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>ade33c54e0581fc3c8fdfd4afb7e7f53d</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockComputeShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>a0a03352e4917769f749f5957b8441ca6</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;cs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockComputeShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>ac1b1dbcb7a56f28bf7117e3d86d2a1c7</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockComputeShader</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>a3f0975f79f896f8f3eaaef94ebdbd6ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_compute_shader.html</anchorfile>
      <anchor>a81fcacb134e634d38ab09c0f27584b27</anchor>
      <arglist>(ComputeShader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockDepthStencilState</name>
    <filename>classsw_1_1_mock_depth_stencil_state.html</filename>
    <base>DepthStencilState</base>
    <member kind="function">
      <type></type>
      <name>MockDepthStencilState</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a4742fef4e8e38640388a173c1eaa323e</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a6f13fdee9e19c308980900a18c18ace9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const DepthStencilInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a333489f889a07ee7a1aca6ae647a6d73</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockDepthStencilState *</type>
      <name>Create</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a0b514495d3b70ef741d25a3c15b54a66</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockDepthStencilState</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>ae10f1ea932ee26cce27b925abe375946</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a8f5587d3aca2acc172360a6e0b4faed5</anchor>
      <arglist>(DepthStencilState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DepthStencilInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1_mock_depth_stencil_state.html</anchorfile>
      <anchor>a057a2c32bd95c361392530ea2ceb8528</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::MockGUI</name>
    <filename>classsw_1_1gui_1_1_mock_g_u_i.html</filename>
    <base>sw::gui::INativeGUI</base>
    <member kind="function">
      <type></type>
      <name>MockGUI</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a81af1ae84e44872e987b691b96924b49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MockGUI</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a9bdc9029eb2d902dd4289ebd90b1fd6d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>MainLoop</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>ab09a6a3d4a5486fea82657e44d21fef1</anchor>
      <arglist>(bool blockingMode) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a37a66a18f610c11c77358615514f00f7</anchor>
      <arglist>(const NativeGUIInitData &amp;initData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual sw::input::IInput *</type>
      <name>UseNativeInput</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>aa210a5e6a55b86cf44feb3eef0814a8b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual INativeWindow *</type>
      <name>CreateWindow</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a030b16500ca9316fcd6f04cd560c689f</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockGUI *</type>
      <name>Create</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a19539aeda7b4e98b9389d1b26cc8ba87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NativeGUIInitData</type>
      <name>m_initData</name>
      <anchorfile>classsw_1_1gui_1_1_mock_g_u_i.html</anchorfile>
      <anchor>a0f0c9f9208ae7c118b8d4918b81a46de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockInitializer</name>
    <filename>classsw_1_1_mock_initializer.html</filename>
    <base>IGraphicAPIInitializer</base>
    <member kind="function">
      <type></type>
      <name>MockInitializer</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>a5b41833ed2c7a65a5415c2c0d511a6fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MockInitializer</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>aabd7a1ce94c4509fe1b939ad473958fc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IRenderer *</type>
      <name>CreateRenderer</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>af5d86fa415b981443363371474b13aa3</anchor>
      <arglist>(RendererUsage usage) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SwapChain *</type>
      <name>CreateSwapChain</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>a941683a570a7b33b19dd877aad6432af</anchor>
      <arglist>(SwapChainInitData &amp;swapChainData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>InitAPI</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>aca9f2dd884ede5eb4744cc9e18767403</anchor>
      <arglist>(GraphicAPIInitData &amp;initData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ReleaseAPI</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>a4a06a63e7705e2464707c62b5cc7e844</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>GetRenderTargetHandle</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>a91bc27aeac3f386a216681bc81d1cf51</anchor>
      <arglist>(RenderTargetObject *renderTarget) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Nullable&lt; bool &gt;</type>
      <name>InitDevices</name>
      <anchorfile>classsw_1_1_mock_initializer.html</anchorfile>
      <anchor>aab4793bc86b0045c62fd99d7eb3d3bad</anchor>
      <arglist>(GraphicAPIInitData &amp;initData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockInputLayout</name>
    <filename>classsw_1_1_mock_input_layout.html</filename>
    <base>ShaderInputLayout</base>
    <member kind="function">
      <type></type>
      <name>MockInputLayout</name>
      <anchorfile>classsw_1_1_mock_input_layout.html</anchorfile>
      <anchor>a0ac6ce376dd530b07a2d960d760da6db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockInputLayout</name>
      <anchorfile>classsw_1_1_mock_input_layout.html</anchorfile>
      <anchor>a863d9361e54e713c7c46124e0130b5a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_input_layout.html</anchorfile>
      <anchor>a77d009023d7695e4b11c2dca7350f8b1</anchor>
      <arglist>(ShaderInputLayout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockInputLayoutDescriptor</name>
    <filename>classsw_1_1_mock_input_layout_descriptor.html</filename>
    <base>InputLayoutDescriptor</base>
    <member kind="function">
      <type></type>
      <name>MockInputLayoutDescriptor</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>ab6203424bcbe5f779313e44ee480a2ad</anchor>
      <arglist>(const std::wstring &amp;layoutName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MockInputLayoutDescriptor</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>afc097712a55dcc38414692d9a83e75bb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>GetNumElements</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>a2b2d22ea08cb436a3e400c3a8f9737b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>AddRow</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>ad0255f3d01d2d6c3fe52892109349bf6</anchor>
      <arglist>(const char *semanticName, ResourceFormat format, unsigned int inputSlot, unsigned int byteOffset, bool perInstance, unsigned int instanceDataStep)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CountSemantic</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>a03c1403f7587fba4d34d7bd14686036e</anchor>
      <arglist>(const char *semanticName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; InputLayoutInfo &gt;</type>
      <name>m_inputElement</name>
      <anchorfile>classsw_1_1_mock_input_layout_descriptor.html</anchorfile>
      <anchor>ac6c8a3e68c1c3e75dcee8d7c847ab01d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockPixelShader</name>
    <filename>classsw_1_1_mock_pixel_shader.html</filename>
    <base>PixelShader</base>
    <member kind="function">
      <type></type>
      <name>MockPixelShader</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>ae76c21c9985f35a03a126897c925728d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a6b4ebe66a634ac13f0452bf5676e811f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a5408c51e52bbcb0549187cd160710c6b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a5a4a72399755f21b04f1b97184191b67</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileName</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a7b54891930adf50150afa5cb3d7505da</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShaderName</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a5807ddb77450351cbb2442129221a875</anchor>
      <arglist>(const std::string &amp;shaderName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockPixelShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>ab5a8886f961c83470babbb6345cb7621</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockPixelShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>ac62c99fd7dabccd213c1074ad5da3059</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockPixelShader</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a8b89c3e9884711dfe227c6129f9a3b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_pixel_shader.html</anchorfile>
      <anchor>a2bdf4b22b668004d545b89b87d9de4df</anchor>
      <arglist>(PixelShader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockRasterizerState</name>
    <filename>classsw_1_1_mock_rasterizer_state.html</filename>
    <base>RasterizerState</base>
    <member kind="function">
      <type></type>
      <name>MockRasterizerState</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>ac7ceda16eb7cb10adb971db0933a2d15</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>afcaae7e659146b9ba8df4d03935a0c7d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RasterizerStateInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>adafe3f06086f5d5f7266923142d1189c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockRasterizerState *</type>
      <name>Create</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>a16cf8d9fc553980b42bd3a61b5e7a8a5</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockRasterizerState</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>a7964e37c2bda7f08bd47799bb2c4e36b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>acb50d265881de8945fe35e37db1875c1</anchor>
      <arglist>(RasterizerState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RasterizerStateInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1_mock_rasterizer_state.html</anchorfile>
      <anchor>a52bc3dd6b128976a821a94ca1b6b0a72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockRenderer</name>
    <filename>classsw_1_1_mock_renderer.html</filename>
    <base>IRenderer</base>
    <member kind="function">
      <type></type>
      <name>MockRenderer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a551994a7bcfd400067f618d3f386e810</anchor>
      <arglist>(RendererUsage usage=USE_AS_IMMEDIATE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MockRenderer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a143fecc2176ac0d073f33c14391186de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SupportsDefferedContextRendering</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a3ceb7ce936835b2e74de02c88d9c7f54</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a90a07b9754fa7dcfdefa76885f938d5e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Draw</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>af61625d80693a2f5ca9f5ab965f643bf</anchor>
      <arglist>(const DrawCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DrawInstanced</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>ab70796ee72af1c512729d84ace2df5b7</anchor>
      <arglist>(const DrawInstancedCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>ad2a928b7a877e9f007523942b8243010</anchor>
      <arglist>(const SetRenderTargetCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRenderTarget</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a7147105cae00997df9ad94330f2a9004</anchor>
      <arglist>(const SetRenderTargetExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ClearRenderTarget</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a472e4210c1d52afe2f55e02118615c64</anchor>
      <arglist>(const ClearRenderTargetCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateBuffer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>ab9b34d469cb36ed6ad76c766bfa6fc2d</anchor>
      <arglist>(const UpdateBufferCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BindBuffer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>af3245e0f41ed93ce49b3cfac45de9ee8</anchor>
      <arglist>(const BindBufferCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdateAndBindBuffer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a93d7e0998c8f3783edaeb64ab11b9a94</anchor>
      <arglist>(const UpdateBindBuffer &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetDefaultBuffers</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a04a22f63b6302d94c30f0b5cad2217ed</anchor>
      <arglist>(const SetDefaultBuffersCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a1d020876a0c56184c99b5132222884a6</anchor>
      <arglist>(const SetShaderStateCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>ab85dff42f7c13cf7260d34f2f937abbf</anchor>
      <arglist>(const SetShaderStateExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a7ac93d25b5494215776f90cd0be6586d</anchor>
      <arglist>(const SetRenderStateCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetShaderState</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>aaf97d176b93a2c057ab735b821a79669</anchor>
      <arglist>(const SetRenderStateExCommand &amp;command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CopyTexture</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a37d1e8b134dc221e62105a8ed00ad2b0</anchor>
      <arglist>(const CopyTextureCommand &amp;command) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetVertexBuffer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a5d0df75d2fdbc97ce4ca5af5db1a8460</anchor>
      <arglist>(BufferObject *buffer, unsigned int offset)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetIndexBuffer</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a8bf87de865d229fad32105c2eea1125e</anchor>
      <arglist>(BufferObject *buffer, unsigned int offset, bool extendedIndex)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetRenderTarget</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a91e87fed6e1a46141b0a3fa4d60e34d2</anchor>
      <arglist>(RenderTargetObject *const targets[MAX_BOUND_RENDER_TARGETS], RenderTargetObject *depthStencil)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetTextures</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a1b5d60322ca83208f888303e5441a3ba</anchor>
      <arglist>(TextureObject *const texturesArray[MAX_BOUND_RENDER_TARGETS], const uint8 shaderTypes[MAX_BOUND_RENDER_TARGETS])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_valid</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>a7c2b201138ba065b948a8b0646bc7984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RendererUsage</type>
      <name>m_usageType</name>
      <anchorfile>classsw_1_1_mock_renderer.html</anchorfile>
      <anchor>aa0c758a0742df309ae766545291a5b5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockRenderTarget</name>
    <filename>classsw_1_1_mock_render_target.html</filename>
    <base>RenderTargetObject</base>
    <member kind="function">
      <type></type>
      <name>MockRenderTarget</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a2fa7534971ba84c11c7c1236d5075e3f</anchor>
      <arglist>(TextureObject *colorBuffer, TextureObject *depthBuffer, TextureObject *stencilBuffer)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetWidth</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a4c42458370a58c1b7391709e5c6c265f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetHeight</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>acf0b85777df2f933777ba5a04bd459ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>aa0d2998aa9c2c5de65993a2231f7910a</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a9b0d49951be415f43defcb7bbef487a4</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockRenderTarget *</type>
      <name>CreateScreenRenderTarget</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a90c00fbb60541497ebeb187d9ba72e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockRenderTarget *</type>
      <name>CreateRenderTarget</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a2dc48f0f75d216fda849e041aad91303</anchor>
      <arglist>(const std::wstring &amp;name, const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockRenderTarget</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a06e5aa6224a3ddca77622c95eb3de5e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a7f9e23b829f02f71fc9d95389cf63dc6</anchor>
      <arglist>(RenderTargetObject)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>ValidateDescriptor</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a08d83fbd2d95185905252ac3a52b51b5</anchor>
      <arglist>(const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_height</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>aac74a156404c93c6b803ce67af47899e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_width</name>
      <anchorfile>classsw_1_1_mock_render_target.html</anchorfile>
      <anchor>a49abe87924b6c02b2bfe85ec5b1d45c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockSwapChain</name>
    <filename>classsw_1_1_mock_swap_chain.html</filename>
    <base>SwapChain</base>
    <member kind="function">
      <type></type>
      <name>MockSwapChain</name>
      <anchorfile>classsw_1_1_mock_swap_chain.html</anchorfile>
      <anchor>a3ea9dc82f1d183ed17b5922aecac3e53</anchor>
      <arglist>(RenderTargetObject *screenRT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MockSwapChain</name>
      <anchorfile>classsw_1_1_mock_swap_chain.html</anchorfile>
      <anchor>a402e4afbffc7444d4faa8d180a51b735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Present</name>
      <anchorfile>classsw_1_1_mock_swap_chain.html</anchorfile>
      <anchor>a333cce6b30d65993f5db8ffb563f4485</anchor>
      <arglist>(int syncInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>classsw_1_1_mock_swap_chain.html</anchorfile>
      <anchor>a744df6e362a1e73d357faf3fa4d6df68</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockSwapChain *</type>
      <name>CreateScreenSwapChain</name>
      <anchorfile>classsw_1_1_mock_swap_chain.html</anchorfile>
      <anchor>acfc56d1a3a484b169555c24d7db23803</anchor>
      <arglist>(RenderTargetObject *screenRT)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockTexture</name>
    <filename>classsw_1_1_mock_texture.html</filename>
    <base>TextureObject</base>
    <member kind="function">
      <type></type>
      <name>MockTexture</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a736b318e145a82ab8c1f3ee1b0dfd9e5</anchor>
      <arglist>(TextureInfo &amp;&amp;texInfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a5b4f9be93ee8b6b363fbfc11200ba99c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const TextureInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a01eb200271ba6833d16462f8a6229528</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const filesystem::Path &amp;</type>
      <name>GetFilePath</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>af092ab2ae59767ceaae5699ff5b946e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockTexture *</type>
      <name>CreateFromMemory</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a72130241819e4035fe0a15cd1bbd463c</anchor>
      <arglist>(const MemoryChunk &amp;texData, TextureInfo &amp;&amp;texInfo)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockTexture</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a5bb7bc40e6125967813fc2fe0e435be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Construct</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a7c0a7f28f48f645bf5ff9d2816f74d5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TextureInfo</type>
      <name>m_descriptor</name>
      <anchorfile>classsw_1_1_mock_texture.html</anchorfile>
      <anchor>a7a6b756d5acf990d49f73d91eb0bff4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::MockVertexShader</name>
    <filename>classsw_1_1_mock_vertex_shader.html</filename>
    <base>VertexShader</base>
    <member kind="function">
      <type></type>
      <name>MockVertexShader</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a8f613177bdd5c9cbbf271402cd26b92c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a7d65159bdb5072cf0efe11ec45393f72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReloadFromBinFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a08e9ce40b933e19ed06220e0fa2b0758</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveShaderBinFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a4d16146547c5a171cfc45daa8b979724</anchor>
      <arglist>(const std::wstring &amp;fileName) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileName</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>afa6c62c15f3ca9426997f0ff98e24656</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShaderName</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a876041985125e6a52fddb343c8cbc8cf</anchor>
      <arglist>(const std::string &amp;shaderName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockVertexShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a49abd59412ea702c9366f55e6c13499f</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockVertexShader *</type>
      <name>CreateFromFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>ad6372c2642b4433e4874d6f070ea110d</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, ShaderInputLayout **layout, InputLayoutDescriptor *layout_desc, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockVertexShader *</type>
      <name>CreateFromBinFile</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a28389d4c6d2d2f745fc318374448cfec</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~MockVertexShader</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>a30df10782e3767109c5090f19001f8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1_mock_vertex_shader.html</anchorfile>
      <anchor>af3159d868c5d17194048be8d04dfae76</anchor>
      <arglist>(VertexShader)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::MockWindow</name>
    <filename>classsw_1_1gui_1_1_mock_window.html</filename>
    <base>sw::gui::INativeWindow</base>
    <member kind="function">
      <type></type>
      <name>MockWindow</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a074d1086af3aee28c83e8a6878ca0d9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MockWindow</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a0a9039400ffd33eed5a6c415a102d8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetWidth</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a95f848da9b372362b2eb917310b52318</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetHeight</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a73d122f35e048a4a5efaa1130d0007fd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetClientWidth</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a61067c98671dace84c851b56f8393624</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetClientHeight</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a08ab400b272a2cf98cc0d1a2b972b28c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowHandler</type>
      <name>GetHandle</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>aab79a78403c77ac83b5186a0d739123e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>af57d0e6344361d1a379175006a6b2bdf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Show</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>ade13fb5b4a8daf07735589c5f82b8cd2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Hide</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a89cdf0ee2fcb62a983d71447e2734d6f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>aae0c26c2dba856ccdcd55394d2a614b8</anchor>
      <arglist>(const std::string &amp;newTitle) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MockWindow *</type>
      <name>CreateWindowInstance</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a939fedfcbf3f2a6807dc783542af65a0</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ShowAppWindow</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>aeddeb012e2306d85cbc734eeb8f639f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HideAppWindow</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a3155e924dd816c7f97db2ef18935a269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a3f4844c0e532dfec5d9d23bf9af5d83d</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::wstring</type>
      <name>m_title</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a7e58049b20a73335bad52282a5414d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WindowHandler</type>
      <name>m_windowHandle</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>a30f19336ad274124518a993d0e384483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_width</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>aae9ec05d4f6caec4bf3f62cc1557bce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_height</name>
      <anchorfile>classsw_1_1gui_1_1_mock_window.html</anchorfile>
      <anchor>ae3bf00f996e9670c7d39b7396c64aa4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::input::Mouse</name>
    <filename>structsw_1_1input_1_1_mouse.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalButtons</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga714359d6428fe2d46a5f9e71c08051b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalAxes</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gacc3c5384642c75be2669247d0b44aba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON0</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a4a62be1fc87ce0d5e356e6a88fc73ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8ad8f4931779a94674639192ddcdd3894f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a11af8405e742272b5c2c65158ab4be72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON3</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a30f76f774050fad5f91720d000fb1680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON4</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8af6490f4e1512c49d3a016f0dff55b92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON5</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a9d0d96c35c46404f226b91f306f9b8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON6</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a229ae5b57753b47f058ce625dc9b9c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON7</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8ae5176f3338ae0deedbfff7b924a9d4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_BUTTON</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a83e20fca946666c94c1e9f11edddcbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_BUTTON</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a9dcf539f9ae92e721d1abf13dc5097e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDDLE_BUTTON</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a5c0f8dff2b020d54e38e9d77363125ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XBUTTON1</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a4b89ec76272c03045509e36a5a932a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XBUTTON2</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a4b4020e59c0e32a3ede1e5e7107b733b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gga714359d6428fe2d46a5f9e71c08051b8a1a16fd9f1f4de328d3b88f7008d1156b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_AXIS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ggacc3c5384642c75be2669247d0b44aba0af73e24a41f2dd4abbb0d1d027e366030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y_AXIS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ggacc3c5384642c75be2669247d0b44aba0ab6a6fe88822a434baba6a3c680e3a92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z_AXIS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ggacc3c5384642c75be2669247d0b44aba0ad244ef9bc233cb19fd927fb225a89e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>W_AXIS</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ggacc3c5384642c75be2669247d0b44aba0a3f70b70f9ab64a667ff3e7a61d7f6b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHEEL</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ggacc3c5384642c75be2669247d0b44aba0ae445511d7cf902219c183ec5ab233668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::MouseButtonEventArgs</name>
    <filename>structsw_1_1gui_1_1_mouse_button_event_args.html</filename>
    <base>sw::gui::MouseEventArgs</base>
    <member kind="function">
      <type></type>
      <name>MouseButtonEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_button_event_args.html</anchorfile>
      <anchor>abe7ae2bcb8c3b876e52db59a91b34e24</anchor>
      <arglist>(input::MouseDevice *device, input::Mouse::PhysicalButtons button)</arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState &amp;</type>
      <name>State</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_button_event_args.html</anchorfile>
      <anchor>a17889a6dc4912bf9867b2d88c8fac62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>input::Mouse::PhysicalButtons</type>
      <name>Button</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_button_event_args.html</anchorfile>
      <anchor>ac123092d0f0dd348e9b574cc0e51af7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsUp</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_button_event_args.html</anchorfile>
      <anchor>a9ecd49fd0688aefa4fe7def1e6400e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsDown</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_button_event_args.html</anchorfile>
      <anchor>a1d77a898d8577374c5682415e5f4b083</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::MouseDevice</name>
    <filename>classsw_1_1input_1_1_mouse_device.html</filename>
    <base>sw::input::Device</base>
    <member kind="function">
      <type></type>
      <name>MouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a42b6944db945e95a3bf4e743a52533e1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>af9f0b37dde3cc72c3b308a86b6bedcaf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const InputDeviceInfo &amp;</type>
      <name>GetInfo</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a4ab6dad7192092a50649c0ba3960ce1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const MouseState &amp;</type>
      <name>GetState</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a1562f619a23293b9bfa3d249306856f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventQueue&lt; DeviceEvent &gt; &amp;</type>
      <name>GetEventsQueue</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>aeac7542ea7f69ab72a6985ea6223ccbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyAllEvents</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a3d7a82c23818d02be0c8f29361fe3336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DeviceEvent</type>
      <name>ApplyNextEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>aa8d010ae454565a2aab16d594d90d0c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Timestamp</type>
      <name>GetNextEvtTimestamp</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a5884d9d1f769aca460346a27c718b422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a124ee5993bc49d22e946f3e743b1ad32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a8b491f8c26cd581d9914cfe4bee3a4fa</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>InputDeviceInfo</type>
      <name>m_info</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>af54484e96fda914e711f2f4f42850695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MouseState</type>
      <name>m_state</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>ae45f3a6ece1c39c562b2277cd2ba8a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EventQueue&lt; DeviceEvent &gt;</type>
      <name>m_events</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>abafd8f3e7fe7a3c6c95ba3dcb209b129</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_device.html</anchorfile>
      <anchor>a8b491f8c26cd581d9914cfe4bee3a4fa</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::MouseEventArgs</name>
    <filename>structsw_1_1gui_1_1_mouse_event_args.html</filename>
    <base>sw::gui::InputEventArgs</base>
    <member kind="function">
      <type></type>
      <name>MouseEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a39bfa24fb9bcf8b8c581e55b92bf8ef2</anchor>
      <arglist>(input::MouseDevice *device)</arglist>
    </member>
    <member kind="variable">
      <type>input::MouseDevice *</type>
      <name>Mouse</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>aedf6a8970c752cb06490f2fcec658375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState *</type>
      <name>RightButton</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>aac3321a173e2e79eaa5ef548483a7caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState *</type>
      <name>LeftButton</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a1b8b27e0d69d2657a7462a809151e5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState *</type>
      <name>MiddleButton</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a54158f47e33e078e68ae68e6f58a9571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState *</type>
      <name>XButton1</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a11c17c4bc90791f4876e808e747be7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const input::KeyState *</type>
      <name>XButton2</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a69f0a95aa788a3e387d7b63bfa4a7dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>WindowPosX</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a0b0a56ae2a90334fd2e8084af5afe4c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>WindowPosY</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_event_args.html</anchorfile>
      <anchor>a7e5de754874d6a9e018c80f061ce18a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::MouseMoveEventArgs</name>
    <filename>structsw_1_1gui_1_1_mouse_move_event_args.html</filename>
    <base>sw::gui::MouseEventArgs</base>
    <member kind="function">
      <type></type>
      <name>MouseMoveEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_move_event_args.html</anchorfile>
      <anchor>a197e5010aff502a0d612cf1187b82759</anchor>
      <arglist>(input::MouseDevice *device, uint16 deltaX, uint16 deltaY)</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>MouseDeltaX</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_move_event_args.html</anchorfile>
      <anchor>aa07b143fd6c5bee156f0431b7bae6210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>MouseDeltaY</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_move_event_args.html</anchorfile>
      <anchor>a4c9fa110f431038763ca66994e54ed2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::MouseState</name>
    <filename>classsw_1_1input_1_1_mouse_state.html</filename>
    <member kind="function">
      <type></type>
      <name>MouseState</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a5085e905ff9e139fcedc50878e89e8ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MouseState</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ac6f1c9eabffcb3adf1bc2f32a74c64a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const float *</type>
      <name>GetAxesState</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ac929c83e02746013b758af1f574a8572</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>GetButtonsState</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a0f18ebe8afb017990461c95ae5431e9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetPositionX</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ac984e9c8a6d70f0b69edbb1f6b6237f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetPositionY</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a6b408c8158a80c0b2e067d3427f4bd67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>aa6da658c1713293562f118641965233d</anchor>
      <arglist>(short X, short Y)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>WheelDelta</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a3f7becb767d1c95e859e1491cdc2d3df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>LeftButton</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>aa026b163dc62872b7e046847cc5dccaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>RightButton</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>aa32f18b0c2f5eb8ffa0b190421019ee4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>MiddleButton</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a317b294a32cc3647d6990ca01c93b444</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>XButton1</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>abdfb6be6936401d7e077c545c1121623</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState *</type>
      <name>XButton2</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ab97a83cbad0a8da535fccb6fd7380c24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KeyState &amp;</type>
      <name>operator[]</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ac66952bdeadf1adbf48224ddb75097e2</anchor>
      <arglist>(Mouse::PhysicalButtons button) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a0d6ed63b6f2de140b5bb7329d366cefb</anchor>
      <arglist>(const ButtonEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a05c88d0f8d27427d48cb84b7bcd915de</anchor>
      <arglist>(const AxisEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a3ac300650e702ed1666c6cb223aede26</anchor>
      <arglist>(const CursorEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyEvent</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a628404c3b2ea452b7420b73404a8a13f</anchor>
      <arglist>(const DeviceEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a4f4a3cfbb1e177267f502453a7cb8a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>m_axes</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ad70571674a643b10a899d2c3ea62e5aa</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_position</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a87b5c3e61736c74b998894911150e35a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeyState</type>
      <name>m_buttons</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>ab836417d4c4ec6d9c35b2495a88591d5</anchor>
      <arglist>[MOUSE_STATE_MAX_NUM_BUTTONS]</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEvents</name>
      <anchorfile>classsw_1_1input_1_1_mouse_state.html</anchorfile>
      <anchor>a4f4a3cfbb1e177267f502453a7cb8a08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::MouseWheelEventArgs</name>
    <filename>structsw_1_1gui_1_1_mouse_wheel_event_args.html</filename>
    <base>sw::gui::MouseEventArgs</base>
    <member kind="function">
      <type></type>
      <name>MouseWheelEventArgs</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_wheel_event_args.html</anchorfile>
      <anchor>afb3bdd904e8aaa9a6df3f54e9b623938</anchor>
      <arglist>(input::MouseDevice *device)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Delta</name>
      <anchorfile>structsw_1_1gui_1_1_mouse_wheel_event_args.html</anchorfile>
      <anchor>a602f9df08a91b8318f1381dceb99ac2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::NativeGUIInitData</name>
    <filename>structsw_1_1gui_1_1_native_g_u_i_init_data.html</filename>
    <member kind="variable">
      <type>ChangedFocusDelegate</type>
      <name>FocusChanged</name>
      <anchorfile>structsw_1_1gui_1_1_native_g_u_i_init_data.html</anchorfile>
      <anchor>a2d7243a00d908d728553746f66a0c2ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::NativeWindowDescriptor</name>
    <filename>structsw_1_1gui_1_1_native_window_descriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>NativeWindowDescriptor</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>ae260af335a84893f75c77435dd37da29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NativeWindowDescriptor</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a5b85c2118018eb2b108e8dba2cc8f65f</anchor>
      <arglist>(const std::string &amp;windowTitle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitDefaults</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a496a71134b4c8e882a33337f213f0a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WindowHandler</type>
      <name>ParentHandle</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>abb24289c9c9c2adeed3bdc0226ec470b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>Width</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a6499f0cd4e48b058c71882d1b7958da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>Height</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a1c045b6a8c8215c223fb624faaba5f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>PositionX</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>aed83b00f86f7aed5af9f4638a7cd7bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>PositionY</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>af8f77b55c84d74bce1803fbdc729176a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Fullscreen</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>aa6d8c2924f1aa68a2b1cb2c2cc0b7ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ShowWindow</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>acd9fc3d4767bcc2752f7124c2359e20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddExitButton</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a03ef584b9f9979354273f8ebcedb9975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddMinimizeButton</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>af66fea355e5af49bb64c8eaf828c065d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddMaximizeButton</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>aa62d4d311137b7445128635d8cd821d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddFrame</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>aaafcf164780e09359e33a8aea5341efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddTitleBar</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a287bee4a9a1ab16784e501f3072ab141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AdjustSize</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>ab766579777d64c863f34161357cdd770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>WindowTitle</name>
      <anchorfile>structsw_1_1gui_1_1_native_window_descriptor.html</anchorfile>
      <anchor>a6bf64d76a2d721328a058d7c679a2842</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Nested</name>
    <filename>struct_nested.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>SomeValue</name>
      <anchorfile>struct_nested.html</anchorfile>
      <anchor>a0e63295f7069ae8aa3640a1a79aacebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>IntValue</name>
      <anchorfile>struct_nested.html</anchorfile>
      <anchor>a10638ddb9e8454e9f5ba5c76b69c9d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>Name</name>
      <anchorfile>struct_nested.html</anchorfile>
      <anchor>a474f4b9731bc0b7b0af60f082568fb6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Nested2</type>
      <name>Additional</name>
      <anchorfile>struct_nested.html</anchorfile>
      <anchor>a330216106138a60b0200603abddb842c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Nested2</name>
    <filename>struct_nested2.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>SomeValue</name>
      <anchorfile>struct_nested2.html</anchorfile>
      <anchor>ab7e198e43aa9b86f529c62def45b44de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>IntValue</name>
      <anchorfile>struct_nested2.html</anchorfile>
      <anchor>ab22ab110d4717f824654dbb1b5c6ddc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>Name</name>
      <anchorfile>struct_nested2.html</anchorfile>
      <anchor>a1df3a7f87f2160cca1937f8dfcdbd180</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Nullable</name>
    <filename>struct_nullable.html</filename>
    <templarg>ResultType</templarg>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>ade82be458a920fae6108c86260ad077c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>aff0897da8d49707b5def2e9162b814bb</anchor>
      <arglist>(NullableInit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a330d65265b54e45cdee37c2d1af3e7b2</anchor>
      <arglist>(std::string &amp;&amp;error)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a9dddbc351be5d1e60d2e81afb7420858</anchor>
      <arglist>(ResultType &amp;&amp;result)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a9800a6577e7f23192a8cae5eeed78501</anchor>
      <arglist>(const Nullable&lt; ResultType &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nullable</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>ab78b519d551fb6d80152dd641a42f066</anchor>
      <arglist>(Nullable&lt; ResultType &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a93776a0b5919c258a3e352dcbf26a3ef</anchor>
      <arglist>(const Nullable&lt; ResultType &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>aa410924decf793b38800e15d0298ec54</anchor>
      <arglist>(Nullable&lt; ResultType &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a33603d0fec4289222b8d5bc226e9418c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ResultType</type>
      <name>Value</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a219e63f518100b3cc8630744829b871f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>a79078120cfdb4b7eb24d2c593478028b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ErrorString</name>
      <anchorfile>struct_nullable.html</anchorfile>
      <anchor>ad6f90843dd64e5bd02b3f139308fc3d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ObjectDeleter</name>
    <filename>class_object_deleter.html</filename>
    <templarg>class_type</templarg>
    <member kind="function">
      <type></type>
      <name>ObjectDeleter</name>
      <anchorfile>class_object_deleter.html</anchorfile>
      <anchor>ac07fd4ce9411d6d47afd79b2c3f3f96d</anchor>
      <arglist>(const ObjectDeleterKey&lt; class_type &gt; &amp;deleter_key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_object</name>
      <anchorfile>class_object_deleter.html</anchorfile>
      <anchor>a2e45aa4214da60f3a96451674c0f8045</anchor>
      <arglist>(class_type *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_object</name>
      <anchorfile>class_object_deleter.html</anchorfile>
      <anchor>a44f919839abf35576f2b37dbd2c377d0</anchor>
      <arglist>(class_type *object, const ObjectDeleterKey&lt; class_type &gt; &amp;deleter_key)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ObjectDeleter</name>
      <anchorfile>class_object_deleter.html</anchorfile>
      <anchor>af9abdc5f54232b4e36e3c9e200ba7661</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ObjectDeleter</name>
      <anchorfile>class_object_deleter.html</anchorfile>
      <anchor>aa6d9cd61a1fbda06a90bde38d909f813</anchor>
      <arglist>(const ObjectDeleter &amp;)=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ObjectDeleterKey</name>
    <filename>class_object_deleter_key.html</filename>
    <templarg>class_type</templarg>
    <member kind="function" protection="private">
      <type></type>
      <name>ObjectDeleterKey</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>a9ba66de585fb7a7996389113127f598b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ObjectDeleterKey</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>a47be2e705202f80529987f08baa62433</anchor>
      <arglist>(const ObjectDeleterKey &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ObjectDeleterKey</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>af816a5bd52d703c4b96dd9bb075aaace</anchor>
      <arglist>(const ObjectDeleterKey &amp;&amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceContainer&lt; class_type &gt;</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>a8e70107a540912cd1a63f9c4efe97038</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RenderTargetObject</name>
      <anchorfile>class_object_deleter_key.html</anchorfile>
      <anchor>acb7b8cd120a7c92cc1e7655a618a473b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>filesystem::Path</name>
    <filename>classfilesystem_1_1_path.html</filename>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a5930da0185a69762bd03d33631875474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>acb8e37893bc76200e252fbf52a450b77</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>aa198ff78dc58eef2577b1d9130212dd1</anchor>
      <arglist>(Path &amp;&amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a8b7c56f638cee3597522579ba1abbb97</anchor>
      <arglist>(const std::wstring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a30e834b24f19ca943b473824c6ed996d</anchor>
      <arglist>(const Source &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator=</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ac495ce5b109e75dbfe892ed12b254e6a</anchor>
      <arglist>(const Path &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator=</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a212d64fb877548fabc6a5af8566c51c7</anchor>
      <arglist>(Path &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Path &amp;</type>
      <name>operator/=</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a0aa5f22639a7c5b7c386f3e57d34a6f8</anchor>
      <arglist>(const Path &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>acace29f8090b5a68370805f08804bb17</anchor>
      <arglist>(const Path &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a0fd86b058b30ab319e0ece55c903e172</anchor>
      <arglist>(const Path &amp;path1, const Path &amp;path2)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a02d87fc3130cad94bb3e45a2d46f11da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetFileName</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ab30f8edf69adb856bcaad83b3975e62b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetExtension</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ad75ad277bfd7b90c8a467897dc4558a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>GetParent</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>aa2d5a3f58e26f97311318de62065d2e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>GetDirectory</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a64027aa12208ade67a86cfce5502dbe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Normalize</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>acfab82da16bf1ac014838825a1b28084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasRoot</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a7f55344c5106576a68ae978e983f296c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasFileName</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ae288e99e27f09bebfdb27eda46246b58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasExtension</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a8538a13d75e163754a6e048ce5c77b53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRelative</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ac3d31159e815a69ae5d1d2b1e90c387f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAbsolut</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a1ebdad518240adc392de0b323b35c8db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ab3183434639a83fe6834d4a9e74d746c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const experimental::path &amp;</type>
      <name>GetStdPath</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>aceb4a74f50711fe635bc07279336838d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>WorkingDirectory</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ad55a346074f6b6748f5076d08c08c9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>experimental::path</type>
      <name>m_path</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>a67132acf9a1616e12dcbc976c9626fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend Path</type>
      <name>operator/</name>
      <anchorfile>classfilesystem_1_1_path.html</anchorfile>
      <anchor>ad756d9227febdebf18ed1c2e7dccb6c2</anchor>
      <arglist>(const Path &amp;path1, const Path &amp;path2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PixelShader</name>
    <filename>class_pixel_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>PixelShader</name>
      <anchorfile>class_pixel_shader.html</anchorfile>
      <anchor>afe68559fb69b48242ffb185a73e53521</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_pixel_shader.html</anchorfile>
      <anchor>a197cf38041ce40e46810764a43e69538</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~PixelShader</name>
      <anchorfile>class_pixel_shader.html</anchorfile>
      <anchor>a86ede137b53e92e4e2a67cc7a1ea7faa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_pixel_shader.html</anchorfile>
      <anchor>a1f65aa11a46afb88c1fc975bfae0439f</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; PixelShader &gt;</name>
      <anchorfile>class_pixel_shader.html</anchorfile>
      <anchor>aa8a03bb97ebdcfc874a5920ea9aa4d86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Properties</name>
    <filename>class_properties.html</filename>
    <member kind="function" static="yes">
      <type>static std::vector&lt; rttr::property &gt;</type>
      <name>GetPropertyPath</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a1b63e1ffc25b21f0a42fa4cf3e9f81af</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath, char separator= &apos;/&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; rttr::property &gt;</type>
      <name>GetPropertyPath</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>abab870e6749f480cd8cdabae28cb9a91</anchor>
      <arglist>(rttr::variant object, const std::string &amp;propertyPath, Size offset=0, char separator= &apos;/&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; rttr::variant, rttr::property &gt;</type>
      <name>GetProperty</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a325bc1e5c650fcc527c214c3be11093f</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath, char separator= &apos;/&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; rttr::variant, rttr::property &gt;</type>
      <name>GetProperty</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a6e6b6966f4fe493204d4ce0eb36412f3</anchor>
      <arglist>(rttr::variant object, const std::string &amp;propertyPath, Size offset=0, char separator= &apos;/&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; rttr::variant, rttr::property &gt;</type>
      <name>GetProperty</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a45549afeb5d11089ebdeaa057c3d28cd</anchor>
      <arglist>(EngineObject *object, const std::vector&lt; rttr::property &gt; &amp;propertyPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>GetValue</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a0c2b7c50309568a30aa627e4c37cbf0c</anchor>
      <arglist>(EngineObject *object, const std::vector&lt; rttr::property &gt; &amp;propertyPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static rttr::property</type>
      <name>EmptyProperty</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a4fbdc620e10ee9959d7573f2f64dc478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeID</type>
      <name>GetRealType</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>af9900dd4b381d5553c93a6e6125870b3</anchor>
      <arglist>(rttr::variant &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeID</type>
      <name>GetRealType</name>
      <anchorfile>class_properties.html</anchorfile>
      <anchor>a0fcddab3177f08a046b9b287c5a7676f</anchor>
      <arglist>(EngineObject *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Property</name>
    <filename>class_property.html</filename>
    <templarg>PropertyType</templarg>
    <base>IProperty</base>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>class_property.html</anchorfile>
      <anchor>a8bd527d0891f0702fdfb059f726925f4</anchor>
      <arglist>(const rttr::property metaInfo, IEnableProperty *object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Property</name>
      <anchorfile>class_property.html</anchorfile>
      <anchor>a78650fbe22b338601cb22cf81dff92c0</anchor>
      <arglist>(IEnableProperty *object)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType &amp;</type>
      <name>operator()</name>
      <anchorfile>class_property.html</anchorfile>
      <anchor>a14d426198d57d7b7fad5480621938b21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PropertyType &amp;</name>
      <anchorfile>class_property.html</anchorfile>
      <anchor>a86c8dd4c80aeee753bb7eeed1970a7a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PropertyPath</name>
    <filename>class_property_path.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PropertyPath</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>acde1bbf751265e3a84a2529652891c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyPath</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>a488bf64755fcd3fb871e923706dcf8e2</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PropertyPath</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>aeab0efccb920a78077ac38172fbddc33</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>KeyType</type>
      <name>GetValue</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>af77c69fe31ce701efcbb919f57b5c9f8</anchor>
      <arglist>(EngineObject *object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>aa00078938c6f601861cd17f7e298b6fd</anchor>
      <arglist>(EngineObject *object, KeyType &amp;value)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; rttr::property &gt;</type>
      <name>m_path</name>
      <anchorfile>class_property_path.html</anchorfile>
      <anchor>ad1b72a90a5bd6066f948416ea599c3e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::RadialGradient</name>
    <filename>classsw_1_1gui_1_1_radial_gradient.html</filename>
    <base>sw::gui::GradientBrush</base>
    <member kind="function">
      <type></type>
      <name>RadialGradient</name>
      <anchorfile>classsw_1_1gui_1_1_radial_gradient.html</anchorfile>
      <anchor>a8e86615d5ef45db43ad1984b79f80883</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RadialGradient</name>
      <anchorfile>classsw_1_1gui_1_1_radial_gradient.html</anchorfile>
      <anchor>a77ef5af54d2b730cfac998e088f16fce</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_radial_gradient.html</anchorfile>
      <anchor>a3e9aaf6ae61f8d569a5769e8d186a7d7</anchor>
      <arglist>(GradientBrush)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RasterizerState</name>
    <filename>class_rasterizer_state.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type></type>
      <name>RasterizerState</name>
      <anchorfile>class_rasterizer_state.html</anchorfile>
      <anchor>a181df3dadddec531939645180ba1c4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RasterizerStateInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_rasterizer_state.html</anchorfile>
      <anchor>ac442953ca6b6dca85ef1d9ce8e7053ee</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~RasterizerState</name>
      <anchorfile>class_rasterizer_state.html</anchorfile>
      <anchor>abeab62045e2affd1b8e564140bdd6c7a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_rasterizer_state.html</anchorfile>
      <anchor>abe9937c61abecf2813e53de400c9a2a7</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; RasterizerState &gt;</name>
      <anchorfile>class_rasterizer_state.html</anchorfile>
      <anchor>aa183def3ad8b3b5d51ea1954f22d5cad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RasterizerStateInfo</name>
    <filename>struct_rasterizer_state_info.html</filename>
    <member kind="function">
      <type></type>
      <name>RasterizerStateInfo</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>a9cb74eaa0f6c86b917f22c48c5074615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>ac1f5a395502105371e752e27e3045d56</anchor>
      <arglist>(const RasterizerStateInfo &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>CullMode</type>
      <name>CullMode</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>a5ef2c99cb250fd0a6d991d18e1b24e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FillMode</type>
      <name>FillMode</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>a995ee7bfa9639cda529c3eb153dac0b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DepthBias</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>ae80981b1bf095ac99addd73cbd081fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsClockwise</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>a1495da0fc3b7151f4895689d9d770dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EnableScissor</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>af493f7a272c228e687e3eb93172ac3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>EnableZClipping</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>a5f4a8c8d65f6f2ea1bbfdf9ad06b7cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ConservativeRasterizer</name>
      <anchorfile>struct_rasterizer_state_info.html</anchorfile>
      <anchor>ad365bdeb42883e7f3b7312a131adef5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::Rect</name>
    <filename>structsw_1_1gui_1_1_rect.html</filename>
    <member kind="function">
      <type>float</type>
      <name>GetWidth</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a9a942bdb5355a922b658526b320451c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetHeight</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a32047501f539536a0d5d2c55f63b0800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersects</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a7a2d1b54ed51d2cfb6306594b4504f97</anchor>
      <arglist>(const Position &amp;pos)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Left</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a96a4e5f756855d9224d4d3df3b38bb37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Right</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a8f5cdfec73195de3e1719fadc49ac57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Top</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a3e2924e256ce4a142da55d44dcefb72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Bottom</name>
      <anchorfile>structsw_1_1gui_1_1_rect.html</anchorfile>
      <anchor>a2ac8f2835f8ed508cc5f8c96a5d2fb89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::RegisteredEvent</name>
    <filename>structsw_1_1gui_1_1_registered_event.html</filename>
    <member kind="function">
      <type></type>
      <name>RegisteredEvent</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>abb2fb723b57b8e8c8bdde53ec777992d</anchor>
      <arglist>(const std::string &amp;eventName, RoutingStrategy strategy, TypeID ownerType, TypeID eventTypeId)</arglist>
    </member>
    <member kind="variable">
      <type>TypeID</type>
      <name>OwnerType</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>a0317828bba3095a5dea1059b607a9447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TypeID</type>
      <name>EventArgumentsType</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>a3308a8c4c7a132cf22f26541d65e041f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventType</type>
      <name>ID</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>a1b4a78cb2d91bca2ccb623ed34f0b114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RoutingStrategy</type>
      <name>Strategy</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>ae800fdc8f4afed3ec969b9e9489bbe3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>EventName</name>
      <anchorfile>structsw_1_1gui_1_1_registered_event.html</anchorfile>
      <anchor>ab8f2e72a4dc85411550217f31ccd03b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RelativeTimeline</name>
    <filename>class_relative_timeline.html</filename>
    <base>TimelineBase</base>
    <member kind="function">
      <type></type>
      <name>RelativeTimeline</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>aaec38b79e091953521cacb7a6bf9ffb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RelativeTimeline</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a598ddc821f653ee17925a0bd84f40c4f</anchor>
      <arglist>(TimelineBasePtr parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RelativeTimeline</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a9fbb15bf9493eb17959ebdab699b6ca8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a7181b177b91a1dc493aa4e0a8048c2e8</anchor>
      <arglist>(WrapMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPostWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a8ad6de148b1dda8b8e07442a5bcaf3f7</anchor>
      <arglist>(WrapMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDuration</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a2e43c79b17d76580cf90adc95dccefc0</anchor>
      <arglist>(TimeType duration)</arglist>
    </member>
    <member kind="function">
      <type>WrapMode</type>
      <name>GetPreWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a8d5c67997d7256389b9000fb04704ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WrapMode</type>
      <name>GetPostWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a22256518d006410740a08340903edd82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeType</type>
      <name>GetDuration</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>abb4bb2d0530be553749ea03809539f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a3b221f81636ee021d55b2f52cbd9de2d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Start</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>ae6ef38f6e18f804bcecb2af464198936</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Stop</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a0befa7b74fc353f512eb56ce9a8f6b56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Pause</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>ad99a128bd865548a3cafef9a020839cd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetTimeline</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a2d16cf17e8900c83b9445ef051b65f5f</anchor>
      <arglist>(TimelineBasePtr &amp;parent) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsPaused</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a95790d3f1d66cf0dd8ca5a05da5cdf26</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TimeType</type>
      <name>EvalTime</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a340dd9fa689b44b8ff8a49969b302e9f</anchor>
      <arglist>(TimeType parentTime)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TimeType</type>
      <name>EvalElapsedTime</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>ad845b3c5b5a3a4ab491f626e2639e8aa</anchor>
      <arglist>(TimeType parentTime)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeType</type>
      <name>m_offset</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a0a0b2214dc224012d760e5ad0dceb065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeType</type>
      <name>m_duration</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>aae74ef26c30253b9a081f31347572ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>m_factor</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a5c5f3b0e79d5c789a8d2eda4447dc675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WrapMode</type>
      <name>m_preWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a0ae90099d1fec78dc1d952b736fb5f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WrapMode</type>
      <name>m_postWrap</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a13c5cb7d94ab51dce0db14a77c32d5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isStarted</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>ab841930b2ed4b83662b3c1c0e591bf3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isPaused</name>
      <anchorfile>class_relative_timeline.html</anchorfile>
      <anchor>a95bbada5cef044b35869e23559b1bc6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RendererCommand</name>
    <filename>struct_renderer_command.html</filename>
  </compound>
  <compound kind="class">
    <name>sw::gui::RenderingSystem</name>
    <filename>classsw_1_1gui_1_1_rendering_system.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderingSystem</name>
      <anchorfile>classsw_1_1gui_1_1_rendering_system.html</anchorfile>
      <anchor>a68294fb7a66357485f2e9053fe4b5172</anchor>
      <arglist>(ResourceManager *resourceManager, IRendererOPtr &amp;&amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderingSystem</name>
      <anchorfile>classsw_1_1gui_1_1_rendering_system.html</anchorfile>
      <anchor>aee033a505e32cbfdda76960c98cc5c7c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>IRenderer *</type>
      <name>GetRenderer</name>
      <anchorfile>classsw_1_1gui_1_1_rendering_system.html</anchorfile>
      <anchor>a4557ec5f082fe74f39b0af23e539c0ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IRendererOPtr</type>
      <name>m_renderer</name>
      <anchorfile>classsw_1_1gui_1_1_rendering_system.html</anchorfile>
      <anchor>a27b2a495b633ad6fde07d84777394ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ResourceManager *</type>
      <name>m_resourceManager</name>
      <anchorfile>classsw_1_1gui_1_1_rendering_system.html</anchorfile>
      <anchor>a95c6c6601a5dd7ecb20d9cdf07eaa1b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RenderTargetDescriptor</name>
    <filename>struct_render_target_descriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderTargetDescriptor</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a8c3394ab8e30e840a6deb96d3e263bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureInfo</type>
      <name>CreateTextureInfo</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a9f0251de59e2dcf71034dd0317dcb62a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>TextureWidth</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a7e79debfb846c8c618056e84b49f1bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>TextureHeight</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>ad7d6f28bb51f3287dd0af10a2baa5391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>ArraySize</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>af4145a9fb54f6d72cbe998f4391926ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CPURead</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a4b56c58e1e31058001986d3cd4bafa22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CPUWrite</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a4e9c68e6d5ec57ca2cba854477bcf5bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AllowShareResource</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>af05a53883eb318d106e86bab5c04f737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsCubeMap</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a41a1e8ec199961e7bda630373085b144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>NumSamples</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>ad3cb2090b0cb0f4cad8d664f8407230b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>SamplesQuality</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>adc049ec23d5874fecd337d1e463338a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureType</type>
      <name>TextureType</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>ab8dcaed308474a1d6cf5bd1cdfbc0872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceFormat</type>
      <name>ColorBuffFormat</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a32cca748b13b666ec7fca56d09e89417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DepthStencilFormat</type>
      <name>DepthStencilFormat</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>a81f5e5fd739258edd4528d0be3f67363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceUsage</type>
      <name>Usage</name>
      <anchorfile>struct_render_target_descriptor.html</anchorfile>
      <anchor>aa5abf839863028c6634c18b45627b1e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RenderTargetObject</name>
    <filename>class_render_target_object.html</filename>
    <base>IRenderTarget</base>
    <member kind="function">
      <type></type>
      <name>RenderTargetObject</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>abb566aa8da5ae35db4af116d9086ef0a</anchor>
      <arglist>(TextureObject *colorBuffer, TextureObject *depthBuffer, TextureObject *stencilBuffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RenderTargetObject</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>a14d1c16d377c1a36b521dee3c68e2b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>GetColorBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>aaf00ad4916d373ef9ededac951f2e5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>GetDepthBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>a4b7cc6d3647861765b27e799abc5eeb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>GetStencilBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>afdd7150f90527344016b2c5c980cc3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>a4a2553fd25ff6bc7c2a0d44be921ede2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourcePtr&lt; TextureObject &gt;</type>
      <name>m_colorBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>aeff80e4e01c0e5034dc860395f0b7427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourcePtr&lt; TextureObject &gt;</type>
      <name>m_depthBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>aca273fd936be6572f2b68aaf8b931e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourcePtr&lt; TextureObject &gt;</type>
      <name>m_stencilBuffer</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>a0ffa6f034e95e94b055bae69746e9d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>ab544ccffc881bfe2eed92ee024e4ed70</anchor>
      <arglist>(IRenderTarget)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>class_render_target_object.html</anchorfile>
      <anchor>af1a069733884bbe87db680f9ccbaf6eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer</name>
    <filename>class_resource_container.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, TYPE *resource)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; TYPE &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(TYPE *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, TYPE * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; BlendingState &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, BlendingState *resource)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BlendingState &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(BlendingState *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, BlendingState * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; BufferObject &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, BufferObject *resource)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(BufferObject *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, BufferObject * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; ControlShader &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, ControlShader *resource)</arglist>
    </member>
    <member kind="function">
      <type>ControlShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>ControlShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ControlShader *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; ControlShader &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(ControlShader *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, ControlShader * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; DepthStencilState &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, DepthStencilState *resource)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; DepthStencilState &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(DepthStencilState *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, DepthStencilState * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; EvaluationShader &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, EvaluationShader *resource)</arglist>
    </member>
    <member kind="function">
      <type>EvaluationShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>EvaluationShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EvaluationShader *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; EvaluationShader &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(EvaluationShader *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, EvaluationShader * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; GeometryShader &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, GeometryShader *resource)</arglist>
    </member>
    <member kind="function">
      <type>GeometryShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>GeometryShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeometryShader *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; GeometryShader &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(GeometryShader *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, GeometryShader * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; PixelShader &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, PixelShader *resource)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; PixelShader &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(PixelShader *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, PixelShader * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; RasterizerState &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, RasterizerState *resource)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; RasterizerState &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(RasterizerState *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, RasterizerState * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; RenderTargetObject &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, RenderTargetObject *resource)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; RenderTargetObject &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(RenderTargetObject *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, RenderTargetObject * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; ShaderInputLayout &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, ShaderInputLayout *resource)</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; ShaderInputLayout &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(ShaderInputLayout *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, ShaderInputLayout * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; TextureObject &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, TextureObject *resource)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; TextureObject &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(TextureObject *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, TextureObject * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceContainer&lt; VertexShader &gt;</name>
    <filename>class_resource_container.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3a866ec2c338040901ed8ce753c0589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceContainer</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a3602f4e6b2a01749469e7fde1e435b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afdc68a4c63f6ecba64b4f8d3a695573b</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Remove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aa4c54af3f9dbec3c72bd68f90705b7d9</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveUnused</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8976c85aef3e1a6a8cdac5e2d2b28c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsafeAdd</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a5e309c25a80121b0ccbb50f9ab4cf266</anchor>
      <arglist>(const std::wstring &amp;name, VertexShader *resource)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ad6b7476bb6ae8a24b4f151a16ffe0e4a</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>get</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aace5b7d95ead3d06b38a54a5f80a81ce</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetNextId</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a8bcbfa349d884673d8b889396ab54e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>Find</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a912b5a805652d3c212b7d117bd8a59f4</anchor>
      <arglist>(const DescType &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; VertexShader &gt; &gt;</type>
      <name>List</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a2a5f5adbbb2f8ecde18bc0e0dfd8e377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ada995b70eb060e9e490f5a54125d3cdf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ForceRemove</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>afff075ffceb4da55a912449340c3fc16</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ForceRemoveAll</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>ac20891e40698548481712f8762825e59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReleaseMemory</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a7156b6d8da51f370854d6dfc28ff90ca</anchor>
      <arglist>(VertexShader *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::wstring, VertexShader * &gt;</type>
      <name>container</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>af48cbcabc0639a0116ac7ace47fdb738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a86c4642a177fad08bfecbfbc9c3e15b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_container.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceManager</name>
    <filename>class_resource_manager.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourceManager</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a3b32babd2e81909bbd90d7f2d566fadb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourceManager</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a671c186e4630599e7e36d000c53eaf80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>CreateRenderTarget</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a4a00d9a302bf876e5da170ef13385e53</anchor>
      <arglist>(const std::wstring &amp;name, const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>AddRenderTarget</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6d4f0b23fa0b0de46a8d28fff79eb318</anchor>
      <arglist>(RenderTargetObject *renderTarget, const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>GetBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>adcffb170252d32748cd8b21c45a894e5</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>GetRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a03c03a352158e5671249e0f58e81ba7e</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>GetDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a8edae9d08d694de857221d4137460175</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>GetBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a1b08986aff83d3c41c48564a806eaf51</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>GetRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afbbb3f3f4c2789a98778e0888afbbb3f</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>GetDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a80fa37818eb016443a5ca56ccefd9f7d</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>GetRenderTarget</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6e09c7acd359431076af06d466f26016</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>GetVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a222fa0ab8f64b5e3bcc78df8ae471baf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>GetPixelShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ace1eebc1a488546e415da5a84a4b0a3d</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>GetTexture</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a15e5b0e38aaa1903884c6fedb80c4a7d</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a4c0647b8d4f67887d2b090da2c0250db</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetConstantBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a1983d7d1f1d41074cf974c23a0f569e3</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a964d3d93cf9185c4c674593c696e32a2</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>GetLayout</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a5fc1190ef3eaad6f3fcfd3bf5b9c16e6</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>LoadTexture</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ad7dcc47c454a2fc26a8b749ad54383ce</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>LoadVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a9a2453870e7f70bc30bb0adf894fb4bb</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>LoadVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a19e57a77cdcdb9dd34412ec5de7bd8ac</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry, ShaderInputLayout **layout, InputLayoutDescriptor *layout_desc)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>LoadPixelShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a2977707a7db0d1f8fde88af7dd929ed0</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>GeometryShader *</type>
      <name>LoadGeometryShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>abfbd6f74d74b5f4a768719f7fe8a25b6</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>ControlShader *</type>
      <name>LoadControlShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a46cd94180a92f4c29633a4e67c24fc38</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>EvaluationShader *</type>
      <name>LoadEvaluationShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a3d10b2e2559a70f6fc7d0893d9384538</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afd23a950d995a07a6bcc5ca64bfc860d</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int element_size, unsigned int vert_count)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a851ebe7c00ed3837dbf83d4c195be1a6</anchor>
      <arglist>(const std::wstring &amp;name, const VertexBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a00341729422730d9560abc9b7c6f63ec</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int element_size, unsigned int vert_count)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>af311328699c5d0d8862703a372dda584</anchor>
      <arglist>(const std::wstring &amp;name, const IndexBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateConstantsBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ab1e2a00f687397ba7716d8bd0e51127f</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateConstantsBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aee48f8c03cbc64d10072c49d498a33af</anchor>
      <arglist>(const std::wstring &amp;name, const ConstantBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BlendingState &gt;</type>
      <name>CreateBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ab964a55a5383da42a150d17aded9c07d</anchor>
      <arglist>(const std::wstring &amp;name, const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; RasterizerState &gt;</type>
      <name>CreateRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aa318476801d2b5a1adbe130d6cd40817</anchor>
      <arglist>(const std::wstring &amp;name, const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; DepthStencilState &gt;</type>
      <name>CreateDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aa98fb2ab5bab0a6c6c1f20f5edd0d8cb</anchor>
      <arglist>(const std::wstring &amp;name, const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListVertexBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a7f001790be854ea3d0b850d12ef15e87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListIndexBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ad8e11d51c4c3a77d2c6ea8ec0ed02320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListConstantBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a07fef77be4fc9bead38fe574794c134c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; ShaderInputLayout &gt; &gt;</type>
      <name>ListShaderLayouts</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>af178f3b3bee8990ed588aa2d17514d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; TextureObject &gt; &gt;</type>
      <name>ListTextures</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a7768cad282cb1a934d460c3faa48ef36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; VertexShader &gt; &gt;</type>
      <name>ListVertexShaders</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afb8410e22274767bb4eb1594e8d2b7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; PixelShader &gt; &gt;</type>
      <name>ListPixelShaders</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6c3c7e01db8682c0883848844e1a79d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; RenderTargetObject &gt; &gt;</type>
      <name>ListRenderTargets</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ac89184fe44cdd03951585347a37fd28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; BlendingState &gt;</type>
      <name>m_blendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a2aa0a5a6e976ebacdb32ae918950b52c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; RasterizerState &gt;</type>
      <name>m_rasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a2d059a1f86390bfb181e7ffb45758cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; DepthStencilState &gt;</type>
      <name>m_depthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>acf1c8356d7a228f112e763403eb15601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; VertexShader &gt;</type>
      <name>m_vertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a08247fbda2e6de1d92f9931fb6df2a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; PixelShader &gt;</type>
      <name>m_pixelShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a42ca7925418ab678f42a4944ec77db07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; GeometryShader &gt;</type>
      <name>m_geometryShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a78161c345ddfcc24b0d863ed1e52fd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; EvaluationShader &gt;</type>
      <name>m_evaluationShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a55d16c10f638cb9570c0639ea07f4be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; ControlShader &gt;</type>
      <name>m_controlShaders</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6210435eb925335878d9e62b2802e380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; TextureObject &gt;</type>
      <name>m_texture</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aeed895fdbd4d050b33f31f1e256839aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; BufferObject &gt;</type>
      <name>m_vertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>abeebcc47e2aec50127ecc7dfad5beaef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; BufferObject &gt;</type>
      <name>m_indexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a86959ebb7419f96b3c44a89bc0dc9fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; BufferObject &gt;</type>
      <name>m_constantBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a379826d33e2d6b4417977b08002bc405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; ShaderInputLayout &gt;</type>
      <name>m_vertexLayout</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a9d915cef525d81139a9c7baa73eb44f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourceContainer&lt; RenderTargetObject &gt;</type>
      <name>m_renderTarget</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ac6fe9eac2b9dc8ff82dd2555fb77a4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual MemoryChunk</type>
      <name>LoadTextureImpl</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a371fca72b205d0b92476275862712cad</anchor>
      <arglist>(const filesystem::Path &amp;filePath, TextureInfo &amp;texInfo)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>GetBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>adcffb170252d32748cd8b21c45a894e5</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>GetRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a03c03a352158e5671249e0f58e81ba7e</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>GetDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a8edae9d08d694de857221d4137460175</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BlendingState *</type>
      <name>GetBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a1b08986aff83d3c41c48564a806eaf51</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>RasterizerState *</type>
      <name>GetRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afbbb3f3f4c2789a98778e0888afbbb3f</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>DepthStencilState *</type>
      <name>GetDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a80fa37818eb016443a5ca56ccefd9f7d</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>GetRenderTarget</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6e09c7acd359431076af06d466f26016</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>GetVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a222fa0ab8f64b5e3bcc78df8ae471baf</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>GetPixelShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ace1eebc1a488546e415da5a84a4b0a3d</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>GetTexture</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a15e5b0e38aaa1903884c6fedb80c4a7d</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a4c0647b8d4f67887d2b090da2c0250db</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetConstantBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a1983d7d1f1d41074cf974c23a0f569e3</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>BufferObject *</type>
      <name>GetIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a964d3d93cf9185c4c674593c696e32a2</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>GetLayout</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a5fc1190ef3eaad6f3fcfd3bf5b9c16e6</anchor>
      <arglist>(const std::wstring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>LoadTexture</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ad7dcc47c454a2fc26a8b749ad54383ce</anchor>
      <arglist>(const std::wstring &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>LoadVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a9a2453870e7f70bc30bb0adf894fb4bb</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>VertexShader *</type>
      <name>LoadVertexShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a19e57a77cdcdb9dd34412ec5de7bd8ac</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry, ShaderInputLayout **layout, InputLayoutDescriptor *layout_desc)</arglist>
    </member>
    <member kind="function">
      <type>PixelShader *</type>
      <name>LoadPixelShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a2977707a7db0d1f8fde88af7dd929ed0</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>GeometryShader *</type>
      <name>LoadGeometryShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>abfbd6f74d74b5f4a768719f7fe8a25b6</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>ControlShader *</type>
      <name>LoadControlShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a46cd94180a92f4c29633a4e67c24fc38</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>EvaluationShader *</type>
      <name>LoadEvaluationShader</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a3d10b2e2559a70f6fc7d0893d9384538</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderEntry)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afd23a950d995a07a6bcc5ca64bfc860d</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int element_size, unsigned int vert_count)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateVertexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a851ebe7c00ed3837dbf83d4c195be1a6</anchor>
      <arglist>(const std::wstring &amp;name, const VertexBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a00341729422730d9560abc9b7c6f63ec</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int element_size, unsigned int vert_count)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateIndexBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>af311328699c5d0d8862703a372dda584</anchor>
      <arglist>(const std::wstring &amp;name, const IndexBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateConstantsBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ab1e2a00f687397ba7716d8bd0e51127f</anchor>
      <arglist>(const std::wstring &amp;name, const void *buffer, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BufferObject &gt;</type>
      <name>CreateConstantsBuffer</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aee48f8c03cbc64d10072c49d498a33af</anchor>
      <arglist>(const std::wstring &amp;name, const ConstantBufferInitData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; BlendingState &gt;</type>
      <name>CreateBlendingState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ab964a55a5383da42a150d17aded9c07d</anchor>
      <arglist>(const std::wstring &amp;name, const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; RasterizerState &gt;</type>
      <name>CreateRasterizerState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aa318476801d2b5a1adbe130d6cd40817</anchor>
      <arglist>(const std::wstring &amp;name, const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; DepthStencilState &gt;</type>
      <name>CreateDepthStencilState</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>aa98fb2ab5bab0a6c6c1f20f5edd0d8cb</anchor>
      <arglist>(const std::wstring &amp;name, const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListVertexBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a7f001790be854ea3d0b850d12ef15e87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListIndexBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ad8e11d51c4c3a77d2c6ea8ec0ed02320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; BufferObject &gt; &gt;</type>
      <name>ListConstantBuffers</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a07fef77be4fc9bead38fe574794c134c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; ShaderInputLayout &gt; &gt;</type>
      <name>ListShaderLayouts</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>af178f3b3bee8990ed588aa2d17514d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; TextureObject &gt; &gt;</type>
      <name>ListTextures</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a7768cad282cb1a934d460c3faa48ef36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; VertexShader &gt; &gt;</type>
      <name>ListVertexShaders</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>afb8410e22274767bb4eb1594e8d2b7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; PixelShader &gt; &gt;</type>
      <name>ListPixelShaders</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>a6c3c7e01db8682c0883848844e1a79d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ResourcePtr&lt; RenderTargetObject &gt; &gt;</type>
      <name>ListRenderTargets</name>
      <anchorfile>class_resource_manager.html</anchorfile>
      <anchor>ac89184fe44cdd03951585347a37fd28f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourceObject</name>
    <filename>class_resource_object.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>ResourceObject</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>ab532d0711da06a23e6fe10dad6153332</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetID</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a9b1680584fc628dd44360dd19bc6d4c6</anchor>
      <arglist>(unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanDelete</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a3f717d4d37a57ba7d90c7ab31ef57033</anchor>
      <arglist>(unsigned int &amp;objectRef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanDelete</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a88803e81f3fdcb96d82d41648bc2e85a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddAssetReference</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a765b943116ed1ebe6bc0a3653bcd4092</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddObjectReference</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>aef54fb618f3a8e1b0d2fd215fde64e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteAssetReference</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a36147350cabe229ff9af9917a53b5bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteObjectReference</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>ad0a72bef6807a0f765beed2a49e1826e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetID</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>ace003f472621b17c7a7ed569e51248b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a9faf0a2b628febda6cea35d9622c45ca</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ResourceObject</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a38cce868f5e80e797c3bfd65e0c55aeb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a6eebdad2033181df6721cc00666e1eb0</anchor>
      <arglist>(EngineObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>m_objectReferences</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a1557acb2249b2e2a90d47b3b3ac46dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>m_uniqueId</name>
      <anchorfile>class_resource_object.html</anchorfile>
      <anchor>a5b6032f47345118df4b9481ee0d01d78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcePtr</name>
    <filename>class_resource_ptr.html</filename>
    <templarg>ResourceType</templarg>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a02fbd4dd9194e4e911711edf1e79be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a366121b0c943a60a9944808e3be6fb4a</anchor>
      <arglist>(ResourceType *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a83091f6d5397934433634e4d05a6726d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>adcf11a993ef8af9db1fa5d52be0becff</anchor>
      <arglist>(const ResourcePtr &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>affa9aaf16f124ea253d5ba28c825106e</anchor>
      <arglist>(ResourcePtr &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aba05bbf97d67c37d35938fbc8e9d9aa6</anchor>
      <arglist>(ResourceType *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>acd67f525f2c5a243fd6d9166f57a3efd</anchor>
      <arglist>(const ResourcePtr&lt; ResourceType &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a3ed5c25c2f927482d7c450c6bc0a2a5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResourceType *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aaf99b80390f39a0b6e23774752cb09ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResourceType *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ac6c39b37f45ddc665ae6b977ac8a177b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ResourceType *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ae41fdcad583bba5b78b97e9693ba7f6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ResourceType *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a7c6dd7267b71a33ec40f34f882390aac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a339c150382ff799dab3aa410b6ca7bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a60f9285a63a60021551bc933cef03454</anchor>
      <arglist>(ResourceType *ptr)</arglist>
    </member>
    <member kind="function">
      <type>ResourceType *</type>
      <name>Ptr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a2b73c46404f630bae9d7dd2b68bbff48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ResourceType *</type>
      <name>m_resource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a4c89c309c9f981b6d2215c8db51d5c12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcePtr&lt; RenderTargetObject &gt;</name>
    <filename>class_resource_ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a02fbd4dd9194e4e911711edf1e79be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a366121b0c943a60a9944808e3be6fb4a</anchor>
      <arglist>(RenderTargetObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>adcf11a993ef8af9db1fa5d52be0becff</anchor>
      <arglist>(const ResourcePtr &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>affa9aaf16f124ea253d5ba28c825106e</anchor>
      <arglist>(ResourcePtr &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a83091f6d5397934433634e4d05a6726d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aba05bbf97d67c37d35938fbc8e9d9aa6</anchor>
      <arglist>(RenderTargetObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>acd67f525f2c5a243fd6d9166f57a3efd</anchor>
      <arglist>(const ResourcePtr&lt; RenderTargetObject &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a3ed5c25c2f927482d7c450c6bc0a2a5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aaf99b80390f39a0b6e23774752cb09ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const RenderTargetObject *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ae41fdcad583bba5b78b97e9693ba7f6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ac6c39b37f45ddc665ae6b977ac8a177b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const RenderTargetObject *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a7c6dd7267b71a33ec40f34f882390aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a339c150382ff799dab3aa410b6ca7bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a60f9285a63a60021551bc933cef03454</anchor>
      <arglist>(RenderTargetObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type>RenderTargetObject *</type>
      <name>Ptr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a2b73c46404f630bae9d7dd2b68bbff48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RenderTargetObject *</type>
      <name>m_resource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a4c89c309c9f981b6d2215c8db51d5c12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcePtr&lt; ShaderInputLayout &gt;</name>
    <filename>class_resource_ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a02fbd4dd9194e4e911711edf1e79be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a366121b0c943a60a9944808e3be6fb4a</anchor>
      <arglist>(ShaderInputLayout *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>adcf11a993ef8af9db1fa5d52be0becff</anchor>
      <arglist>(const ResourcePtr &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>affa9aaf16f124ea253d5ba28c825106e</anchor>
      <arglist>(ResourcePtr &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a83091f6d5397934433634e4d05a6726d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aba05bbf97d67c37d35938fbc8e9d9aa6</anchor>
      <arglist>(ShaderInputLayout *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>acd67f525f2c5a243fd6d9166f57a3efd</anchor>
      <arglist>(const ResourcePtr&lt; ShaderInputLayout &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a3ed5c25c2f927482d7c450c6bc0a2a5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aaf99b80390f39a0b6e23774752cb09ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShaderInputLayout *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ae41fdcad583bba5b78b97e9693ba7f6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ac6c39b37f45ddc665ae6b977ac8a177b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShaderInputLayout *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a7c6dd7267b71a33ec40f34f882390aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a339c150382ff799dab3aa410b6ca7bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a60f9285a63a60021551bc933cef03454</anchor>
      <arglist>(ShaderInputLayout *ptr)</arglist>
    </member>
    <member kind="function">
      <type>ShaderInputLayout *</type>
      <name>Ptr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a2b73c46404f630bae9d7dd2b68bbff48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ShaderInputLayout *</type>
      <name>m_resource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a4c89c309c9f981b6d2215c8db51d5c12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcePtr&lt; SwapChain &gt;</name>
    <filename>class_resource_ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a02fbd4dd9194e4e911711edf1e79be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a366121b0c943a60a9944808e3be6fb4a</anchor>
      <arglist>(SwapChain *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>adcf11a993ef8af9db1fa5d52be0becff</anchor>
      <arglist>(const ResourcePtr &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>affa9aaf16f124ea253d5ba28c825106e</anchor>
      <arglist>(ResourcePtr &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a83091f6d5397934433634e4d05a6726d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aba05bbf97d67c37d35938fbc8e9d9aa6</anchor>
      <arglist>(SwapChain *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>acd67f525f2c5a243fd6d9166f57a3efd</anchor>
      <arglist>(const ResourcePtr&lt; SwapChain &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a3ed5c25c2f927482d7c450c6bc0a2a5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SwapChain *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aaf99b80390f39a0b6e23774752cb09ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SwapChain *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ae41fdcad583bba5b78b97e9693ba7f6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SwapChain *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ac6c39b37f45ddc665ae6b977ac8a177b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SwapChain *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a7c6dd7267b71a33ec40f34f882390aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a339c150382ff799dab3aa410b6ca7bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a60f9285a63a60021551bc933cef03454</anchor>
      <arglist>(SwapChain *ptr)</arglist>
    </member>
    <member kind="function">
      <type>SwapChain *</type>
      <name>Ptr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a2b73c46404f630bae9d7dd2b68bbff48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SwapChain *</type>
      <name>m_resource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a4c89c309c9f981b6d2215c8db51d5c12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcePtr&lt; TextureObject &gt;</name>
    <filename>class_resource_ptr.html</filename>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a02fbd4dd9194e4e911711edf1e79be21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a366121b0c943a60a9944808e3be6fb4a</anchor>
      <arglist>(TextureObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>adcf11a993ef8af9db1fa5d52be0becff</anchor>
      <arglist>(const ResourcePtr &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>affa9aaf16f124ea253d5ba28c825106e</anchor>
      <arglist>(ResourcePtr &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResourcePtr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a83091f6d5397934433634e4d05a6726d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aba05bbf97d67c37d35938fbc8e9d9aa6</anchor>
      <arglist>(TextureObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>acd67f525f2c5a243fd6d9166f57a3efd</anchor>
      <arglist>(const ResourcePtr&lt; TextureObject &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a3ed5c25c2f927482d7c450c6bc0a2a5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>aaf99b80390f39a0b6e23774752cb09ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TextureObject *</type>
      <name>operator*</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ae41fdcad583bba5b78b97e9693ba7f6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>ac6c39b37f45ddc665ae6b977ac8a177b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TextureObject *</type>
      <name>operator-&gt;</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a7c6dd7267b71a33ec40f34f882390aac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a339c150382ff799dab3aa410b6ca7bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a60f9285a63a60021551bc933cef03454</anchor>
      <arglist>(TextureObject *ptr)</arglist>
    </member>
    <member kind="function">
      <type>TextureObject *</type>
      <name>Ptr</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a2b73c46404f630bae9d7dd2b68bbff48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TextureObject *</type>
      <name>m_resource</name>
      <anchorfile>class_resource_ptr.html</anchorfile>
      <anchor>a4c89c309c9f981b6d2215c8db51d5c12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResourcesFactory</name>
    <filename>class_resources_factory.html</filename>
    <member kind="function" static="yes">
      <type>static IGraphicAPIInitializer *</type>
      <name>CreateAPIInitializer</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a19883d144a0b8c3ae7b8b3a5ef3911c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RenderTargetObject *</type>
      <name>CreateScreenRenderTarget</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>aa97a28fbe48b5e9a215dce85148317fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SwapChain *</type>
      <name>CreateScreenSwapChain</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a6a5176f84d5d929a744e4d922ca37e08</anchor>
      <arglist>(RenderTargetObject *screenRT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InputLayoutDescriptor *</type>
      <name>CreateInputLayoutDescriptor</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a9cfe5fb8a3b9a31b89a8735e0b43de6e</anchor>
      <arglist>(const std::wstring &amp;layoutName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RenderTargetObject *</type>
      <name>CreateRenderTarget</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>ac674ab09637565f981dc1b829aa51733</anchor>
      <arglist>(const std::wstring &amp;name, const RenderTargetDescriptor &amp;renderTargetDescriptor)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static TextureObject *</type>
      <name>CreateTextureFromMemory</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a55a55c8cbc7fc616eace5e9b137c101a</anchor>
      <arglist>(const MemoryChunk &amp;texData, TextureInfo &amp;&amp;texInfo)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static VertexShader *</type>
      <name>CreateVertexShaderFromFile</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>ab4363b1ae502507b371539ac54fb2855</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static PixelShader *</type>
      <name>CreatePixelShaderFromFile</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>aaded56f3625e71ad4fbdc8c481e62708</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;ps_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ComputeShader *</type>
      <name>CreateComputeShaderFromFile</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>acd0bf304e9b1949142ecbd17e39da2ca</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, const char *shaderModel=&quot;cs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static BufferObject *</type>
      <name>CreateBufferFromMemory</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a6e3e3006293a617d6404322366bcf4f7</anchor>
      <arglist>(const std::wstring &amp;name, const uint8 *data, const BufferInfo &amp;bufferInfo)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static VertexShader *</type>
      <name>CreateVertexShaderFromFile</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>ac084444fedbe316eb989863c575eef3d</anchor>
      <arglist>(const std::wstring &amp;fileName, const std::string &amp;shaderName, ShaderInputLayout **layout, InputLayoutDescriptor *layout_desc, const char *shaderModel=&quot;vs_4_0&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static BlendingState *</type>
      <name>CreateBlendingState</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a5409aac0a201f3437fbb76a45626ac1d</anchor>
      <arglist>(const BlendingInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static RasterizerState *</type>
      <name>CreateRasterizerState</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>ae4c6878ca1bde7d46a6f60d3b1c1752c</anchor>
      <arglist>(const RasterizerStateInfo &amp;info)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static DepthStencilState *</type>
      <name>CreateDepthStencilState</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>ac45d7c81f55149e1cd607eeb40af662d</anchor>
      <arglist>(const DepthStencilInfo &amp;info)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ResourceManager</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>a54c1252abc87a78a301e6b6984470408</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AssetsManager</name>
      <anchorfile>class_resources_factory.html</anchorfile>
      <anchor>aec5a0121502f8198ccc6dcd6c08d98f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScissorRectInfo</name>
    <filename>struct_scissor_rect_info.html</filename>
    <member kind="variable">
      <type>uint16</type>
      <name>Left</name>
      <anchorfile>struct_scissor_rect_info.html</anchorfile>
      <anchor>af294084f6b55499b415bacece8886c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>Top</name>
      <anchorfile>struct_scissor_rect_info.html</anchorfile>
      <anchor>a1d38e155eeb0311b76a10c0cf61e5301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>Right</name>
      <anchorfile>struct_scissor_rect_info.html</anchorfile>
      <anchor>a9d7dbfa34ca8f7df6207194617ffa691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>Bottom</name>
      <anchorfile>struct_scissor_rect_info.html</anchorfile>
      <anchor>a04ec04ee0ecc65455b85143fa8d2ad75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::Semaphore</name>
    <filename>classsw_1_1_semaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>Semaphore</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>a841fdac6131e3bc5798ad2daa82701a0</anchor>
      <arglist>(Size initCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Down</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>af3913579b116eb4412072f5c54d9acb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TryDown</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>aa1c366352c78850ca535988b4b01483e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Up</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>ad65e23ab79400a78947fcbe5aaefb33d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>m_lock</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>aa6f31237813a380ce74a37b82c7546c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>m_condVariable</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>afe40e36b69a4e3c24f0111260bcd53c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_count</name>
      <anchorfile>classsw_1_1_semaphore.html</anchorfile>
      <anchor>a93a0b7448d6d84443e4d13c5fdf5abb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Serialization</name>
    <filename>class_serialization.html</filename>
    <member kind="function">
      <type>void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ae409ffa93bf760976c5aaec8fc6bc9fb</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ae409ffa93bf760976c5aaec8fc6bc9fb</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ad4264ef893bcd254fc2313e6685a2319</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ad4264ef893bcd254fc2313e6685a2319</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; rttr::property &gt; &amp;</type>
      <name>GetTypeFilteredProperties</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a407bcc6f14719b760c874d8b98422c93</anchor>
      <arglist>(rttr::type objType, EngineSerializationContext *context)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShouldSave</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ab393b0abe216ae036076b23e13114382</anchor>
      <arglist>(const rttr::property &amp;prop, MetaDataType saveFlag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DefaultSerialize</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a7351a2335ff63b2c94cb585a4b35bbe9</anchor>
      <arglist>(ISerializer *ser, const EngineObject *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DefaultDeserialize</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a39419e1238dce1d0e2281b3ef8ee0932</anchor>
      <arglist>(IDeserializer *deser, EngineObject *object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DefaultSerializeImpl</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a9031e63b4ed8b5f93c61425dbb367004</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::type dynamicType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DefaultDeserializeImpl</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a1cf3c225d46c03af13745e3032561967</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::type dynamicType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SerializeBasicTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a7277ad694fe96999109700a280e57fda</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SerializeVectorTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a96b49b46d54be5e253ecec8cb94b7d49</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SerializeStringTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a5980831c6b150062566465dae82af9a9</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SerializeEnumTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a49b134d56818468778ed17495f1138cd</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SerializeArrayTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a91e6010e1420991a26d6b241893c5285</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializePropertiesVec</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>adc01220565c75c862ce04d0ed671e41d</anchor>
      <arglist>(ISerializer *ser, const rttr::instance &amp;object, std::vector&lt; rttr::property &gt; &amp;properties)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeBasicTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a599d95402418fde1a0ae2a00152ed5f8</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeVectorTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a4d0e333a7575d68c439db8cc4b4867c4</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeStringTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a0be73170a686d63dcb3ee75a064f5057</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeEnumTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a86955dc364161b5a45eb5b61d8fbe356</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeArrayTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ad4d9e06e398255dd082471c0fa9714cc</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeserializeObjectTypes</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a89fa57d07046d42a1a7c45c5f47e7338</anchor>
      <arglist>(IDeserializer *deser, const rttr::instance &amp;object, rttr::property &amp;prop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>WstringToUTF</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a532839bb1dc1b1ee72605111f6f2dbf7</anchor>
      <arglist>(const std::wstring &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::wstring</type>
      <name>UTFToWstring</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a0b94805dbe422142910118f55458d8e9</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PropertyType</type>
      <name>GetPropertyValue</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>af0cbd1b82dbac877a8d6b5e9cfabea76</anchor>
      <arglist>(rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ad48a8e77c61881e58ee409e539320f09</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>aca7516e84e5c04cbcddf4421775edf54</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>aca7516e84e5c04cbcddf4421775edf54</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>aca7516e84e5c04cbcddf4421775edf54</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>aca7516e84e5c04cbcddf4421775edf54</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>aca7516e84e5c04cbcddf4421775edf54</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SerializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a6b0a0859ca2a0d030d48e64b21ec3d38</anchor>
      <arglist>(ISerializer *ser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetPropertyValue</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a516ed2a66a77d1c20c863db176faa69a</anchor>
      <arglist>(rttr::property prop, const rttr::instance &amp;object, PropertyType value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a41067b3b3863a550173d92c8bd925335</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ada9edc927948bb1748c999e08cfb95c2</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ada9edc927948bb1748c999e08cfb95c2</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ada9edc927948bb1748c999e08cfb95c2</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ada9edc927948bb1748c999e08cfb95c2</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>ada9edc927948bb1748c999e08cfb95c2</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeserializeProperty</name>
      <anchorfile>class_serialization.html</anchorfile>
      <anchor>a738ca82aaec588b7528f28dfb7c568b7</anchor>
      <arglist>(IDeserializer *deser, rttr::property prop, const rttr::instance &amp;object)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SerializationContext</name>
    <filename>struct_serialization_context.html</filename>
    <member kind="function">
      <type></type>
      <name>SerializationContext</name>
      <anchorfile>struct_serialization_context.html</anchorfile>
      <anchor>a39159d8a04640c4a12a835f8871d327f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerializationContext</name>
      <anchorfile>struct_serialization_context.html</anchorfile>
      <anchor>a3071a7c2fadac71ce45c3b720fa81e7a</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SerializerImpl</name>
    <filename>struct_serializer_impl.html</filename>
    <member kind="variable">
      <type>rapidjson::Document</type>
      <name>root</name>
      <anchorfile>struct_serializer_impl.html</anchorfile>
      <anchor>a9c4a41e5cd00427cca57b0282448d9cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::stack&lt; rapidjson::Value &gt;</type>
      <name>valuesStack</name>
      <anchorfile>struct_serializer_impl.html</anchorfile>
      <anchor>a2caf80a66761b4e4e506f92679491014</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SetDefaultBuffersCommand</name>
    <filename>struct_set_default_buffers_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>TransformBuffer</name>
      <anchorfile>struct_set_default_buffers_command.html</anchorfile>
      <anchor>a57da5034e763136fcf54c2e678233c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>MaterialBuffer</name>
      <anchorfile>struct_set_default_buffers_command.html</anchorfile>
      <anchor>a69e8cc6874e3eeaab547b21401510869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>BonesTransforms</name>
      <anchorfile>struct_set_default_buffers_command.html</anchorfile>
      <anchor>a4562a02e56f1fe97cf162a59affc784e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SetRenderStateCommand</name>
    <filename>struct_set_render_state_command.html</filename>
    <base>SetShaderStateCommand</base>
    <base>SetDefaultBuffersCommand</base>
  </compound>
  <compound kind="struct">
    <name>SetRenderStateExCommand</name>
    <filename>struct_set_render_state_ex_command.html</filename>
    <base>SetShaderStateExCommand</base>
    <base>SetDefaultBuffersCommand</base>
  </compound>
  <compound kind="struct">
    <name>SetRenderTargetCommand</name>
    <filename>struct_set_render_target_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>RenderTargetObject *</type>
      <name>RenderTargets</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a2cc4adc7b26deefed033a6372b3ddf99</anchor>
      <arglist>[MAX_BOUND_RENDER_TARGETS]</arglist>
    </member>
    <member kind="variable">
      <type>RenderTargetObject *</type>
      <name>DepthStencil</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>ad86f8cab7fec642783f8847bf7a554ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RasterizerState *</type>
      <name>RasterizerState</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a537b8186007b073b9f6f7e0dee5605c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BlendingState *</type>
      <name>BlendingState</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a79987e1fbddb0be10d77776e942c6c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DepthStencilState *</type>
      <name>DepthStencilState</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a21601cab50cc7661e60dd16cff9418ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>CameraBuffer</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a4057c3375b8e9bcae61ad748a63973a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>LightBuffer</name>
      <anchorfile>struct_set_render_target_command.html</anchorfile>
      <anchor>a594dc81df3b4bfdbb8fa0c73ca70c736</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SetRenderTargetExCommand</name>
    <filename>struct_set_render_target_ex_command.html</filename>
    <base>SetRenderTargetCommand</base>
    <member kind="variable">
      <type>uint8</type>
      <name>NumViews</name>
      <anchorfile>struct_set_render_target_ex_command.html</anchorfile>
      <anchor>a78d8b56595b930f3df5b67be51d49642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ViewportInfo *</type>
      <name>Viewports</name>
      <anchorfile>struct_set_render_target_ex_command.html</anchorfile>
      <anchor>a34672d76a269663d793153f934b25d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScissorRectInfo *</type>
      <name>Scissors</name>
      <anchorfile>struct_set_render_target_ex_command.html</anchorfile>
      <anchor>a4750ecf5bfbf53b68458db69f1aab3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>BlendFactor</name>
      <anchorfile>struct_set_render_target_ex_command.html</anchorfile>
      <anchor>a46fbf5b4ffbb19c02db541a65ba98c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>StencilMask</name>
      <anchorfile>struct_set_render_target_ex_command.html</anchorfile>
      <anchor>a985691d07218bc025dea95300416c6ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SetShaderStateCommand</name>
    <filename>struct_set_shader_state_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>VertexShader *</type>
      <name>VertexShader</name>
      <anchorfile>struct_set_shader_state_command.html</anchorfile>
      <anchor>ae189ffeedb77ec5e08859c069101ca61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PixelShader *</type>
      <name>PixelShader</name>
      <anchorfile>struct_set_shader_state_command.html</anchorfile>
      <anchor>ac839853c20540391124a935fe720b4a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureObject *</type>
      <name>Textures</name>
      <anchorfile>struct_set_shader_state_command.html</anchorfile>
      <anchor>ad05219171769af2d4f25a85f7153a4de</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>BindToShader</name>
      <anchorfile>struct_set_shader_state_command.html</anchorfile>
      <anchor>ad2b44f6541d72bdc5c5698ac2bcd79ec</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SetShaderStateExCommand</name>
    <filename>struct_set_shader_state_ex_command.html</filename>
    <base>SetShaderStateCommand</base>
    <member kind="variable">
      <type>GeometryShader *</type>
      <name>GeometryShader</name>
      <anchorfile>struct_set_shader_state_ex_command.html</anchorfile>
      <anchor>a07ce31b044b3ea123776c4e244de2c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EvaluationShader *</type>
      <name>TessEvaluationShader</name>
      <anchorfile>struct_set_shader_state_ex_command.html</anchorfile>
      <anchor>a17711ff5518022749da741f07fc8c5b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ControlShader *</type>
      <name>TessControlShader</name>
      <anchorfile>struct_set_shader_state_ex_command.html</anchorfile>
      <anchor>ab027d2714e3a6d4009efd3063af5db97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ShaderInputLayout</name>
    <filename>class_shader_input_layout.html</filename>
    <base>IShaderInputLayout</base>
    <member kind="function">
      <type></type>
      <name>ShaderInputLayout</name>
      <anchorfile>class_shader_input_layout.html</anchorfile>
      <anchor>a8f2d75d1e5a73eb128fda57790c12626</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_shader_input_layout.html</anchorfile>
      <anchor>abd5ad0bccbbbd74e205efa6df3c4f4c1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ShaderInputLayout</name>
      <anchorfile>class_shader_input_layout.html</anchorfile>
      <anchor>aa9cf6e02b2996abd8af8d62126ca0e61</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_shader_input_layout.html</anchorfile>
      <anchor>ae862b18c0650d5f810bab369c1a750ba</anchor>
      <arglist>(IShaderInputLayout)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; ShaderInputLayout &gt;</name>
      <anchorfile>class_shader_input_layout.html</anchorfile>
      <anchor>a3b25786312cab7a3ef03011f6b80b2d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::SolidColorBrush</name>
    <filename>classsw_1_1gui_1_1_solid_color_brush.html</filename>
    <base>sw::gui::Brush</base>
    <member kind="function">
      <type></type>
      <name>SolidColorBrush</name>
      <anchorfile>classsw_1_1gui_1_1_solid_color_brush.html</anchorfile>
      <anchor>ac83f1b120d55c019d96e141b71f55daf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SolidColorBrush</name>
      <anchorfile>classsw_1_1gui_1_1_solid_color_brush.html</anchorfile>
      <anchor>a254943e800945a365610d87513fd2205</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_solid_color_brush.html</anchorfile>
      <anchor>a8eff126e174651b86e6b0923f2fe23db</anchor>
      <arglist>(Brush)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpinLock</name>
    <filename>class_spin_lock.html</filename>
    <member kind="function">
      <type></type>
      <name>SpinLock</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a7dc17bb50466088acb8ea4a45d43b183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpinLock</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a4a830f6f53914c00e2f56510a5565529</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a2db046cb75c8febd532923ce36c4c3ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a25ef6814d1e3fbd621db947ae7522d0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a73c47fe4eb6e79f99a180e5c2c0ebc4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volatile int32</type>
      <name>m_locked</name>
      <anchorfile>class_spin_lock.html</anchorfile>
      <anchor>a2241f1163aacfa4d2cdf8c34d8a480e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpinLockedQueue</name>
    <filename>class_spin_locked_queue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>Push</name>
      <anchorfile>class_spin_locked_queue.html</anchorfile>
      <anchor>a2cf3bbbf3fd5270ae4d0b4ae9bf40879</anchor>
      <arglist>(const ContentType &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TryPop</name>
      <anchorfile>class_spin_locked_queue.html</anchorfile>
      <anchor>a9a963fbd6a3bf7c351b13623dda6f8d1</anchor>
      <arglist>(ContentType &amp;element)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>class_spin_locked_queue.html</anchorfile>
      <anchor>a6bf49d1f9a35778366a29ed373e97bc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; ContentType &gt;</type>
      <name>m_queue</name>
      <anchorfile>class_spin_locked_queue.html</anchorfile>
      <anchor>a751e75d45174eb8bd205db3ce2023972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpinLock</type>
      <name>m_accesslock</name>
      <anchorfile>class_spin_locked_queue.html</anchorfile>
      <anchor>ad9d296caad8aa4b6bd9344cb4151a1b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::StackPanel</name>
    <filename>classsw_1_1gui_1_1_stack_panel.html</filename>
    <base>sw::gui::IPanel</base>
    <member kind="function">
      <type></type>
      <name>StackPanel</name>
      <anchorfile>classsw_1_1gui_1_1_stack_panel.html</anchorfile>
      <anchor>a004894921d8d3c2f563b2deba82717e8</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StackPanel</name>
      <anchorfile>classsw_1_1gui_1_1_stack_panel.html</anchorfile>
      <anchor>ab5d6f061ac5673e29e3a47346912c745</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringPropertyPath</name>
    <filename>class_string_property_path.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>StringPropertyPath</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>a2badcf28a7f649e4c68bbf5f5556ed09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringPropertyPath</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>ac61afa22ac5250b8a01f40822b5b20ac</anchor>
      <arglist>(EngineObject *object, const std::string &amp;propertyPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StringPropertyPath</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>acbc9c41d106207e3413107308322f7e0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>KeyType</type>
      <name>GetValue</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>a770a6e965e9161b8d7dbd197692b26f2</anchor>
      <arglist>(EngineObject *object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>a53a6d31334deae68103646d202e42ba2</anchor>
      <arglist>(EngineObject *object, KeyType &amp;value)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_path</name>
      <anchorfile>class_string_property_path.html</anchorfile>
      <anchor>acd2dc3c4515c76e50b16e497be6eed76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SwapChain</name>
    <filename>class_swap_chain.html</filename>
    <base>ResourceObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SwapChain</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>a3cefd28c8ffa9bc2c8fbdd2a97d9dc7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Present</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>ac3eba17e82896707152fe7f10ab776e8</anchor>
      <arglist>(int syncInterval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Resize</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>a55d84eff53324e1a0731f4387da4bafa</anchor>
      <arglist>(uint16 newWidth, uint16 newHeight)=0</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr&lt; RenderTargetObject &gt;</type>
      <name>GetRenderTarget</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>a60c0d024d64e35e28a4c672e8847c9a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>a966491f86cefec5e0c23c67340fd5437</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SwapChain</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>a5bcfd9ae8957cf402613ad6ac37f9fe8</anchor>
      <arglist>(RenderTargetObject *windowRT)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResourcePtr&lt; RenderTargetObject &gt;</type>
      <name>m_renderTarget</name>
      <anchorfile>class_swap_chain.html</anchorfile>
      <anchor>afd830b67f47baa97f6695c4d789326db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SwapChainDescriptor</name>
    <filename>struct_swap_chain_descriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>SwapChainDescriptor</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>a9f2a075308c72ec7c77a2b9ffed87773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WindowHandler</type>
      <name>WindowHandle</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>ab79faa2dec0fa0cd645d0b6205b4fb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>Width</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>a5d52fec87c3e288a1928291754a08987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>Height</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>a7f87cb2ba2da98977cb91b9d533605a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceFormat</type>
      <name>Format</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>a3eac38647686eaf7da3035b32de69eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>SamplesCount</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>acdf78e6a849debb88249a8e45e9dd90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>SamplesQuality</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>a2019851f1a60ceff7c0db65ff64bdad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AllowFullscreen</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>ace47cd3686908710fa58bb45e73b0bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>NumBuffers</name>
      <anchorfile>struct_swap_chain_descriptor.html</anchorfile>
      <anchor>aa036500207386aac0e34d05a039e4513</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SwapChainInitData</name>
    <filename>struct_swap_chain_init_data.html</filename>
    <member kind="function">
      <type></type>
      <name>SwapChainInitData</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a9e2f974f798d2e8af08d962672f4e43f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DefaultSettings</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>adf809bebcfdf421fa28509280dcca84e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>WindowWidth</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a1cbb4aee74c8069e1996d74fead559c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>WindowHeight</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a6f0e348438e78820fb46c063f712cda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WindowHandler</type>
      <name>WindowHandle</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>aa932b495d30f7bba4c8742ec5fd88698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>FullScreen</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a33cf2d77c071b3aa534e37776657b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>SamplesCount</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>aabb79cfcaf4d0eb1544c97a8e5c756f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>SamplesQuality</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a78db29b793a6306d3e4384cad6b850b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>NumBuffers</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a3f24076beef08962b6f530aaf53f8355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DepthStencilFormat</type>
      <name>DepthStencilFormat</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>aa0decbec2027985312fbd8495e354563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceFormat</type>
      <name>BackBufferFormat</name>
      <anchorfile>struct_swap_chain_init_data.html</anchorfile>
      <anchor>a232d8a89f8b670db7f1c9eb88cec8afb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestAnim</name>
    <filename>class_test_anim.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>TestAnim</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a72056f767fbee2b3c32863ecd818a857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TestAnim</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a9557e7ef7be4a2970e6f5ecf337eeea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>m_energy</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a93df41a129d6760be338ffd75cb2c703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>m_mass</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>aa5ed0782d8e7dfa4bd30a282571080d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>m_power</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a78dc86255e86c24e39e7d9c748eb4360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>m_shit</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a0f241b2981d7da3a363e7c9ec4391e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Nested</type>
      <name>m_otherData</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a87cd9fbb8911d3adb3a91264e3c77ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ptr&lt; FloatAnimation&lt; StringPropertyPath &gt; &gt;</type>
      <name>FloatAnimString</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>aa6291a4114d2964c53a74cd4a3e19ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ptr&lt; FloatAnimation&lt; PropertyPath &gt; &gt;</type>
      <name>FloatAnimProperty</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a9366175c29ee2a042b6ac469dbdda436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Ptr&lt; FloatAnimation&lt; DirectProperty &gt; &gt;</type>
      <name>FloatAnimDirect</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a87c3e99f416dc85188f646ddff379c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a2575120420395f28e4ffec707fce992f</anchor>
      <arglist>(EngineObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>class_test_anim.html</anchorfile>
      <anchor>a1785405af54d70b328b9e28423a8d6a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::TestFramework</name>
    <filename>classsw_1_1gui_1_1_test_framework.html</filename>
    <base>sw::gui::GUISystem</base>
    <member kind="function">
      <type></type>
      <name>TestFramework</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a183ddef5df88b13435b31cf03d0714fd</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TestFramework</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>ad8397c218eb7629b05873d0fbcaf4b3a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a4f52d01aab6d59edfd26718da2886739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>input::EventCapture *</type>
      <name>GetEventCapturer</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a07c222579f488550fbeeb386a2f47cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>input::IInput *</type>
      <name>GetInput</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>ad4c891dbbd17f8fd0147fa2c8c3c2ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TesterMainStep</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a6afefed151c66f506865f7018be4e7be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>InitTesterNativeGUI</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a9c0cf460ed5401573d28c1d2a8a1dd6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InitTesterDebugInput</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>aa2311f2a00936f07ee132838b46cd5f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>OnInitialized</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a3a81d22ddc6c1f8088f1154a64d5c481</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>OnClosing</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a950c74afb055770322e14d7545e32acd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>OnIdle</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>aae1cc774ff20eed320966f3808d9c94c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>input::EventCapture *</type>
      <name>m_eventCapture</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>af28cc559139eda634fc2e9fa8a43af8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>input::EventCapture *</type>
      <name>GetEventCapturer</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a07c222579f488550fbeeb386a2f47cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>input::IInput *</type>
      <name>GetInput</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>ad4c891dbbd17f8fd0147fa2c8c3c2ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TesterMainStep</name>
      <anchorfile>classsw_1_1gui_1_1_test_framework.html</anchorfile>
      <anchor>a6afefed151c66f506865f7018be4e7be</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestInterpolators</name>
    <filename>class_test_interpolators.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>TestInterpolators</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a40eb691fb6c2a94eb44f802bdcbc9df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TestInterpolators</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a84f20ccea0ad80182b8b3d5988352d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FieldType &amp;</type>
      <name>GetField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a7234e406c1def428a469b4e94afe02cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a83c421baca4967529be293f1144f5faa</anchor>
      <arglist>(uint64, UIntField64)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a7053b477158931f5d6f81f05720f4548</anchor>
      <arglist>(int64, IntField64)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a0e1807c74cc4abc8aac00a946e9a94db</anchor>
      <arglist>(uint32, UIntField32)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a2969b1bf424a3b356c3b9af99aaa5717</anchor>
      <arglist>(int32, IntField32)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a58125e30ae5a871654fad8b939e25e64</anchor>
      <arglist>(uint16, UIntField16)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a5d3460698e6a69d21f526233170d7281</anchor>
      <arglist>(int16, IntField16)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a1a4fa94e4ee6c546de63d14a9ec9c86f</anchor>
      <arglist>(uint8, UIntField8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a7cc78cca166c6a635f8d5b87d0e5ff21</anchor>
      <arglist>(int8, IntField8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>af6394a3455a96c745fbf3c151031051d</anchor>
      <arglist>(char, CharField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a31385933f6e5b787395d49a4dd0fbf50</anchor>
      <arglist>(bool, BoolField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>aadc600a0f925b86e48928fb2b16b2536</anchor>
      <arglist>(std::string, StringField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ae93d4f7ed5dc3eb200460690a21595d7</anchor>
      <arglist>(std::wstring, WStringField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a96c5437a9011a7307765760abfc1f44b</anchor>
      <arglist>(double, DoubleField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a67935ee7a2b781bd4ffeca5ccd701a2d</anchor>
      <arglist>(float, FloatField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a736e326a5bae8102631c5f16de8ff0b8</anchor>
      <arglist>(Methods, EnumField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>aeb0f32d8a11152a5b3cc1afc41ec61cf</anchor>
      <arglist>(DirectX::XMFLOAT4, Color4F)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a7da31b7885f798a1b8d59f83c0589ed0</anchor>
      <arglist>(DirectX::XMFLOAT3, Position3F)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_GET_FIELD</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ad3434a3d55fe5f91171cf421a116146d</anchor>
      <arglist>(DirectX::PackedVector::XMCOLOR, Color)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>DoubleField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ad3b516c9dab3b9d563ac0c2a9a74fde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>FloatField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ac2a2199b692f96282cdd2d17dc49c081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>UIntField64</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a925fac22d43c4bd79c3b2934ee9357ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64</type>
      <name>IntField64</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a52f82a94af2161f61b2868a040afb633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>UIntField32</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a73cd3eadd5dab1528b208bb1987b7563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>IntField32</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>acf81943c07bdc49afa65ce55641b4f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>UIntField16</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>aa5070be14bd70340f2f24908042e1ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>IntField16</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a2ad1f7355b8bb2961edd875f798c48ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>UIntField8</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a864004e2b64556e9bc621240e712194c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>IntField8</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a207c8ec38d04deaf9a7209886d997f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>CharField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a90dba459310edb25b296c182d38beb00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BoolField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>aafb9bf634e06660c2e8ff9adec4470db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>StringField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a4449186423e7a68f2c45240504806016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::wstring</type>
      <name>WStringField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ad998c8addadddeb380d20273480ad515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Methods</type>
      <name>EnumField</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>af274292dda1aded7cf4c3a63d931ce74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT4</type>
      <name>Color4F</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a9c4ff4a236a581e9a044671305881ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::XMFLOAT3</type>
      <name>Position3F</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>ae97d3e39d01ed21b9d1f6751f4ac6e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DirectX::PackedVector::XMCOLOR</type>
      <name>Color</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a86219056e34d3ae1b42dac1cb5948b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a6a6f9cac83d1544dd95a6ab020b925c6</anchor>
      <arglist>(EngineObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>class_test_interpolators.html</anchorfile>
      <anchor>a8e76c1a44358212cdcb35b351ff4be4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestUIElementClass</name>
    <filename>class_test_u_i_element_class.html</filename>
    <base>sw::gui::UIElement</base>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a97a3768a06aa57236f4a3056deb088d2</anchor>
      <arglist>(ValidationStarted, RoutingStrategy::Direct, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>adea09be3a5c80d5c0bfdc35b40041313</anchor>
      <arglist>(ValidationEnded, RoutingStrategy::Direct, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>aad0acb16a3fc4d3d81ccf7e6e7950675</anchor>
      <arglist>(UnusedEvent, RoutingStrategy::Direct, TestUIElementClass, UnusedEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a39a5cfc5b80a911bbef2d1239fab69ef</anchor>
      <arglist>(PreviewTunnelEvent, RoutingStrategy::Tunnel, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a7bcc3cbd94ed5d5a716c9e56dee02848</anchor>
      <arglist>(BubbleEvent, RoutingStrategy::Bubble, TestUIElementClass, ValidationEventArgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EventRaisingFunction</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a4cfcfacd1d4ce478b7f3bf453dbf29ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RaiseTunnelEvent</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>abf5a17b45e797e6ba74d890b58302d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RaiseBubbleEvent</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a9d5613031aafa04640952a01c8564748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExistsDelegatesContainer</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a1be67e9126d874197df987bf39909b13</anchor>
      <arglist>(sw::gui::EventType eventID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HitTest</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a783d9de802e73bdae2e1741dfd490826</anchor>
      <arglist>(const sw::gui::Position &amp;point) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnRender</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a088df03c9113e343c7ee2ec39bd861c5</anchor>
      <arglist>(sw::gui::DrawingContext &amp;context) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual sw::gui::Size2D</type>
      <name>Measure</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a94f71c9ba52329072771d06346f348de</anchor>
      <arglist>(sw::gui::Size2D availableSize) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Arrange</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a77b1976e5aac50d46984f5ae997075ab</anchor>
      <arglist>(sw::gui::Rect &amp;finalRect) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Size</type>
      <name>GetNumChildren</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a1ef25c525e7078dce69756e7fe3cbfdb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UIElement *</type>
      <name>GetUIChild</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>ae0377d6cd480bd5e661d5477bb41118d</anchor>
      <arglist>(Size idx) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AddChild</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a108007ebd9d4c7c7b41ef2febbade7cc</anchor>
      <arglist>(sw::gui::UIElementOPtr &amp;&amp;child) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a519879aa09af1e68290a89cf48cce34f</anchor>
      <arglist>(sw::gui::UIElement)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; sw::gui::UIElementOPtr &gt;</type>
      <name>m_children</name>
      <anchorfile>class_test_u_i_element_class.html</anchorfile>
      <anchor>a35617a9688a6038e5c4e8d8e338bc989</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TextureInfo</name>
    <filename>struct_texture_info.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureInfo</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>aa29dd90173a57414e5711aeb70c4f3da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>TextureWidth</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ad4879e08961f95cf7e7d7715e60907e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>TextureHeight</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ab40e7158d592e109539c27d64d82d1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>ArraySize</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>aecd9964b9b9f4867d2634661f5fbb8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CPURead</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a344c8969607b5949829907e0797de82c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CPUWrite</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a3264bbd1c9f99aa946e4db79e2f435af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AllowShareResource</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>abf3f47c227007a18485c816d9b12505e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsCubeMap</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a43e33d4172387515db14291cf67b8857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>GenerateMipMaps</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a600c5d6c70d890259e7be7d436e52352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TextureType</type>
      <name>TextureType</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>afdb3ac1e1dda220f6af2dddfb80db9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceUsage</type>
      <name>Usage</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a2baa570a5da1ad2514b10c740d048ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResourceFormat</type>
      <name>Format</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ac98b7a410fd5d7c57eb16bb5baca5946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MipMapFilter</type>
      <name>MipMapFilter</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a1a560feca9127c2fc9c106d6f0a6ca20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>MipMapLevels</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a9cb2ccf456eed49c6157ba68d75ca4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>CutOffMipMaps</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>adc1bc413f14f62c1ebf50ef7b4eb2ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>MemorySize</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ac588b778ea7a24b4a61704c40d0ba4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>filesystem::Path</type>
      <name>FilePath</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a9ae6c2bbcc98d21267a40b358b380201</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>aad8a21bb2b296a869b54ec8c1d406db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ab1dacc2ad334b2d5997fc0f1a95ccc81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetArraySize</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a480708148b95bf445c6f76891f8feb30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsCPUReadable</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a9108a2186ca8acbb8bfcc0688199ce95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsCPUWriteable</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a31ab402925ebdae4ea8c0b0d52bc77fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsSharedResource</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>ad215264fae90875586026de4d95e7413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsCubeMapTex</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a5a309a910cfd5cc680b02a3d7bd9d6ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GenMipMaps</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>af46334d28e2d3dd6b8bcfd14f927bf41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>GetMipLevels</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a24be6a210291ba2b87c4a15579ba5af8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>GetPath</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a5051269d9a1a4b230da35f2254d29d0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>struct_texture_info.html</anchorfile>
      <anchor>a5b0aee8f1da614081d6f25e2fba26ba2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TextureObject</name>
    <filename>class_texture_object.html</filename>
    <base>ResourceObject</base>
    <member kind="function">
      <type></type>
      <name>TextureObject</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>a40eaa17127891f590ce931a5ae5a0ef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const filesystem::Path &amp;</type>
      <name>GetFilePath</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>a71e12d2dacf537c70e06b698cc96dc18</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual MemoryChunk</type>
      <name>CopyData</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>a79952c442a0fe55d38bedf3ab625ad49</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const TextureInfo &amp;</type>
      <name>GetDescriptor</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>aaff388fdb3a8562508362b399e63e656</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>acc18058b5e14db93b0e43f1046276cb2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>ad5924a71062f45dff478bf1961862e25</anchor>
      <arglist>(TextureObject &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>ab28daa296baf8421732d330aa9178248</anchor>
      <arglist>(const std::wstring &amp;file_name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~TextureObject</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>a3a7e8c6c0fa4d9e83f368af9abd2fdb2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>a2c1cef202d463c4793baa3b6e3c42967</anchor>
      <arglist>(ResourceObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; TextureObject &gt;</name>
      <anchorfile>class_texture_object.html</anchorfile>
      <anchor>ae0801b9cd63085a07787a1bf8b8d33d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw::gui::Thickness</name>
    <filename>structsw_1_1gui_1_1_thickness.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>Bottom</name>
      <anchorfile>structsw_1_1gui_1_1_thickness.html</anchorfile>
      <anchor>a26ce5ffc78215ec92bc9bbb00395aa45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Left</name>
      <anchorfile>structsw_1_1gui_1_1_thickness.html</anchorfile>
      <anchor>a3e178d56b91acbbacdf3777650c9c2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Right</name>
      <anchorfile>structsw_1_1gui_1_1_thickness.html</anchorfile>
      <anchor>ad32213198f1602dd33f66861036f53a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>Top</name>
      <anchorfile>structsw_1_1gui_1_1_thickness.html</anchorfile>
      <anchor>afb7e9ac0655e282d8cba1013032025bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::ThreadsBarrier</name>
    <filename>classsw_1_1_threads_barrier.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadsBarrier</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>aa8a918851b3136b12ec255042fcbe21c</anchor>
      <arglist>(uint16 numThreads)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadsBarrier</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>a657cacf6c2595284b0aa9911578f0932</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ArriveAndWait</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>ab4ca3fa62ea8e3ce7cc1c072400ffb3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>m_lock</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>ad706d52de61928ed35c18fd6d582a3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>m_condVariable</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>a5561d79eb226a8b9a4e1d725cd44db65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size</type>
      <name>m_generation</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>a34269414e64ab95701643cfcf8de0f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const uint32</type>
      <name>m_numThreads</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>a46bd88ae107a31351b4de0347cd4f990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32</type>
      <name>m_remain</name>
      <anchorfile>classsw_1_1_threads_barrier.html</anchorfile>
      <anchor>a1f3caf84c53f49c95e9b2a6690aa5a6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::ThreadsLatch</name>
    <filename>classsw_1_1_threads_latch.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadsLatch</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>a395bd2565db7ff1573f39afea9a758d4</anchor>
      <arglist>(uint16 numThreads)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadsLatch</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>a54eeb5764cdde925fc68901843366220</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ArriveAndWait</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>a778c08efdb639ce8df49b38c02362ee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>m_lock</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>a1f0bc9022911727cc7eb60cc6c33f30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>m_condVariable</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>a26fa1529349cb148980cda381c76c5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_remain</name>
      <anchorfile>classsw_1_1_threads_latch.html</anchorfile>
      <anchor>abc4d7066a4929cd898605d4d825fdd4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TimelineBase</name>
    <filename>class_timeline_base.html</filename>
    <base>EngineObject</base>
    <member kind="function">
      <type></type>
      <name>TimelineBase</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a7b762589f595486a3ee23ee85dcfc05e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimelineBase</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>ac635987e692722315597f75bb94b1bcd</anchor>
      <arglist>(TimelineBasePtr parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimelineBase</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a1faf2119e38acdec36b03e96741cbc89</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>aa90f1f1c80b5d4328f0c329bbc521fe1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Start</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>ab49bf24c0dcd6a269cd0d50c7254dca2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Stop</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a005f972d5bd18a47826e3bc504412b4e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Pause</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>abae29c6f3d580020714907c32b4b0022</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetTimeline</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a40b1725d814f3929227a52d9e434095d</anchor>
      <arglist>(TimelineBasePtr &amp;parent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsPaused</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>ac2e54b9940c7ceea3f3a907eca55696b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>TimeType</type>
      <name>GetTime</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>affd3fda570cd686d64fe8769341d1dd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeType</type>
      <name>m_currentTime</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a7143e812d025103ad0b8babeb3c34d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimelineBaseWPtr</type>
      <name>m_parent</name>
      <anchorfile>class_timeline_base.html</anchorfile>
      <anchor>a863f8fdbc025edee4639620f7735eab7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::TopLevelControl</name>
    <filename>classsw_1_1gui_1_1_top_level_control.html</filename>
    <base>sw::gui::IControl</base>
    <member kind="function">
      <type></type>
      <name>TopLevelControl</name>
      <anchorfile>classsw_1_1gui_1_1_top_level_control.html</anchorfile>
      <anchor>a9e6e747fe3784c2538b11d50ffccd225</anchor>
      <arglist>(IControl *parent, HostWindow *host)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TopLevelControl</name>
      <anchorfile>classsw_1_1gui_1_1_top_level_control.html</anchorfile>
      <anchor>a7abdc5fe8d8972577fcc5a0f38114338</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>HostWindow *</type>
      <name>GetHostWindow</name>
      <anchorfile>classsw_1_1gui_1_1_top_level_control.html</anchorfile>
      <anchor>a83f6f647fb219881e95c727eaa8eb8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HostWindow *</type>
      <name>m_host</name>
      <anchorfile>classsw_1_1gui_1_1_top_level_control.html</anchorfile>
      <anchor>aad0455aa0c9610a0db2cba70e79afb2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::UIElement</name>
    <filename>classsw_1_1gui_1_1_u_i_element.html</filename>
    <base>sw::gui::Visual</base>
    <member kind="function">
      <type></type>
      <name>UIElement</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>afa47b7d7b86b96478bbc23a74b05926a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UIElement</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a786ec54938da87ddba0db700ef76d64f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a6beccf21d1e861e29de3acff98c7ffd0</anchor>
      <arglist>(PreviewMouseUp, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5ef5e9b4dfb5203c3eaec1165789818a</anchor>
      <arglist>(PreviewMouseDown, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a85916a8aca66aae18fe0f96ee9f182c6</anchor>
      <arglist>(PreviewMouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a20cbd09d52271d24a2264fb3e89911af</anchor>
      <arglist>(PreviewMouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a79b91fbfeaf2529aae141186ba5da200</anchor>
      <arglist>(PreviewMouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>af040947b7060b1a0f35d4639ff39437e</anchor>
      <arglist>(PreviewMouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a590aa51e2572e6511f24209686299b5d</anchor>
      <arglist>(PreviewMouseWheel, RoutingStrategy::Tunnel, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a25df4d4289f09d8cb49ffe99a898d797</anchor>
      <arglist>(PreviewMouseMove, RoutingStrategy::Tunnel, UIElement, MouseMoveEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ae6f63760da093c7d9b5784423415cc35</anchor>
      <arglist>(PreviewKeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5334ee58d6ef27c011b9f16ecef23cea</anchor>
      <arglist>(PreviewKeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5c1603d79dfe6244f525f78aa3f01534</anchor>
      <arglist>(MouseUp, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a28fe29df768dad21e934409f97b2ef58</anchor>
      <arglist>(MouseDown, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a297cad521dfb0a31922535a32d763d39</anchor>
      <arglist>(MouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ab582246920f677cda657efd324043618</anchor>
      <arglist>(MouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a423f47a03be25dc4ea7b600940de2f67</anchor>
      <arglist>(MouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a187c3a187c4f5ed89787d5e6a3fabc35</anchor>
      <arglist>(MouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aff4d293052b9ec2ca48a022b317551ef</anchor>
      <arglist>(MouseWheel, RoutingStrategy::Bubble, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>adf4edbdbc31b153dbc592216886a0874</anchor>
      <arglist>(MouseMove, RoutingStrategy::Bubble, UIElement, MouseMoveEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a31d67f78e261f09aa63e57f9fb09165a</anchor>
      <arglist>(KeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9709f8058ccdfaf9cb052814bbb40ee2</anchor>
      <arglist>(KeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abca0c2d959c629e6b5a2442033f2dbb7</anchor>
      <arglist>(MouseEnter, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DECLARATION</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>afa4f35a6105675780551c59b6dcf9eed</anchor>
      <arglist>(MouseLeave, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Size2D</type>
      <name>Measure</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aa19d5edd15230b4b62ee163b60efd108</anchor>
      <arglist>(Size2D availableSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Arrange</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a4a4f0512d6d5666f934c496095c58eaf</anchor>
      <arglist>(Rect &amp;finalRect)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Size</type>
      <name>GetNumChildren</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a8c07ede9b2451d457e3367ff1153a637</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UIElement *</type>
      <name>GetUIChild</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abde2c70b1eedc5cee1b544eadcd05d8f</anchor>
      <arglist>(Size idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>AddChild</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ae736eb8b1c77844742a6525e16c84347</anchor>
      <arglist>(UIElementOPtr &amp;&amp;child)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetParent</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a0597b900d420b751cd22b4398b1dd9f1</anchor>
      <arglist>(UIElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UIElement *</type>
      <name>GetParent</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a33a7c372b42fa415e06ba88721d7dd06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InvokeEventDelegates</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9e68c8403cf63e8dac1eb283e3127d8c</anchor>
      <arglist>(EventType eventID, UIElement *sender, IEventArgs *e, AccessKey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLoaded</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a3bc370a59c1fe0a6999becedcdc5ca1c</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnUnloaded</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abfe3ac2817050aa9626d91892e9e3efc</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnGotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>adc7e6de733495d743f4154c7c675e711</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a8011cd1fff51e54b77cc7b6589fc0e6f</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseEnter</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ab99eb5fd9450d46f9008dc01e6542ac4</anchor>
      <arglist>(UIElement *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeave</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aae35d14a782c87a38f975728d26d1be9</anchor>
      <arglist>(UIElement *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a3dfa9b7d8b46fc09ba7835c500ff920f</anchor>
      <arglist>(UIElement *sender, MouseMoveEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a872d419e90736719edefdb16768e83f3</anchor>
      <arglist>(UIElement *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>af2859fc29e93a508f589e06de641cd89</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ae0b76c66d4b501ccbbe0364e43fb21d0</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7f7bbaeeb483442a18bbd19b31978a27</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7f48652b96ecd4e77e1475fdbc55c882</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a15f7bbcc70f908d1326b9c5ed371c527</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7a18f0b4b72e7dd4c862de072a2a0409</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aa5c5b8c64830b2f049ff79fcc755a659</anchor>
      <arglist>(UIElement *sender, MouseMoveEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>accf49e51784a1202f208a2819bdc55cc</anchor>
      <arglist>(UIElement *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9192d0d528214bbb79e8394651a9dc0d</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abad4cdcef504ab84b98a69f2992de38b</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a04e7d5f8079401760267452d5a7292a9</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ac3f561d9c28e68ecf0c7b379ac8f29d2</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9b2961ced7c4003fb3da8fd58577cecc</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a369dfe1ec96dac05da5f15272b8f8275</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnKeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a81392d735df6b663b4cdcd6ab4b2bdf0</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnKeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9673f6df896b46b5d4bcf1651c5ae5d4</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewKeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5ed6ef3e30952a7d0b54003dcb4e1410</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewKeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a64d87a946f8d2c6724715b076d4b40c1</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UIElement *</type>
      <name>m_parent</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a41ebe4824d9e5d468b617a98004d8de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isVisible</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aad928fee7fd7ac242c65995624f01976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isEnabled</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ac0cd1c7d9f944429fc6082f7fecd65b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isMouseOver</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a55660bd156af63e3fa975e30de8a92d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isFocused</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5a115b2d45f9afb885f6e5090bb0c7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isKeyboardFocus</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a67ea363f188c40803074d05b58c3559c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isKeyboardFocusWithin</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a083246bce77d305e8b4020bda8c67329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isMouseCaptured</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a70dade18c6ba09d3ca1e1979edb22e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isMouseCapturedWithin</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ac8c772daf680a6b5ce5bf447c000d6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_isFocusable</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>acd3aebba74cb9fe73607aa43337b9cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Size2D</type>
      <name>m_desiredSize</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5b66a7e8a2d74d11039f8bba3347a999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventHandlers</type>
      <name>m_eventHandlers</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9adc91c051096af1e3dae3a482094910</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a04ddb51352b5b863a088ad53feb7b15b</anchor>
      <arglist>(Visual)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a55834b298716077301437643cbce2beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>UIElementTester</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aabcb80b46d58e365f1fd8e42477a7c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Size2D</type>
      <name>Measure</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aa19d5edd15230b4b62ee163b60efd108</anchor>
      <arglist>(Size2D availableSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Arrange</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a4a4f0512d6d5666f934c496095c58eaf</anchor>
      <arglist>(Rect &amp;finalRect)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Size</type>
      <name>GetNumChildren</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a8c07ede9b2451d457e3367ff1153a637</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UIElement *</type>
      <name>GetUIChild</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abde2c70b1eedc5cee1b544eadcd05d8f</anchor>
      <arglist>(Size idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>AddChild</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ae736eb8b1c77844742a6525e16c84347</anchor>
      <arglist>(UIElementOPtr &amp;&amp;child)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetParent</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a0597b900d420b751cd22b4398b1dd9f1</anchor>
      <arglist>(UIElement *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UIElement *</type>
      <name>GetParent</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a33a7c372b42fa415e06ba88721d7dd06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>InvokeEventDelegates</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9e68c8403cf63e8dac1eb283e3127d8c</anchor>
      <arglist>(EventType eventID, UIElement *sender, IEventArgs *e, AccessKey)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLoaded</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a3bc370a59c1fe0a6999becedcdc5ca1c</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnUnloaded</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abfe3ac2817050aa9626d91892e9e3efc</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnGotFocus</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>adc7e6de733495d743f4154c7c675e711</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLostFocus</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a8011cd1fff51e54b77cc7b6589fc0e6f</anchor>
      <arglist>(UIElement *sender, IEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseEnter</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ab99eb5fd9450d46f9008dc01e6542ac4</anchor>
      <arglist>(UIElement *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeave</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aae35d14a782c87a38f975728d26d1be9</anchor>
      <arglist>(UIElement *sender, MouseEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a3dfa9b7d8b46fc09ba7835c500ff920f</anchor>
      <arglist>(UIElement *sender, MouseMoveEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a872d419e90736719edefdb16768e83f3</anchor>
      <arglist>(UIElement *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>af2859fc29e93a508f589e06de641cd89</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ae0b76c66d4b501ccbbe0364e43fb21d0</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7f7bbaeeb483442a18bbd19b31978a27</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7f48652b96ecd4e77e1475fdbc55c882</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a15f7bbcc70f908d1326b9c5ed371c527</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnMouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a7a18f0b4b72e7dd4c862de072a2a0409</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseMove</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>aa5c5b8c64830b2f049ff79fcc755a659</anchor>
      <arglist>(UIElement *sender, MouseMoveEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseWheel</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>accf49e51784a1202f208a2819bdc55cc</anchor>
      <arglist>(UIElement *sender, MouseWheelEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9192d0d528214bbb79e8394651a9dc0d</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>abad4cdcef504ab84b98a69f2992de38b</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseRightButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a04e7d5f8079401760267452d5a7292a9</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseRightButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>ac3f561d9c28e68ecf0c7b379ac8f29d2</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseLeftButtonDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9b2961ced7c4003fb3da8fd58577cecc</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewMouseLeftButtonUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a369dfe1ec96dac05da5f15272b8f8275</anchor>
      <arglist>(UIElement *sender, MouseButtonEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnKeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a81392d735df6b663b4cdcd6ab4b2bdf0</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnKeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a9673f6df896b46b5d4bcf1651c5ae5d4</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewKeyDown</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a5ed6ef3e30952a7d0b54003dcb4e1410</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnPreviewKeyUp</name>
      <anchorfile>classsw_1_1gui_1_1_u_i_element.html</anchorfile>
      <anchor>a64d87a946f8d2c6724715b076d4b40c1</anchor>
      <arglist>(UIElement *sender, KeyEventArgs *e)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UnusedEventArgs</name>
    <filename>struct_unused_event_args.html</filename>
    <base>sw::gui::IEventArgs</base>
    <member kind="function">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>struct_unused_event_args.html</anchorfile>
      <anchor>ab9fdbe8c32886bcc5292889a00414b07</anchor>
      <arglist>(sw::gui::IEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UpdateBindBuffer</name>
    <filename>struct_update_bind_buffer.html</filename>
    <base>BindBufferCommand</base>
    <member kind="variable">
      <type>uint8 *</type>
      <name>FillData</name>
      <anchorfile>struct_update_bind_buffer.html</anchorfile>
      <anchor>af7e00e8b07c9d5af904acccb6d591cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Size</name>
      <anchorfile>struct_update_bind_buffer.html</anchorfile>
      <anchor>a5743075233626f3ce927aaf97cec13b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UpdateBufferCommand</name>
    <filename>struct_update_buffer_command.html</filename>
    <base>RendererCommand</base>
    <member kind="variable">
      <type>BufferObject *</type>
      <name>Buffer</name>
      <anchorfile>struct_update_buffer_command.html</anchorfile>
      <anchor>a03c98d8f6fc878b296444f0c07e47d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8 *</type>
      <name>FillData</name>
      <anchorfile>struct_update_buffer_command.html</anchorfile>
      <anchor>abeeeeec09186813a185cb9ad28619383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Size</name>
      <anchorfile>struct_update_buffer_command.html</anchorfile>
      <anchor>a3fed2253bb6f5c4c86e42656c352d176</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UPtr</name>
    <filename>class_u_ptr.html</filename>
    <templarg>WrappedType</templarg>
    <member kind="function">
      <type></type>
      <name>UPtr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>ac3e64e551dbf93c1c0a6bba77ffef30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UPtr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>ac369f17249f3688fd43bc5f784d2addd</anchor>
      <arglist>(WrappedType *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UPtr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>a1fc2f74830bb16da579c0f1638296e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UPtr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>a6f139a86b2d0074772f9e66230cb2f12</anchor>
      <arglist>(const UPtr&lt; WrappedType &gt; &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UPtr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>afb312797f27628a6e616d26a5d4d5734</anchor>
      <arglist>(UPtr&lt; WrappedType &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>ae810fa7b96836664969c26e8bef10caa</anchor>
      <arglist>(const UPtr&lt; WrappedType &gt; &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>abd8588bbef7a03da64c70287ac0292bd</anchor>
      <arglist>(UPtr&lt; WrappedType &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReleaseResource</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>a2a5e0c5aace2bdf3dd4831f0974fe455</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignPointer</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>ad078b2c7670a93c833d65e5ff3ca1ce5</anchor>
      <arglist>(WrappedType *ptr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WrappedType *</type>
      <name>m_ptr</name>
      <anchorfile>class_u_ptr.html</anchorfile>
      <anchor>a7f6d1d3951468831c1346d9d26ed51ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ValidationEventArgs</name>
    <filename>struct_validation_event_args.html</filename>
    <base>sw::gui::IEventArgs</base>
    <member kind="function">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>struct_validation_event_args.html</anchorfile>
      <anchor>aa7bdefac0c412a067798cf7367133fbd</anchor>
      <arglist>(sw::gui::IEventArgs)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Version</name>
    <filename>struct_version.html</filename>
    <member kind="function">
      <type></type>
      <name>Version</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>ab6d1685b5db0c35bce8bb877913e34e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Version</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a2872915ef009f7ba9faab80680a90de7</anchor>
      <arglist>(const std::string &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>ae067cff0a9a0c6de86548fac5aa1c503</anchor>
      <arglist>(const Version &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a5ad73c299a70fb715039132980852048</anchor>
      <arglist>(const Version &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Major</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>acf39bfdad6166b0380166f287a1de180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Minor</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a5352b03ae4b901b02caf6fd5865e5d52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Revision</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a8338111c3d07d0d4632e8b5b581b393e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>Build</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a2b917b0ded12ba9cb9befbe9c6484201</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>struct_version.html</anchorfile>
      <anchor>a3de5c6a46b81682131b00756670c8eef</anchor>
      <arglist>(std::ostream &amp;stream, const Version &amp;ver)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VertexBufferInitData</name>
    <filename>struct_vertex_buffer_init_data.html</filename>
    <base>BufferInitData</base>
    <member kind="function">
      <type></type>
      <name>VertexBufferInitData</name>
      <anchorfile>struct_vertex_buffer_init_data.html</anchorfile>
      <anchor>a3c8a674d89ab2b9306353c24996bfcf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferInfo</type>
      <name>CreateBufferInfo</name>
      <anchorfile>struct_vertex_buffer_init_data.html</anchorfile>
      <anchor>a73907cbba327ff2688fbd5f9b22fd13f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>ResourcePtr&lt; ShaderInputLayout &gt;</type>
      <name>VertexLayout</name>
      <anchorfile>struct_vertex_buffer_init_data.html</anchorfile>
      <anchor>a0825f35b9c23739081ce99d827462195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PrimitiveTopology</type>
      <name>Topology</name>
      <anchorfile>struct_vertex_buffer_init_data.html</anchorfile>
      <anchor>a03d65a588b591c4bbd1e10b86837110b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VertexShader</name>
    <filename>class_vertex_shader.html</filename>
    <base>IShader</base>
    <member kind="function">
      <type></type>
      <name>VertexShader</name>
      <anchorfile>class_vertex_shader.html</anchorfile>
      <anchor>a428b08fbe92cb00b028b33f10cbae558</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetResourceName</name>
      <anchorfile>class_vertex_shader.html</anchorfile>
      <anchor>a89a6244099b6a190e6422bc3aa7673f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~VertexShader</name>
      <anchorfile>class_vertex_shader.html</anchorfile>
      <anchor>ae8392704dd2bc2cea01880320e605b1f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>class_vertex_shader.html</anchorfile>
      <anchor>a05c4eca5c3c5f1bb384b332482ededd0</anchor>
      <arglist>(IShader)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>friend</type>
      <name>ObjectDeleter&lt; VertexShader &gt;</name>
      <anchorfile>class_vertex_shader.html</anchorfile>
      <anchor>a8b0c83b6538e033a3d6097a423ef6172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ViewportInfo</name>
    <filename>struct_viewport_info.html</filename>
    <member kind="variable">
      <type>uint16</type>
      <name>TopLeftX</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>af70123840fb9f34853542fd0d8edab59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>TopLeftY</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>a10f142a3d89db4db2b403090a5e89c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>Width</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>a3c052cb8d2f2e4d0cfe3b826f307b765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>Height</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>ab034cb5cfcbcb669045448e30157ed56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>MinDepth</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>a676a533631b4ca68a8f4ba927645c2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>MaxDepth</name>
      <anchorfile>struct_viewport_info.html</anchorfile>
      <anchor>a3982d9163b8c764ae6624aa6cacba1b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VirtualEmptyClass</name>
    <filename>class_virtual_empty_class.html</filename>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual</type>
      <name>~VirtualEmptyClass</name>
      <anchorfile>class_virtual_empty_class.html</anchorfile>
      <anchor>a6264ed3e9252e06abe9391071efc139c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::Visual</name>
    <filename>classsw_1_1gui_1_1_visual.html</filename>
    <base>sw::gui::DependencyObject</base>
    <member kind="function">
      <type></type>
      <name>Visual</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>a4509e13342ea8ff232fd374d6f5e6f03</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Visual</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>a4ce3bc685f43af7ea8e380a1e878eb23</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>HitTest</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>a989803f37a8add98bd0354006bb3ce96</anchor>
      <arglist>(const Position &amp;point)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>OnRender</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>acb648f3d3f8a791b894982c28fca4416</anchor>
      <arglist>(DrawingContext &amp;context)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RTTR_ENABLE</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>ab591f64532d2254c196870a9be4dc11d</anchor>
      <arglist>(DependencyObject)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type></type>
      <name>RTTR_REGISTRATION_FRIEND</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>ab67857cef8933588cb6217b6323909cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Position</type>
      <name>m_position</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>a2b4a1c6b50f9df1e3d4bf0a6febca4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Size2D</type>
      <name>m_actualSize</name>
      <anchorfile>classsw_1_1gui_1_1_visual.html</anchorfile>
      <anchor>aa436b375173db06c789602c016de6264</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VoxtreeHeader</name>
    <filename>struct_voxtree_header.html</filename>
    <member kind="function">
      <type></type>
      <name>VoxtreeHeader</name>
      <anchorfile>struct_voxtree_header.html</anchorfile>
      <anchor>a7fd642aa7f00259d4dc853683d8ecc2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>VoxtreeLetters</name>
      <anchorfile>struct_voxtree_header.html</anchorfile>
      <anchor>aa2d3b0fdde085f321fcf8bd11fa0474e</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>Version</type>
      <name>VoxtreeVersion</name>
      <anchorfile>struct_voxtree_header.html</anchorfile>
      <anchor>afd1ce0da91d2d22c8881fcc393735aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>GridSize</name>
      <anchorfile>struct_voxtree_header.html</anchorfile>
      <anchor>ab2591f609ed9ca0f569dcb0119602c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Size</type>
      <name>FreeIndirectOffset</name>
      <anchorfile>struct_voxtree_header.html</anchorfile>
      <anchor>a24b1efe49de9f8cebf1af63fb0c1a16a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::Win32ApiWindow</name>
    <filename>classsw_1_1gui_1_1_win32_api_window.html</filename>
    <base>sw::gui::INativeWindow</base>
    <member kind="function">
      <type></type>
      <name>Win32ApiWindow</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ad3ef9b844d5941a296a4c99cc3391b29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Win32ApiWindow</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a8dd17c2e995c4e99e6e1d0e65074379f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetWidth</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ae7c2eb76d6b22978b3882cdaab1f43bb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetHeight</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ad8aae2f6ed8f925136b130ee80ac0300</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetClientWidth</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a6c86b1f2bcbc498b0ddcb8936c0c095a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>GetClientHeight</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>acff1297d0d2bae9fe35391055ac79870</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowHandler</type>
      <name>GetHandle</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>aa127b83c8e10633a66b4e8ccafe6a888</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>abed0c5c35c6645a41a12b488aeaa70ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Show</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ad150ec046462f0f86e482c1a0aee1403</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Hide</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a866016d9d50d87acece6376e81f8598e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetTitle</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a9911fc83648e0f9d1293056af992dcf9</anchor>
      <arglist>(const std::string &amp;newTitle) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Win32ApiWindow *</type>
      <name>CreateWindowInstance</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ac1e34d9ddb06b4761b5f9e5ba3c0319d</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ShowAppWindow</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a694eea459dd3458cbc46c7dd929e0f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HideAppWindow</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a21ca10647bce16962f30e1c7e8b3afd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a3db84f2b13bd49e7212c2c780631195f</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HWND</type>
      <name>m_windowHandle</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>ada94c3d2dc54c925e2345f3da5cc5f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::wstring</type>
      <name>m_title</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a9a65dc950220402ae1eee4b0f026efca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_width</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>af2bc203bc25aef00d5beb99274d1c363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_height</name>
      <anchorfile>classsw_1_1gui_1_1_win32_api_window.html</anchorfile>
      <anchor>a787363fb2ac004a110bc61514e2f5bb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::WinAPIGUI</name>
    <filename>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</filename>
    <base>sw::gui::INativeGUI</base>
    <member kind="function">
      <type></type>
      <name>WinAPIGUI</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a246784396850a17bc75ab17ea14a2a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WinAPIGUI</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a4785c4edd0ee6afcf108f45625ea06f3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>MainLoop</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a450dc91af90e9776994d0555ccb591dc</anchor>
      <arglist>(bool blockingMode) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a335ef1c47cccd8721d84770b0c6b57a5</anchor>
      <arglist>(const NativeGUIInitData &amp;initData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual sw::input::IInput *</type>
      <name>UseNativeInput</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a955b13f737f6169efb1b51dc9cb8ec33</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual INativeWindow *</type>
      <name>CreateWindow</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>ac5fd12a787e0554ab72b65f09039947b</anchor>
      <arglist>(NativeWindowDescriptor &amp;descriptor) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvent</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a8106ad66c0ea976748a315385fb5330c</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WinAPIGUI *</type>
      <name>Create</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>ab7a481081238791b97c9afa2f8c2336e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PrintLastError</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a317ad06c46a95d99e9396cc6a126cb5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wchar_t *</type>
      <name>GetWindowClassName</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>adebffbb610276ff2cc3a9f0ef5541555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RegisterWindowClass</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a36b0b3dcc59711dedef91e5dd80b5c3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>MainLoopCore</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>ac7555a40d030ebd255c3e983196b55ef</anchor>
      <arglist>(MSG *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sw::input::WinApiInputProxy *</type>
      <name>m_input</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a9099e42c58ce2fe1933a2d325d618c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>NativeGUIInitData</type>
      <name>m_initData</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a8b6bd660b5bc85dbb6ea56707b6cd3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvent</name>
      <anchorfile>classsw_1_1gui_1_1_win_a_p_i_g_u_i.html</anchorfile>
      <anchor>a8106ad66c0ea976748a315385fb5330c</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::WinApiInputProxy</name>
    <filename>classsw_1_1input_1_1_win_api_input_proxy.html</filename>
    <base>sw::input::IInput</base>
    <member kind="function">
      <type></type>
      <name>WinApiInputProxy</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>ab9d7152509e42b13af87a3b2f7c85ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WinApiInputProxy</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a5e08797c8475aa753eb995dd27d8e1a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>afd814bf31df5d1e8b332967339828453</anchor>
      <arglist>(const InputInitInfo &amp;initInfo) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const KeyboardState * &gt; &amp;</type>
      <name>GetKeyboardStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a50cdf2c1bfe3b2430f45285aded61773</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const MouseState * &gt; &amp;</type>
      <name>GetMouseStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a82929d7f6ccd88c001a6b8d331896082</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const JoystickState * &gt; &amp;</type>
      <name>GetJoystickStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a83827a67e44558ff4d02f4d47010c0b3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a7021167fadf8f1f9a83d77e18d3f2d62</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a6231aa85063d9f81df99bc9afdbb2ba1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>ab6f5f4b3ba3763e82664ddedb1840dd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; const InputDeviceInfo * &gt;</type>
      <name>GetDevicesInfo</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a3da8b4734086859352aab12b02bb0a5f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>ad2bfe6b326307c61d899443d9594cce1</anchor>
      <arglist>(float timeInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateDevices</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a3b14a058d4d72b66a3cb35ddd13b57b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>affed4c3e54a1272a206601eb1d84bc0c</anchor>
      <arglist>(int keyId, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardCharacter</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a0a98cdc83684ff111ad3da228da8a482</anchor>
      <arglist>(wchar_t character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseButtonChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a04a611a42e3d1340c8c409190ddca342</anchor>
      <arglist>(int button, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MousePositionChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a6e451e216bc75f644685e34055d8afd8</anchor>
      <arglist>(short X, short Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseWheelChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>abd4764afa95659247294fdce23ecb57c</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a7e9debb134cfb22722e3bab6449e9c27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvent</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a90be23537d85d7458cdaf30915a1f117</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const KeyboardState * &gt;</type>
      <name>m_keyboardsStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>ad0ec69836ccafd39343e5b7d8cda5001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const MouseState * &gt;</type>
      <name>m_mousesStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a216d46c33421c77594618d89e35208da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const JoystickState * &gt;</type>
      <name>m_joysticksStates</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a1fbe8df8f00c7bed314a639330efefa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt;</type>
      <name>m_keyboards</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a9ab08faaf636bbdab5cc0b270cd43dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MouseDeviceOPtr &gt;</type>
      <name>m_mouses</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a65f7bdfa3ee6719c6c302ba67f94c069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JoystickDeviceOPtr &gt;</type>
      <name>m_joysticks</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a08ca9132ec6eef9d436a82d683eb845d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_lastX</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a8c663f2d467dd8dc488ef3c35775bb03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_lastY</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>ab92aafa557cd39ce6db855444f44651e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Timestamp</type>
      <name>m_eventNum</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a2c492f887e0bee744a01b3f02df67f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>affed4c3e54a1272a206601eb1d84bc0c</anchor>
      <arglist>(int keyId, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardCharacter</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a0a98cdc83684ff111ad3da228da8a482</anchor>
      <arglist>(wchar_t character)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseButtonChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a04a611a42e3d1340c8c409190ddca342</anchor>
      <arglist>(int button, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MousePositionChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a6e451e216bc75f644685e34055d8afd8</anchor>
      <arglist>(short X, short Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseWheelChange</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>abd4764afa95659247294fdce23ecb57c</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a7e9debb134cfb22722e3bab6449e9c27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleEvent</name>
      <anchorfile>classsw_1_1input_1_1_win_api_input_proxy.html</anchorfile>
      <anchor>a90be23537d85d7458cdaf30915a1f117</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::input::WPFInputProxy</name>
    <filename>classsw_1_1input_1_1_w_p_f_input_proxy.html</filename>
    <base>sw::input::IInput</base>
    <member kind="function">
      <type></type>
      <name>WPFInputProxy</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a4f5fd92d78252f1734767364c652ee5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPFInputProxy</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ac0aff8833cd6311564015053d2f8b2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Init</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a2185e15ef9bf25b979a6bcc6f03a2f61</anchor>
      <arglist>(const InputInitInfo &amp;initInfo) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const KeyboardState * &gt; &amp;</type>
      <name>GetKeyboardStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a4c2965a86f5421ed804a735c72d168ea</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const MouseState * &gt; &amp;</type>
      <name>GetMouseStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ae26dbb2cf2cd9162269ca13ce6e45d62</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; const JoystickState * &gt; &amp;</type>
      <name>GetJoystickStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a7bac4204b45e7481bf9fb5f42c20bb0d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; KeyboardDeviceOPtr &gt; &amp;</type>
      <name>GetKeyboardDevice</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>afdc648405aab216eb6f477eb790d2e8b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; MouseDeviceOPtr &gt; &amp;</type>
      <name>GetMouseDevice</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a3b94637bb40f10f406caade532bde68e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; JoystickDeviceOPtr &gt; &amp;</type>
      <name>GetJoystickDevice</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a3e9c3241c507b8497069d17e9f153b7c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; const InputDeviceInfo * &gt;</type>
      <name>GetDevicesInfo</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ab2806370f4344fe0c2822a5c72544468</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a410d3ecf3145210bcc443741ddc65d83</anchor>
      <arglist>(float timeInterval) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateDevices</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a2172cc85a0318de33cc5361f3d9acce8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a57b843012cc243168bf96241202d7fca</anchor>
      <arglist>(int keyId, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseButtonChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>af2188bd6d34a51df7412643ba448751c</anchor>
      <arglist>(int button, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MousePositionChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a90f6f01213e8866a79725fd493502336</anchor>
      <arglist>(double X, double Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseWheelChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ac8b6ad2988451af81dc78641727d25f2</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a08d05bb8b22f83abbc19b3d0f44dc2e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PostUpdate</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a59fc79ae7a6a98709e3fc9ee407f8307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const KeyboardState * &gt;</type>
      <name>m_keyboardsStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a489c000e99e9df5282e674dc58dee59e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const MouseState * &gt;</type>
      <name>m_mousesStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a2fb7f2a229a48485c91969323498d421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; const JoystickState * &gt;</type>
      <name>m_joysticksStates</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ac193cb35e64500820526e7bd7d857a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; KeyboardDeviceOPtr &gt;</type>
      <name>m_keyboards</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a6e32265a5a5be9adf6113f8b6e25c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MouseDeviceOPtr &gt;</type>
      <name>m_mouses</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ad552edeb6057ae6f1a6e6ebc2c8d4574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JoystickDeviceOPtr &gt;</type>
      <name>m_joysticks</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a13580ce2b2f4163f49c0e324e274abca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_lastX</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a233ba50f9a2793971996262e00598a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16</type>
      <name>m_lastY</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a7ea1e9f8adb45e09512e13ba028c1732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Timestamp</type>
      <name>m_eventNum</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a7505251fa8799bff9f55f561e526d509</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyboardChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a57b843012cc243168bf96241202d7fca</anchor>
      <arglist>(int keyId, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseButtonChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>af2188bd6d34a51df7412643ba448751c</anchor>
      <arglist>(int button, bool pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MousePositionChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a90f6f01213e8866a79725fd493502336</anchor>
      <arglist>(double X, double Y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MouseWheelChange</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>ac8b6ad2988451af81dc78641727d25f2</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LostFocus</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a08d05bb8b22f83abbc19b3d0f44dc2e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PostUpdate</name>
      <anchorfile>classsw_1_1input_1_1_w_p_f_input_proxy.html</anchorfile>
      <anchor>a59fc79ae7a6a98709e3fc9ee407f8307</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>sw::gui::WrapPanel</name>
    <filename>classsw_1_1gui_1_1_wrap_panel.html</filename>
    <base>sw::gui::IPanel</base>
    <member kind="function">
      <type></type>
      <name>WrapPanel</name>
      <anchorfile>classsw_1_1gui_1_1_wrap_panel.html</anchorfile>
      <anchor>ad2788a0e08aba92cf7815c8f78d07cd4</anchor>
      <arglist>(IControl *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WrapPanel</name>
      <anchorfile>classsw_1_1gui_1_1_wrap_panel.html</anchorfile>
      <anchor>a086501b908ab440eb675bb52c70ad429</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rttr::wrapper_mapper&lt; ResourcePtr&lt; T &gt; &gt;</name>
    <filename>structrttr_1_1wrapper__mapper_3_01_resource_ptr_3_01_t_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>decltype(std::declval&lt; ResourcePtr&lt; T &gt; &gt;().Ptr())</type>
      <name>wrapped_type</name>
      <anchorfile>structrttr_1_1wrapper__mapper_3_01_resource_ptr_3_01_t_01_4_01_4.html</anchorfile>
      <anchor>ae5f299c933d4e6a267337ee766afff90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ResourcePtr&lt; T &gt;</type>
      <name>type</name>
      <anchorfile>structrttr_1_1wrapper__mapper_3_01_resource_ptr_3_01_t_01_4_01_4.html</anchorfile>
      <anchor>a19897fdc784c4a536c4a94e53de8ae7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wrapped_type</type>
      <name>get</name>
      <anchorfile>structrttr_1_1wrapper__mapper_3_01_resource_ptr_3_01_t_01_4_01_4.html</anchorfile>
      <anchor>a459da739e83318e8aacd51478fbb545b</anchor>
      <arglist>(const type &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static type</type>
      <name>create</name>
      <anchorfile>structrttr_1_1wrapper__mapper_3_01_resource_ptr_3_01_t_01_4_01_4.html</anchorfile>
      <anchor>ac4f74079ce334eebab93001db100988a</anchor>
      <arglist>(const wrapped_type &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>@500</name>
    <filename>namespace@500.html</filename>
  </compound>
  <compound kind="namespace">
    <name>@503</name>
    <filename>namespace@503.html</filename>
  </compound>
  <compound kind="namespace">
    <name>@504</name>
    <filename>namespace@504.html</filename>
  </compound>
  <compound kind="namespace">
    <name>@514</name>
    <filename>namespace@514.html</filename>
  </compound>
  <compound kind="namespace">
    <name>DefaultInterpolators</name>
    <filename>namespace_default_interpolators.html</filename>
    <class kind="struct">DefaultInterpolators::is_param_animation_enabled</class>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aae83bc3f9e950a0315df58fc17ff471f</anchor>
      <arglist>(float, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a80ab718a1f663a0066f05540628faee7</anchor>
      <arglist>(double, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>acdbcbf144fb0757c34c2c57e7ee2aa1f</anchor>
      <arglist>(char, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a91b32d31b50f8505b7b3a35fad685761</anchor>
      <arglist>(uint8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab2551beb7aed1a517ba7ac7e1d55a453</anchor>
      <arglist>(int8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9016c47d2cf57c2a044f9a0aa5f7fb4b</anchor>
      <arglist>(uint16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad224d87b7fcf6303cd7896575ea913da</anchor>
      <arglist>(int16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abd3d1ba4a0d882c461b5963e2cb86a4e</anchor>
      <arglist>(uint32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a7fb5697320b9fd2f12ebec54f76eaa3a</anchor>
      <arglist>(int32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a17320381b7f6cad338e381d7b0f0f313</anchor>
      <arglist>(uint64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a10732237aece1966447861e62a958310</anchor>
      <arglist>(int64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a87c4a1b622a219696755324e9245abd5</anchor>
      <arglist>(float, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a070f8b1d289a720c6dfef3fa07e06dae</anchor>
      <arglist>(double, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a8cc0801caaf767219dda96091d1b34dc</anchor>
      <arglist>(char, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a40da4ff844a496851ace64ff88f0aedd</anchor>
      <arglist>(uint8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abd0486854a82d7b8fde77d493db58f19</anchor>
      <arglist>(int8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a8dde0cc7aacd68ce748790321682e0e6</anchor>
      <arglist>(uint16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a41653e27499aab6eef52dc5753c0d57c</anchor>
      <arglist>(int16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab6fabf962565ac81574a7c01b161baff</anchor>
      <arglist>(uint32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abecd2b32486d4e8b5d44f0a0657c15cf</anchor>
      <arglist>(int32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>abf28cbdf850243871983f34a518edf74</anchor>
      <arglist>(uint64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad42840784d6812fbf3a3e135cb02aaac</anchor>
      <arglist>(int64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab563a556fd662edba8aab045d4877549</anchor>
      <arglist>(bool, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa28083b12694faacac1f2adb73361150</anchor>
      <arglist>(float, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad92ee4b0ae634058dab3a0787d1985da</anchor>
      <arglist>(double, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9dfd775caf4a3113601aa72d1ae85adc</anchor>
      <arglist>(char, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a884b65e9197ac18b7519c53f484384b6</anchor>
      <arglist>(uint8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a93ebdbc0b319596c6be35478e009e565</anchor>
      <arglist>(int8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9edfdd2b1a33166a88b943f59dec1cf7</anchor>
      <arglist>(uint16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9e362ffdb41fd8a0904241f2eb715baa</anchor>
      <arglist>(int16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa1c00c43ca48690f09cba8590709b713</anchor>
      <arglist>(uint32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a7d2168a219d67741c6a4537bc71fd5c6</anchor>
      <arglist>(int32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a0aa06dc78322691e14959c7ea523fbfc</anchor>
      <arglist>(uint64, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_SPECIALIZATION</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab80e27e1dea141a7de566c9545d10408</anchor>
      <arglist>(int64, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateLinear</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a0773c82153ae209187d9ac8796d423cd</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateDiscrete</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>adc658d9d279be309cdd12e6a918345f0</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>CreateCosinus</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2e8277e40a5385f78a2f15ba4cc080bd</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; KeyType &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>af89eb7aeb3c2a585494f03ea831bf1b4</anchor>
      <arglist>(InterpolatorType type, const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_floating_point&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2ecd3cdca6bc458640a9b35c5ff4deca</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_integral&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a11e60a0b2a5a4963875a702ceb3930f6</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; bool &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aabdcec82f2083ff343044993443f3b7e</anchor>
      <arglist>(const Key&lt; bool &gt; &amp;leftKey, const Key&lt; bool &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; bool &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; bool &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_enum&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a288abfa06bd7c97b5bd470b6e1c5e5e4</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; std::is_same&lt; KeyType, std::basic_string&lt; typename KeyType::value_type &gt; &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2aa50f86f4da5f9967e60aaa312b8474</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type>UPtr&lt; IInterpolator&lt; typename std::enable_if&lt; is_param_animation_enabled&lt; KeyType &gt;::value, KeyType &gt;::type &gt; &gt;</type>
      <name>Create</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a25df89eaf7caa7daa31134f999a12535</anchor>
      <arglist>(const Key&lt; KeyType &gt; &amp;leftKey, const Key&lt; KeyType &gt; &amp;rightKey, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;leftInterpolator, UPtr&lt; const IInterpolator&lt; KeyType &gt; &gt; &amp;rightInterpolator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa73c9f8871a40aee656843273fcecaa6</anchor>
      <arglist>(float, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4739fc573de75567bbf95de67739305f</anchor>
      <arglist>(double, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa04efb94ca7d4d03e9451e106e23a384</anchor>
      <arglist>(char, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a27e9ed6798d5e6061b9c252073450452</anchor>
      <arglist>(uint8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a271ed9b562378404d0390f22f2adf4fa</anchor>
      <arglist>(int8, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a26f676d8a4a21aa411681ec9c8beda27</anchor>
      <arglist>(uint16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aa7146d24bfd61cd03d84507ea4faa749</anchor>
      <arglist>(int16, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a268dec27021d31daafc2bfe1ee2385c3</anchor>
      <arglist>(uint32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aba1c233eefa436e300d7c1eff5c2bac1</anchor>
      <arglist>(int32, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4e92902637c3c5d7ef1b5800fc0c1531</anchor>
      <arglist>(uint64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a14073ecbbbe011ee444d51276e04e6dc</anchor>
      <arglist>(int64, CreateLinear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a1982f1bc14b1a72562e94e7305a91f4b</anchor>
      <arglist>(float, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a097ec233f7e34064b92937f25b032caa</anchor>
      <arglist>(double, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad99e32c19e2667edda61ed608f1cc15f</anchor>
      <arglist>(char, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>afb024ed731c2d9eaa6eb58e467ba2915</anchor>
      <arglist>(uint8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ac11500cb0c83024ec536b11fd9ac77ff</anchor>
      <arglist>(int8, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a61a283b6ce58b3a1ee95a9df2a350705</anchor>
      <arglist>(uint16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4a7394453175f80b0004cee86c395fed</anchor>
      <arglist>(int16, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab505cb87301a0e86ae8f97c6c3ffea1e</anchor>
      <arglist>(uint32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a4f7a6e08a97ee02481b7da66a313267f</anchor>
      <arglist>(int32, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>af1531f2f65ca4326e9bf79b1ac0239b3</anchor>
      <arglist>(uint64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ab45ecc5a5f18456b7bcc2dd2e8441bf8</anchor>
      <arglist>(int64, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a3a2f0bad9ac1e148b07f60025b5cd17f</anchor>
      <arglist>(bool, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>aca148d079182ec4e88104e969063d9ba</anchor>
      <arglist>(std::wstring, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a83e30c301cfba6b8e63583797fd876b8</anchor>
      <arglist>(std::string, CreateDiscrete)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a07da040bf42473f6e47c30c82a2051d1</anchor>
      <arglist>(float, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a19c11db5ee0a2a34b65f377306ef26c9</anchor>
      <arglist>(double, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a2ae9afbc03f06996c3df0800a686b49d</anchor>
      <arglist>(char, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad12eba905b7cfde42785b46c022f2046</anchor>
      <arglist>(uint8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a226e39390f89c7b88ad95acfec902bdf</anchor>
      <arglist>(int8, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a89d839b8f4ad416e2dc28b63286bc24f</anchor>
      <arglist>(uint16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a9dfb6b5ecd69ab798606b3c80e9c0ad8</anchor>
      <arglist>(int16, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a3412110bdf0b6e233d086d630273bf1f</anchor>
      <arglist>(uint32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>a42df302592194f963337f5e27b1cc421</anchor>
      <arglist>(int32, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad570aad04e923af95052d4e10c421794</anchor>
      <arglist>(uint64, CreateCosinus)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_SPECIALIZATON</name>
      <anchorfile>namespace_default_interpolators.html</anchorfile>
      <anchor>ad75e37d1aa5c74ee838e1ddb64a77a13</anchor>
      <arglist>(int64, CreateCosinus)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>DirectX</name>
    <filename>namespace_direct_x.html</filename>
  </compound>
  <compound kind="namespace">
    <name>filesystem</name>
    <filename>namespacefilesystem.html</filename>
    <class kind="class">filesystem::File</class>
    <class kind="class">filesystem::Path</class>
    <member kind="function">
      <type>Path</type>
      <name>operator/</name>
      <anchorfile>namespacefilesystem.html</anchorfile>
      <anchor>a9c2e9c57c77992ef2eb2931f64b35bcb</anchor>
      <arglist>(const Path &amp;path1, const Path &amp;path2)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Microsoft::WRL</name>
    <filename>namespace_microsoft_1_1_w_r_l.html</filename>
  </compound>
  <compound kind="namespace">
    <name>rttr</name>
    <filename>namespacerttr.html</filename>
    <class kind="struct">rttr::wrapper_mapper&lt; ResourcePtr&lt; T &gt; &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>sw</name>
    <filename>namespacesw.html</filename>
    <namespace>sw::gui</namespace>
    <namespace>sw::input</namespace>
    <class kind="class">sw::Attribute</class>
    <class kind="struct">sw::AttributeHeader</class>
    <class kind="class">sw::AttributeRepr</class>
    <class kind="class">sw::Chunk</class>
    <class kind="struct">sw::ChunkHeader</class>
    <class kind="class">sw::ChunkNameAttrib</class>
    <class kind="class">sw::ChunkRepr</class>
    <class kind="struct">sw::DataPack</class>
    <class kind="struct">sw::DataUPack</class>
    <class kind="struct">sw::FileHeader</class>
    <class kind="class">sw::HCF</class>
    <class kind="class">sw::IAttribute</class>
    <class kind="class">sw::ImplHCF</class>
    <class kind="struct">sw::InputLayoutInfo</class>
    <class kind="class">sw::MockBlendingState</class>
    <class kind="class">sw::MockBuffer</class>
    <class kind="class">sw::MockComputeShader</class>
    <class kind="class">sw::MockDepthStencilState</class>
    <class kind="class">sw::MockInitializer</class>
    <class kind="class">sw::MockInputLayout</class>
    <class kind="class">sw::MockInputLayoutDescriptor</class>
    <class kind="class">sw::MockPixelShader</class>
    <class kind="class">sw::MockRasterizerState</class>
    <class kind="class">sw::MockRenderer</class>
    <class kind="class">sw::MockRenderTarget</class>
    <class kind="class">sw::MockSwapChain</class>
    <class kind="class">sw::MockTexture</class>
    <class kind="class">sw::MockVertexShader</class>
    <class kind="class">sw::Semaphore</class>
    <class kind="class">sw::ThreadsBarrier</class>
    <class kind="class">sw::ThreadsLatch</class>
    <member kind="typedef">
      <type>uint64</type>
      <name>AttributeType</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a74c7a1a6eb31cb38d260b379f57bfff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8</type>
      <name>DataUnderlayingType</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a691f5dca71a2a4ebe3ae85ab2f845478</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DataUnderlayingType *</type>
      <name>DataPtr</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a15da8d708fcdbd287901fe7fe4f8453b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; DataUnderlayingType[] &gt;</type>
      <name>DataUPtr</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a27c34a388d34976a960c9141623f81f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AttributeTypeBuiltIn</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a238bca1bec3c3621527f0b15dec6bac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a53954e05b88f460878d8767c039b097b</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a1cb82c5028e2918c92a9cc0640e680a2</anchor>
      <arglist>(IAttribute)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a13ef887f97ab5330f13df860a131350c</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a44a1a9afaf4dfe89c988c5cf8dd7745c</anchor>
      <arglist>(AttributeRepr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_WPTR_TYPE</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a37d2ef8b5cef4f51c9a4f65fd9ec483d</anchor>
      <arglist>(ChunkRepr)</arglist>
    </member>
    <member kind="function">
      <type>class</type>
      <name>CLASS_TESTER</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a5fd7049df38a7348b1b5fc815ee32f42</anchor>
      <arglist>(HCF)</arglist>
    </member>
    <member kind="variable">
      <type>const Version</type>
      <name>currentVersion</name>
      <anchorfile>namespacesw.html</anchorfile>
      <anchor>a91f6eb91bcdcf336dff3daa0d3938dea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>sw::gui</name>
    <filename>namespacesw_1_1gui.html</filename>
    <class kind="class">sw::gui::AccessKey</class>
    <class kind="class">sw::gui::Brush</class>
    <class kind="struct">sw::gui::CommandLineArgs</class>
    <class kind="class">sw::gui::DelegatesContainer</class>
    <class kind="class">sw::gui::DelegatesContainerBase</class>
    <class kind="class">sw::gui::DependencyObject</class>
    <class kind="class">sw::gui::DockPanel</class>
    <class kind="class">sw::gui::DrawingContext</class>
    <class kind="class">sw::gui::EventHandlers</class>
    <class kind="class">sw::gui::EventProxy</class>
    <class kind="class">sw::gui::EventsSystem</class>
    <class kind="class">sw::gui::GradientBrush</class>
    <class kind="class">sw::gui::Grid</class>
    <class kind="class">sw::gui::GUISystem</class>
    <class kind="class">sw::gui::HostLogic</class>
    <class kind="class">sw::gui::HostWindow</class>
    <class kind="class">sw::gui::IControl</class>
    <class kind="struct">sw::gui::IEventArgs</class>
    <class kind="class">sw::gui::ImageBrush</class>
    <class kind="class">sw::gui::INativeGUI</class>
    <class kind="class">sw::gui::INativeWindow</class>
    <class kind="struct">sw::gui::InputEventArgs</class>
    <class kind="class">sw::gui::IPanel</class>
    <class kind="struct">sw::gui::KeyboardEventArgs</class>
    <class kind="struct">sw::gui::KeyEventArgs</class>
    <class kind="class">sw::gui::LinearGradient</class>
    <class kind="class">sw::gui::MockGUI</class>
    <class kind="class">sw::gui::MockWindow</class>
    <class kind="struct">sw::gui::MouseButtonEventArgs</class>
    <class kind="struct">sw::gui::MouseEventArgs</class>
    <class kind="struct">sw::gui::MouseMoveEventArgs</class>
    <class kind="struct">sw::gui::MouseWheelEventArgs</class>
    <class kind="struct">sw::gui::NativeGUIInitData</class>
    <class kind="struct">sw::gui::NativeWindowDescriptor</class>
    <class kind="class">sw::gui::RadialGradient</class>
    <class kind="struct">sw::gui::Rect</class>
    <class kind="struct">sw::gui::RegisteredEvent</class>
    <class kind="class">sw::gui::RenderingSystem</class>
    <class kind="class">sw::gui::SolidColorBrush</class>
    <class kind="class">sw::gui::StackPanel</class>
    <class kind="class">sw::gui::TestFramework</class>
    <class kind="struct">sw::gui::Thickness</class>
    <class kind="class">sw::gui::TopLevelControl</class>
    <class kind="class">sw::gui::UIElement</class>
    <class kind="class">sw::gui::Visual</class>
    <class kind="class">sw::gui::Win32ApiWindow</class>
    <class kind="class">sw::gui::WinAPIGUI</class>
    <class kind="class">sw::gui::WrapPanel</class>
    <member kind="typedef">
      <type>DirectX::XMFLOAT2</type>
      <name>Position</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a8e73557abbfd912fe81a8d3915e19058</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DirectX::XMFLOAT2</type>
      <name>Size2D</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ac4016e8950fa391b61d115a48fad5d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fastdelegate::FastDelegate2&lt; UIElement *, EventArgType * &gt;</type>
      <name>EventDelegate</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a35ac501f6307d311383d7d1a9577ecbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(UIElement::*)(UIElement *, ArgumentType *)</type>
      <name>EventHandlerPointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a2c538091d7c58f37027a1b60bf2e34f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32</type>
      <name>EventType</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gab331329f020c803a1fa0f32a30d4054b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fastdelegate::FastDelegate2&lt; INativeWindow *, bool &gt;</type>
      <name>ChangedFocusDelegate</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a563baa70e3ac0468cd81d5a3c1cf2b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VerticalAlignment</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ae4bd851f5294af74424e1b38da78891d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891da2ad9d63b69c4a10a5cc9cad923133bc4">Bottom</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891da4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891dafbb09a82eafab60150d0996e8fe46560">Stretch</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="ae4bd851f5294af74424e1b38da78891daa4ffdcf0dc1f31b9acaf295d75b51d00">Top</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HorizontalAlignment</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>afeec79e118f1af5b0927a26ae571679d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da945d5e233cf7d6240f6b783b36a374ff">Left</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da4f1f6016fc9f3f2353c0cc7c67b292bd">Center</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679da92b09c7c48c520c3c55e497875da437c">Right</enumvalue>
      <enumvalue file="namespacesw_1_1gui.html" anchor="afeec79e118f1af5b0927a26ae571679dafbb09a82eafab60150d0996e8fe46560">Stretch</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RoutingStrategy</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gaaad874b405531e224e6c3ce77c1be885</anchor>
      <arglist></arglist>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885ab6230dfc594205d0ea15d5890ac22d7f">Bubble</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885afd1dd0c603be8170f9eae0be9f2f6afb">Direct</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885aeebee9ab199d3cc4d44e19b341b65b7d">Tunnel</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a0f40252ef55ec1e0a9576a63a11dd1c7</anchor>
      <arglist>(PreviewMouseUp, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abf37a2eb9724bb28aaff6bc45bac6dfd</anchor>
      <arglist>(PreviewMouseDown, RoutingStrategy::Tunnel, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a00da58219d09cc55d410edc09213e929</anchor>
      <arglist>(PreviewMouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5463ea9bc029b3f1e7bdc6bdcc04e18b</anchor>
      <arglist>(PreviewMouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aefe8035e7a0e196c1d863b12415ac9ea</anchor>
      <arglist>(PreviewMouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>addf00c4631fbb0f887d06daf4d8475d2</anchor>
      <arglist>(PreviewMouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a65f21bb9b1d713222840f24e20220112</anchor>
      <arglist>(PreviewMouseWheel, RoutingStrategy::Tunnel, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5e8099116f7a12a991d21ce5c319674a</anchor>
      <arglist>(PreviewMouseMove, RoutingStrategy::Tunnel, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ab954ae36bd57957f8e0af4522907f794</anchor>
      <arglist>(PreviewKeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ae37d3fff49a0f4aec16596d6fec8338a</anchor>
      <arglist>(PreviewKeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aea5dc3c50fa04d2c6ce64119c0cc6a58</anchor>
      <arglist>(MouseUp, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aa2f95f119e014d020fdaabea4036667e</anchor>
      <arglist>(MouseDown, RoutingStrategy::Bubble, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a1f8ed5db70ef1fce37a9945c4b25eaf7</anchor>
      <arglist>(MouseRightButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ada6bd7c5db7f52c96aa3835d1339a916</anchor>
      <arglist>(MouseRightButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>afd85147cb5c486e422e28e5650752693</anchor>
      <arglist>(MouseLeftButtonDown, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a352cda9564365605a41ad563fbad062d</anchor>
      <arglist>(MouseLeftButtonUp, RoutingStrategy::Direct, UIElement, MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abbfa0cd114994344347ce5d4b34a4969</anchor>
      <arglist>(MouseWheel, RoutingStrategy::Bubble, UIElement, MouseWheelEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a9f2480071e4c4fd0ab8ebca8182fe712</anchor>
      <arglist>(MouseMove, RoutingStrategy::Bubble, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aa8c064c6a3e794cd5cd7dd0110533433</anchor>
      <arglist>(KeyUp, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a29ffb3d7cadeace72c943b07b778fb7b</anchor>
      <arglist>(KeyDown, RoutingStrategy::Tunnel, UIElement, KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a6e9c999fd3faf028bd62c9e11469c71f</anchor>
      <arglist>(MouseEnter, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REGISTER_EVENT_DEFINITION</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a6674a5a18b225f0e814065b49cc5ed2e</anchor>
      <arglist>(MouseLeave, RoutingStrategy::Direct, UIElement, MouseEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a87d391f004578da1660585ad4c044be9</anchor>
      <arglist>(UIElement)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a121a571aca35830f9b5ac00f68262797</anchor>
      <arglist>(DelegatesContainerBase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>af4064139d2c39fc4a988cbe3813b6a22</anchor>
      <arglist>(const RegisteredEvent &amp;left, const RegisteredEvent &amp;right)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a8c4d7dda91919a4dd7eec4c81ce0801a</anchor>
      <arglist>(IEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a4a514cff169380b4cb52a7204fc7d563</anchor>
      <arglist>(KeyEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a480b91fea78ebef4cc60d2bdcd98f638</anchor>
      <arglist>(MouseButtonEventArgs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>abfa6aca9ce936c5373658caaa5c4f37f</anchor>
      <arglist>(MouseMoveEventArgs)</arglist>
    </member>
    <member kind="function">
      <type>INativeGUI *</type>
      <name>CreateNativeGUI</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>aefa3734d6fb00a4acbb27d63d7c224bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a304f447a2482f2e073f1954e36c9e9ae</anchor>
      <arglist>(HostWindow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_PTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a91f0a9dc47b4faf3133b4b15ce0cca5c</anchor>
      <arglist>(HostWindow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a17e032588a7559b7f2a966eea409b689</anchor>
      <arglist>(RenderingSystem)</arglist>
    </member>
    <member kind="function">
      <type>LRESULT CALLBACK</type>
      <name>WindowProcedure</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ade8eb75ea0972a49a2637f744483be0e</anchor>
      <arglist>(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</arglist>
    </member>
    <member kind="function">
      <type>INativeWindow *</type>
      <name>GetNativePointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>ac0ddddbe6a411a7f18b108a5d06ae3c2</anchor>
      <arglist>(HWND window)</arglist>
    </member>
    <member kind="function">
      <type>WinAPIGUI *</type>
      <name>GetNativeAPIPointer</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a92908e8ddad75ca8443798bedef89782</anchor>
      <arglist>(HWND window)</arglist>
    </member>
    <member kind="variable">
      <type>const wchar_t</type>
      <name>WINDOW_CLASS_NAME</name>
      <anchorfile>namespacesw_1_1gui.html</anchorfile>
      <anchor>a5a356310113719ff491ff8752d9116dc</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>sw::input</name>
    <filename>namespacesw_1_1input.html</filename>
    <namespace>sw::input::InputFactory</namespace>
    <class kind="struct">sw::input::AxisEvent</class>
    <class kind="struct">sw::input::ButtonEvent</class>
    <class kind="struct">sw::input::CharacterEvent</class>
    <class kind="struct">sw::input::CursorEvent</class>
    <class kind="struct">sw::input::DebugEvent</class>
    <class kind="class">sw::input::DebugInput</class>
    <class kind="class">sw::input::Device</class>
    <class kind="struct">sw::input::DeviceEvent</class>
    <class kind="class">sw::input::DirectInputModule</class>
    <class kind="class">sw::input::EventCapture</class>
    <class kind="class">sw::input::EventQueue</class>
    <class kind="class">sw::input::IInput</class>
    <class kind="class">sw::input::InputDispatcher</class>
    <class kind="struct">sw::input::InputInitInfo</class>
    <class kind="class">sw::input::JoystickDevice</class>
    <class kind="class">sw::input::JoystickState</class>
    <class kind="struct">sw::input::Keyboard</class>
    <class kind="class">sw::input::KeyboardDevice</class>
    <class kind="class">sw::input::KeyboardState</class>
    <class kind="struct">sw::input::KeyEvent</class>
    <class kind="class">sw::input::KeyState</class>
    <class kind="struct">sw::input::Mouse</class>
    <class kind="class">sw::input::MouseDevice</class>
    <class kind="class">sw::input::MouseState</class>
    <class kind="class">sw::input::WinApiInputProxy</class>
    <class kind="class">sw::input::WPFInputProxy</class>
    <member kind="typedef">
      <type>uint16</type>
      <name>Timestamp</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a4c3b34aea2c324dfb1ab6a21355a42ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceEventType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabf3f6def9fbf3c504ac498e3b18d281a</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa2a5fc951d784f4f83f0a8d4ad5f01496">KeyboardEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aaa90505c6fad857aba05414fb17b0edd4">CharacterEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa6e23f9964c61f96fb456181d4f66e240">ButtonEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aac1f4a428d2f300ba6236228a878d6306">AxisEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa7fa053ad816e645e8bae9d8c6107d487">CursorEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa42fee7e7a62b3ca0a0addab64d81a6ba">InvalidEvent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga6ec104f8078c8e9863c19cee3b0c27ab</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba6ce4d85a628a88bbdb3ac24a8e5a9c2e">Keyboard</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27abaf2a47c6809d88e175dade0ef7b16aa13">Mouse</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba1162b85b7b993e2edf7da29dd8abf7e2">Joystick</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ad5b8776894c7e539674dc2fe24858d6b</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae95b548d5ca6dbcabdf7454c6268acb6</anchor>
      <arglist>(JoystickDevice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a09c20adaa98c5f40657f850a1dbb57db</anchor>
      <arglist>(KeyboardDevice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OPTR_TYPE</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a30dd2ffa0f1e9a853c0a22060f31562a</anchor>
      <arglist>(MouseDevice)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ArrayStaticInitializerFun</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a4841092a1eda8655952095a12cf92f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const uint8</type>
      <name>KEYBOARD_STATE_KEYS_NUMBER</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ad58528bb8b4f8e72f9c88e43efde5574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8</type>
      <name>MOUSE_STATE_MAX_NUM_BUTTONS</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>a7cc9fd3f6dedbd85a5f7686c1c969837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8</type>
      <name>MOUSE_STATE_MAX_NUM_AXES</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae3eb4ab63163eb8dd869be18b2eb20f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Mouse::PhysicalButtons</type>
      <name>MOUSE_BUTTONS_MAPPING</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ac0849777c613289845b24c81385a9f24</anchor>
      <arglist>[NUM_WINAPI_MOUSE_BUTTONS]</arglist>
    </member>
    <member kind="variable">
      <type>Keyboard::PhysicalKeys</type>
      <name>KEYBOARD_BUTTONS_MAPPING</name>
      <anchorfile>namespacesw_1_1input.html</anchorfile>
      <anchor>ae4364bfacf5ece46258ab0848064d3e6</anchor>
      <arglist>[NUM_WINAPI_KEYBOARD_BUTTONS]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>sw::input::InputFactory</name>
    <filename>namespacesw_1_1input_1_1_input_factory.html</filename>
    <member kind="function">
      <type>IInput *</type>
      <name>CreateDirectInput</name>
      <anchorfile>namespacesw_1_1input_1_1_input_factory.html</anchorfile>
      <anchor>a895d381f4c70fe8cc9a248880600d651</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DirectInput</name>
    <title>DirectInput</title>
    <filename>group___direct_input.html</filename>
    <class kind="class">sw::input::DirectInputModule</class>
  </compound>
  <compound kind="group">
    <name>DebugInput</name>
    <title>DebugInput</title>
    <filename>group___debug_input.html</filename>
    <class kind="class">sw::input::DebugInput</class>
    <class kind="struct">sw::input::DebugEvent</class>
    <class kind="class">sw::input::EventCapture</class>
  </compound>
  <compound kind="group">
    <name>Input</name>
    <title>Input</title>
    <filename>group___input.html</filename>
    <subgroup>DirectInput</subgroup>
    <subgroup>DebugInput</subgroup>
    <subgroup>WinAPIInput</subgroup>
    <subgroup>WPFInput</subgroup>
    <class kind="class">sw::input::Device</class>
    <class kind="struct">sw::input::InputInitInfo</class>
    <class kind="class">sw::input::IInput</class>
    <class kind="struct">sw::input::KeyEvent</class>
    <class kind="struct">sw::input::CharacterEvent</class>
    <class kind="struct">sw::input::ButtonEvent</class>
    <class kind="struct">sw::input::AxisEvent</class>
    <class kind="struct">sw::input::CursorEvent</class>
    <class kind="struct">sw::input::DeviceEvent</class>
    <class kind="struct">InputDeviceInfo</class>
    <class kind="class">sw::input::JoystickDevice</class>
    <class kind="class">sw::input::JoystickState</class>
    <class kind="class">sw::input::KeyboardDevice</class>
    <class kind="class">sw::input::KeyboardState</class>
    <class kind="class">sw::input::KeyState</class>
    <class kind="class">sw::input::MouseDevice</class>
    <class kind="class">sw::input::MouseState</class>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalKeys</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga328c1724443473b2c64b39a059667e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalButtons</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga714359d6428fe2d46a5f9e71c08051b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PhysicalAxes</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gacc3c5384642c75be2669247d0b44aba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceEventType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>gabf3f6def9fbf3c504ac498e3b18d281a</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa2a5fc951d784f4f83f0a8d4ad5f01496">KeyboardEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aaa90505c6fad857aba05414fb17b0edd4">CharacterEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa6e23f9964c61f96fb456181d4f66e240">ButtonEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aac1f4a428d2f300ba6236228a878d6306">AxisEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa7fa053ad816e645e8bae9d8c6107d487">CursorEvent</enumvalue>
      <enumvalue file="group___input.html" anchor="ggabf3f6def9fbf3c504ac498e3b18d281aa42fee7e7a62b3ca0a0addab64d81a6ba">InvalidEvent</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga6ec104f8078c8e9863c19cee3b0c27ab</anchor>
      <arglist></arglist>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba6ce4d85a628a88bbdb3ac24a8e5a9c2e">Keyboard</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27abaf2a47c6809d88e175dade0ef7b16aa13">Mouse</enumvalue>
      <enumvalue file="group___input.html" anchor="gga6ec104f8078c8e9863c19cee3b0c27aba1162b85b7b993e2edf7da29dd8abf7e2">Joystick</enumvalue>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>KeyStateFlag</name>
      <anchorfile>group___input.html</anchorfile>
      <anchor>ga7f35a7c275660995add6d442ad83e3c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>WinAPIInput</name>
    <title>WinAPIInput</title>
    <filename>group___win_a_p_i_input.html</filename>
    <class kind="class">sw::input::WinApiInputProxy</class>
  </compound>
  <compound kind="group">
    <name>WPFInput</name>
    <title>WPFInput</title>
    <filename>group___w_p_f_input.html</filename>
    <class kind="class">sw::input::WPFInputProxy</class>
  </compound>
  <compound kind="group">
    <name>ControlsFramework</name>
    <title>Controls Framework</title>
    <filename>group___controls_framework.html</filename>
    <class kind="class">sw::gui::UIElement</class>
    <class kind="class">sw::gui::Visual</class>
    <class kind="class">sw::gui::DependencyObject</class>
    <class kind="class">sw::gui::HostLogic</class>
    <class kind="class">sw::gui::HostWindow</class>
  </compound>
  <compound kind="group">
    <name>Brushes</name>
    <title>Brushes</title>
    <filename>group___brushes.html</filename>
    <class kind="class">sw::gui::Brush</class>
    <class kind="class">sw::gui::GradientBrush</class>
    <class kind="class">sw::gui::ImageBrush</class>
    <class kind="class">sw::gui::LinearGradient</class>
    <class kind="class">sw::gui::RadialGradient</class>
    <class kind="class">sw::gui::SolidColorBrush</class>
  </compound>
  <compound kind="group">
    <name>Media</name>
    <title>Media</title>
    <filename>group___media.html</filename>
    <subgroup>Brushes</subgroup>
  </compound>
  <compound kind="group">
    <name>DataBindingSystem</name>
    <title>Data Binding</title>
    <filename>group___data_binding_system.html</filename>
    <class kind="class">sw::gui::DependencyObject</class>
  </compound>
  <compound kind="group">
    <name>EventSystem</name>
    <title>Events System</title>
    <filename>group___event_system.html</filename>
    <subgroup>EventSystemImpl</subgroup>
    <subgroup>Events</subgroup>
    <class kind="class">sw::gui::EventHandlers</class>
    <class kind="class">sw::gui::EventsSystem</class>
    <class kind="struct">sw::gui::RegisteredEvent</class>
    <member kind="typedef">
      <type>uint32</type>
      <name>EventType</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gab331329f020c803a1fa0f32a30d4054b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RoutingStrategy</name>
      <anchorfile>group___event_system.html</anchorfile>
      <anchor>gaaad874b405531e224e6c3ce77c1be885</anchor>
      <arglist></arglist>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885ab6230dfc594205d0ea15d5890ac22d7f">Bubble</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885afd1dd0c603be8170f9eae0be9f2f6afb">Direct</enumvalue>
      <enumvalue file="group___event_system.html" anchor="ggaaad874b405531e224e6c3ce77c1be885aeebee9ab199d3cc4d44e19b341b65b7d">Tunnel</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>EventSystemImpl</name>
    <title>Events System Implementation</title>
    <filename>group___event_system_impl.html</filename>
    <class kind="class">sw::gui::DelegatesContainerBase</class>
    <class kind="class">sw::gui::EventProxy</class>
  </compound>
  <compound kind="group">
    <name>Events</name>
    <title>Events</title>
    <filename>group___events.html</filename>
    <subgroup>InputEvents</subgroup>
    <class kind="struct">sw::gui::IEventArgs</class>
  </compound>
  <compound kind="group">
    <name>InputEvents</name>
    <title>Input Events</title>
    <filename>group___input_events.html</filename>
    <class kind="struct">sw::gui::InputEventArgs</class>
    <class kind="struct">sw::gui::KeyboardEventArgs</class>
    <class kind="struct">sw::gui::KeyEventArgs</class>
    <class kind="struct">sw::gui::MouseButtonEventArgs</class>
    <class kind="struct">sw::gui::MouseEventArgs</class>
    <class kind="struct">sw::gui::MouseMoveEventArgs</class>
    <class kind="struct">sw::gui::MouseWheelEventArgs</class>
  </compound>
  <compound kind="group">
    <name>SWGUI</name>
    <title>Sleeping Wombat GUI</title>
    <filename>group___s_w_g_u_i.html</filename>
    <subgroup>GUICore</subgroup>
    <subgroup>NativeGUI</subgroup>
    <subgroup>GUITestFramework</subgroup>
  </compound>
  <compound kind="group">
    <name>GUICore</name>
    <title>Core</title>
    <filename>group___g_u_i_core.html</filename>
    <subgroup>ControlsFramework</subgroup>
    <subgroup>Media</subgroup>
    <subgroup>DataBindingSystem</subgroup>
    <subgroup>EventSystem</subgroup>
    <subgroup>RenderingSystem</subgroup>
    <class kind="class">sw::gui::GUISystem</class>
    <class kind="class">sw::gui::HostWindow</class>
  </compound>
  <compound kind="group">
    <name>RenderingSystem</name>
    <title>Rendering System</title>
    <filename>group___rendering_system.html</filename>
    <class kind="class">sw::gui::DrawingContext</class>
    <class kind="class">sw::gui::RenderingSystem</class>
  </compound>
  <compound kind="group">
    <name>NativeGUI</name>
    <title>Native GUI system</title>
    <filename>group___native_g_u_i.html</filename>
    <subgroup>MockGUI</subgroup>
    <subgroup>Win32APINativeGUI</subgroup>
    <class kind="struct">sw::gui::NativeGUIInitData</class>
    <class kind="class">sw::gui::INativeGUI</class>
    <class kind="struct">sw::gui::NativeWindowDescriptor</class>
    <class kind="class">sw::gui::INativeWindow</class>
  </compound>
  <compound kind="group">
    <name>MockGUI</name>
    <title>Fake GUI for tests.</title>
    <filename>group___mock_g_u_i.html</filename>
    <class kind="class">sw::gui::MockGUI</class>
    <class kind="class">sw::gui::MockWindow</class>
  </compound>
  <compound kind="group">
    <name>Win32APINativeGUI</name>
    <title>WinAPI native GUI</title>
    <filename>group___win32_a_p_i_native_g_u_i.html</filename>
    <class kind="class">sw::gui::Win32ApiWindow</class>
    <class kind="class">sw::gui::WinAPIGUI</class>
  </compound>
  <compound kind="group">
    <name>GUITestFramework</name>
    <title>TestFramework</title>
    <filename>group___g_u_i_test_framework.html</filename>
    <class kind="class">sw::gui::TestFramework</class>
    <docanchor file="group___g_u_i_test_framework" title="Writing tests">WritingTests</docanchor>
    <docanchor file="group___g_u_i_test_framework" title="Linking libraries">LinkingTestProject</docanchor>
    <docanchor file="group___g_u_i_test_framework" title="Usage examples">Usage</docanchor>
  </compound>
  <compound kind="group">
    <name>DX11API</name>
    <title>DX11API</title>
    <filename>group___d_x11_a_p_i.html</filename>
    <class kind="class">DX11ConstantsMapper</class>
    <class kind="class">DX11Initializer</class>
    <class kind="class">DX11Renderer</class>
    <class kind="class">DX11Buffer</class>
    <class kind="class">DX11ComputeShader</class>
    <class kind="class">DX11InputLayout</class>
    <class kind="class">DX11InputLayoutDescriptor</class>
    <class kind="class">DX11RasterizerState</class>
    <class kind="class">DX11DepthStencilState</class>
    <class kind="class">DX11BlendingState</class>
    <class kind="class">DX11PixelShader</class>
    <class kind="class">DX11RenderTarget</class>
    <class kind="class">DX11Texture</class>
    <class kind="class">DX11VertexShader</class>
  </compound>
  <compound kind="group">
    <name>MockAPI</name>
    <title>MockAPI</title>
    <filename>group___mock_a_p_i.html</filename>
    <class kind="class">sw::MockInitializer</class>
    <class kind="class">sw::MockRenderer</class>
    <class kind="class">sw::MockBuffer</class>
    <class kind="class">sw::MockComputeShader</class>
    <class kind="class">sw::MockInputLayout</class>
    <class kind="class">sw::MockInputLayoutDescriptor</class>
    <class kind="class">sw::MockRasterizerState</class>
    <class kind="class">sw::MockDepthStencilState</class>
    <class kind="class">sw::MockBlendingState</class>
    <class kind="class">sw::MockPixelShader</class>
    <class kind="class">sw::MockRenderTarget</class>
    <class kind="class">sw::MockTexture</class>
    <class kind="class">sw::MockVertexShader</class>
  </compound>
  <compound kind="group">
    <name>GraphicAPI</name>
    <title>GraphicAPI</title>
    <filename>group___graphic_a_p_i.html</filename>
    <subgroup>DX11API</subgroup>
    <subgroup>MockAPI</subgroup>
    <subgroup>RenderingCommands</subgroup>
    <subgroup>Resources</subgroup>
    <class kind="struct">SwapChainInitData</class>
    <class kind="struct">GraphicAPIInitData</class>
    <class kind="class">IRenderer</class>
    <class kind="class">TextureObject</class>
    <class kind="class">RenderTargetObject</class>
    <class kind="class">VertexShader</class>
    <class kind="class">PixelShader</class>
    <class kind="class">GeometryShader</class>
    <class kind="class">ControlShader</class>
    <class kind="class">EvaluationShader</class>
    <class kind="class">ComputeShader</class>
    <class kind="class">BufferObject</class>
    <class kind="class">ResourceObject</class>
    <class kind="class">ResourcesFactory</class>
  </compound>
  <compound kind="group">
    <name>RenderingCommands</name>
    <title>Rendering commands</title>
    <filename>group___rendering_commands.html</filename>
    <class kind="class">IRenderer</class>
    <class kind="struct">RendererCommand</class>
    <class kind="struct">SetRenderTargetCommand</class>
    <class kind="struct">ViewportInfo</class>
    <class kind="struct">ScissorRectInfo</class>
    <class kind="struct">SetRenderTargetExCommand</class>
    <class kind="struct">ClearRenderTargetCommand</class>
    <class kind="struct">DrawCommand</class>
    <class kind="struct">DrawInstancedCommand</class>
    <class kind="struct">SetShaderStateCommand</class>
    <class kind="struct">SetShaderStateExCommand</class>
    <class kind="struct">SetDefaultBuffersCommand</class>
    <class kind="struct">SetRenderStateCommand</class>
    <class kind="struct">SetRenderStateExCommand</class>
    <class kind="struct">CopyTextureCommand</class>
    <class kind="struct">BindBufferCommand</class>
    <class kind="struct">UpdateBufferCommand</class>
    <class kind="struct">UpdateBindBuffer</class>
  </compound>
  <compound kind="group">
    <name>Buffers</name>
    <title>Buffers</title>
    <filename>group___buffers.html</filename>
    <class kind="struct">BufferInfo</class>
    <class kind="class">IBuffer</class>
    <class kind="class">ShaderInputLayout</class>
    <class kind="class">InputLayoutDescriptor</class>
    <class kind="class">BufferObject</class>
    <member kind="enumeration">
      <type></type>
      <name>BufferType</name>
      <anchorfile>group___buffers.html</anchorfile>
      <anchor>ga91d75476132b7df9aec66b0affb6a44a</anchor>
      <arglist></arglist>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aa10461f19cdb5aadba2fc9986be6400bd">VertexBuffer</enumvalue>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aa7c3895116254ff0417e58b6286de27c0">IndexBuffer</enumvalue>
      <enumvalue file="group___buffers.html" anchor="gga91d75476132b7df9aec66b0affb6a44aaf09d0dd3c08eeabc5b432609f31d0a8c">ConstantBuffer</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>Resources</name>
    <title>Resources</title>
    <filename>group___resources.html</filename>
    <subgroup>Buffers</subgroup>
    <subgroup>Textures</subgroup>
    <subgroup>RenderTargets</subgroup>
    <subgroup>Shaders</subgroup>
    <subgroup>PipelineState</subgroup>
    <class kind="class">IBuffer</class>
    <class kind="class">TextureObject</class>
    <class kind="class">RenderTargetObject</class>
    <class kind="class">ShaderInputLayout</class>
    <class kind="class">InputLayoutDescriptor</class>
    <class kind="class">VertexShader</class>
    <class kind="class">PixelShader</class>
    <class kind="class">GeometryShader</class>
    <class kind="class">ControlShader</class>
    <class kind="class">EvaluationShader</class>
    <class kind="class">ComputeShader</class>
    <class kind="class">BufferObject</class>
    <class kind="struct">MaterialObject</class>
    <class kind="class">ResourcePtr</class>
  </compound>
  <compound kind="group">
    <name>Textures</name>
    <title>Textures</title>
    <filename>group___textures.html</filename>
    <class kind="struct">TextureInfo</class>
    <class kind="class">TextureObject</class>
    <member kind="enumeration">
      <type></type>
      <name>TextureUse</name>
      <anchorfile>group___textures.html</anchorfile>
      <anchor>ga48164fb43b28aacf28ac6403bc1003be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MipMapFilter</name>
      <anchorfile>group___textures.html</anchorfile>
      <anchor>ga8bb430fac555470e0ba6d3140a26ca0d</anchor>
      <arglist></arglist>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da3cfce651e667ab85486dd42a8185f98a">Box</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dac751af30f7a031f44487914a272540ad">Tent</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da999a06f28346262ef9e1699d9fc1ab56">Bell</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dad21669aa5b1d32ab6e8965d28bcee72b">bSpline</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da8c676a88df49c6e1127bb3bf7a4eeb5e">Mitchell</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da4f7171cd515d80506104b31c05977294">Lanczos3</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dab3935d5829173f20d58fc5f0405867b9">Blackman</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dac0d14107380ce2a03f801c68a8eba286">Lanczos4</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da9a4c00e787f3250ecac5103939747f01">Lanczos6</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da240cd84e8f070bf530039e635a5e9c33">Lanczos12</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0daec0971fb900874b1c59179d9cd336878">Kaiser</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0dafedf7ba6075fb5526a7ace0b9385528d">Gaussian</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da49527946e8d43cb5dc90935f68c53d79">Catmullrom</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da581d00b49c44d776adf618b708c07bc5">QuadraticInterpolation</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da63f6604adf1c32c5804dd6c3ae443010">QuadraticAproximation</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da4143c2f53e5f3977bb2baa975a9c0322">QuadraticMix</enumvalue>
      <enumvalue file="group___textures.html" anchor="gga8bb430fac555470e0ba6d3140a26ca0da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>RenderTargets</name>
    <title>RenderTargets</title>
    <filename>group___render_targets.html</filename>
    <class kind="struct">RenderTargetDescriptor</class>
    <class kind="class">RenderTargetObject</class>
  </compound>
  <compound kind="group">
    <name>Shaders</name>
    <title>Shaders</title>
    <filename>group___shaders.html</filename>
    <class kind="class">ShaderInputLayout</class>
    <class kind="class">InputLayoutDescriptor</class>
    <class kind="class">VertexShader</class>
    <class kind="class">PixelShader</class>
    <class kind="class">GeometryShader</class>
    <class kind="class">ControlShader</class>
    <class kind="class">EvaluationShader</class>
    <class kind="class">ComputeShader</class>
    <member kind="enumeration">
      <type></type>
      <name>ShaderType</name>
      <anchorfile>group___shaders.html</anchorfile>
      <anchor>gaf29b077bc60383fffd088d7be6b682eb</anchor>
      <arglist></arglist>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682ebaeb3ca4dac3e206977e0b7d998eefcc33">VertexShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba54d3d36aabc3abac323576e3d22a3d2c">PixelShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba87fd5b66e314d52345d46590e7124805">GeometryShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682ebae114a7addc54ad55b1d599401ceca58f">TesselationControlShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba2de8d46352f51005bae9f2a120d54ada">TesselationEvaluationShader</enumvalue>
      <enumvalue file="group___shaders.html" anchor="ggaf29b077bc60383fffd088d7be6b682eba2216355d14abbc1a80dadd4f881c0f39">ComputeShader</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>PipelineState</name>
    <title>PipelineState</title>
    <filename>group___pipeline_state.html</filename>
    <class kind="struct">BlendingInfo</class>
    <class kind="class">BlendingState</class>
    <class kind="struct">DepthStencilInfo</class>
    <class kind="class">DepthStencilState</class>
    <class kind="struct">RasterizerStateInfo</class>
    <class kind="class">RasterizerState</class>
    <member kind="enumeration">
      <type></type>
      <name>BlendOperation</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gaa69fa0568995455c90fac4766091faa8</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8aec211f7c20af43e742bf2570c3cb84f9">Add</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a1d9baf077ee87921f57a8fe42d510b65">Subtract</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8abd5458190996e76988cb2f27a820c685">ReverseSubtract</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a78d811e98514cd165dda532286610fd2">Min</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaa69fa0568995455c90fac4766091faa8a6a061313d22e51e0f25b7cd4dc065233">Max</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendFactor</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gae31654a0e43bd4babae61897ea0e5100</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad7ed4ee1df437474d005188535f74875">Zero</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a06c2cea18679d64399783748fa367bdd">One</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a2ad714e29d37896d79187312086bc6fe">SrcColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100afaedf511c99a5461048fd6a3b73da26c">DstColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad5c7b7f0102df3f7305c43f73fc3a498">SrcAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100af72dbe2436b38a39e5927ed644e6818b">DstAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a55f83129155916260b22240fef112752">BlendFactor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a57e4c4e7cb12a865a60d272d9adfc33b">InverseSrcColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100a6217622f995a3ee912260f894f5f8a35">InverseDstColor</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100aa119ab34e2421efaa116f3d9cd49e880">InverseSrcAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad41caf09d26d4d092361d7703e26c594">InverseDstAlpha</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggae31654a0e43bd4babae61897ea0e5100ad98d1d89eac7776bf55cec8d0583b937">InverseBlendFactor</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CullMode</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gaddb56e6474b18716c1c05249740ec257</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a5835bab1ade0060909e31a06af2e2cde">Front</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a0557fa923dcee4d0f86b1409f5c2167f">Back</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggaddb56e6474b18716c1c05249740ec257a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FillMode</name>
      <anchorfile>group___pipeline_state.html</anchorfile>
      <anchor>gab46b9183b8f7ef078afdbf384003670d</anchor>
      <arglist></arglist>
      <enumvalue file="group___pipeline_state.html" anchor="ggab46b9183b8f7ef078afdbf384003670dae41480b6bbfbf7407974a88d3d34f4fa">Solid</enumvalue>
      <enumvalue file="group___pipeline_state.html" anchor="ggab46b9183b8f7ef078afdbf384003670da33e42d0f3b166a4c405127e4412fbef2">Wireframe</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>Helpers</name>
    <title>Helpers</title>
    <filename>group___helpers.html</filename>
    <class kind="class">sw::Semaphore</class>
    <class kind="class">SpinLock</class>
    <class kind="class">sw::ThreadsBarrier</class>
    <class kind="class">sw::ThreadsLatch</class>
    <class kind="struct">Nullable</class>
    <class kind="class">ObjectDeleterKey</class>
  </compound>
  <compound kind="group">
    <name>Reflection</name>
    <title>Reflection</title>
    <filename>group___reflection.html</filename>
    <class kind="class">EngineObject</class>
    <docanchor file="group___reflection" title="Tworzenie własnych klas">CreatingOwnClasses</docanchor>
    <docanchor file="group___reflection" title="Deklarowanie typów obiektów">DeklaringRTTRTypes</docanchor>
    <docanchor file="group___reflection" title="Aktorzy z klasami zagnieżdżonymi">RTTRNestedClasses</docanchor>
  </compound>
  <compound kind="group">
    <name>CommonLibrary</name>
    <title>Common Library</title>
    <filename>group___common_library.html</filename>
    <subgroup>Helpers</subgroup>
    <subgroup>Reflection</subgroup>
    <subgroup>HierarchicalChunkedFormat</subgroup>
    <subgroup>KeyFrameAnimation</subgroup>
    <subgroup>Serialization</subgroup>
  </compound>
  <compound kind="group">
    <name>HierarchicalChunkedFormat</name>
    <title>Hierarchical Chunked Format</title>
    <filename>group___hierarchical_chunked_format.html</filename>
    <class kind="class">sw::Attribute</class>
    <class kind="class">sw::Chunk</class>
    <class kind="class">sw::HCF</class>
    <member kind="enumeration">
      <type></type>
      <name>WriteMode</name>
      <anchorfile>group___hierarchical_chunked_format.html</anchorfile>
      <anchor>gac541f202a45393a2e8b72f2b53d04d87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>KeyFrameAnimation</name>
    <title>Keyframe Animation</title>
    <filename>group___key_frame_animation.html</filename>
    <subgroup>Interpolators</subgroup>
    <subgroup>Timelines</subgroup>
    <class kind="class">AnimationTyped</class>
    <class kind="class">AnimationImpl</class>
    <class kind="class">AnimationSet</class>
    <class kind="class">AnimEvaluator</class>
    <class kind="class">IAnimation</class>
    <class kind="struct">Key</class>
    <class kind="struct">KeySet</class>
  </compound>
  <compound kind="group">
    <name>Interpolators</name>
    <title>Interpolators</title>
    <filename>group___interpolators.html</filename>
    <class kind="class">CosinusInterpolator</class>
    <class kind="class">DiscreteInterpolator</class>
    <class kind="class">IInterpolator</class>
    <class kind="class">LinearInterpolator</class>
    <docanchor file="group___interpolators" title="interpolators">Writing</docanchor>
  </compound>
  <compound kind="group">
    <name>Timelines</name>
    <title>Timelines</title>
    <filename>group___timelines.html</filename>
    <class kind="class">TimelineBase</class>
  </compound>
  <compound kind="group">
    <name>Serialization</name>
    <title>Serialization</title>
    <filename>group___serialization.html</filename>
    <subgroup>SerializerJSON</subgroup>
    <subgroup>SerializerXML</subgroup>
    <class kind="class">IDeserializer</class>
    <class kind="struct">SerializationContext</class>
    <class kind="class">ISerializer</class>
    <member kind="enumeration">
      <type></type>
      <name>WritingMode</name>
      <anchorfile>group___serialization.html</anchorfile>
      <anchor>ga46d11c2d08142ef2d32761c04d1aaa26</anchor>
      <arglist></arglist>
      <enumvalue file="group___serialization.html" anchor="gga46d11c2d08142ef2d32761c04d1aaa26a4051f1312e691dc1d55f4006dfa59bb4">Sparing</enumvalue>
      <enumvalue file="group___serialization.html" anchor="gga46d11c2d08142ef2d32761c04d1aaa26a4b8123df4e2b3456270c11394adf7607">Readable</enumvalue>
    </member>
  </compound>
  <compound kind="group">
    <name>SerializerJSON</name>
    <title>JSON Serializer</title>
    <filename>group___serializer_j_s_o_n.html</filename>
  </compound>
  <compound kind="group">
    <name>SerializerXML</name>
    <title>XML Serializer</title>
    <filename>group___serializer_x_m_l.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">Intro</docanchor>
    <docanchor file="index" title="Road map">RoadMap</docanchor>
    <docanchor file="index">Installation</docanchor>
    <docanchor file="index" title="Linking Libraries">Installation_Linking</docanchor>
    <docanchor file="index">Installation_Usage</docanchor>
  </compound>
</tagfile>
